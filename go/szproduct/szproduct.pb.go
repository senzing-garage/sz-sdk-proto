// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v4.25.1
// source: szproduct.proto

package szproduct

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetLicenseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLicenseRequest) Reset() {
	*x = GetLicenseRequest{}
	mi := &file_szproduct_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicenseRequest) ProtoMessage() {}

func (x *GetLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_szproduct_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicenseRequest.ProtoReflect.Descriptor instead.
func (*GetLicenseRequest) Descriptor() ([]byte, []int) {
	return file_szproduct_proto_rawDescGZIP(), []int{0}
}

type GetLicenseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetLicenseResponse) Reset() {
	*x = GetLicenseResponse{}
	mi := &file_szproduct_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLicenseResponse) ProtoMessage() {}

func (x *GetLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_szproduct_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLicenseResponse.ProtoReflect.Descriptor instead.
func (*GetLicenseResponse) Descriptor() ([]byte, []int) {
	return file_szproduct_proto_rawDescGZIP(), []int{1}
}

func (x *GetLicenseResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

type GetVersionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionRequest) Reset() {
	*x = GetVersionRequest{}
	mi := &file_szproduct_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionRequest) ProtoMessage() {}

func (x *GetVersionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_szproduct_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionRequest.ProtoReflect.Descriptor instead.
func (*GetVersionRequest) Descriptor() ([]byte, []int) {
	return file_szproduct_proto_rawDescGZIP(), []int{2}
}

type GetVersionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Result        string                 `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetVersionResponse) Reset() {
	*x = GetVersionResponse{}
	mi := &file_szproduct_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetVersionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionResponse) ProtoMessage() {}

func (x *GetVersionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_szproduct_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionResponse.ProtoReflect.Descriptor instead.
func (*GetVersionResponse) Descriptor() ([]byte, []int) {
	return file_szproduct_proto_rawDescGZIP(), []int{3}
}

func (x *GetVersionResponse) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_szproduct_proto protoreflect.FileDescriptor

const file_szproduct_proto_rawDesc = "" +
	"\n" +
	"\x0fszproduct.proto\x12\tszproduct\"\x13\n" +
	"\x11GetLicenseRequest\",\n" +
	"\x12GetLicenseResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result\"\x13\n" +
	"\x11GetVersionRequest\",\n" +
	"\x12GetVersionResponse\x12\x16\n" +
	"\x06result\x18\x01 \x01(\tR\x06result2\xa5\x01\n" +
	"\tSzProduct\x12K\n" +
	"\n" +
	"GetLicense\x12\x1c.szproduct.GetLicenseRequest\x1a\x1d.szproduct.GetLicenseResponse\"\x00\x12K\n" +
	"\n" +
	"GetVersion\x12\x1c.szproduct.GetVersionRequest\x1a\x1d.szproduct.GetVersionResponse\"\x00BZ\n" +
	"\x14com.senzing.sdk.grpcB\x0eSzProductProtoZ2github.com/senzing-garage/sz-sdk-go-grpc/szproductb\x06proto3"

var (
	file_szproduct_proto_rawDescOnce sync.Once
	file_szproduct_proto_rawDescData []byte
)

func file_szproduct_proto_rawDescGZIP() []byte {
	file_szproduct_proto_rawDescOnce.Do(func() {
		file_szproduct_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_szproduct_proto_rawDesc), len(file_szproduct_proto_rawDesc)))
	})
	return file_szproduct_proto_rawDescData
}

var file_szproduct_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_szproduct_proto_goTypes = []any{
	(*GetLicenseRequest)(nil),  // 0: szproduct.GetLicenseRequest
	(*GetLicenseResponse)(nil), // 1: szproduct.GetLicenseResponse
	(*GetVersionRequest)(nil),  // 2: szproduct.GetVersionRequest
	(*GetVersionResponse)(nil), // 3: szproduct.GetVersionResponse
}
var file_szproduct_proto_depIdxs = []int32{
	0, // 0: szproduct.SzProduct.GetLicense:input_type -> szproduct.GetLicenseRequest
	2, // 1: szproduct.SzProduct.GetVersion:input_type -> szproduct.GetVersionRequest
	1, // 2: szproduct.SzProduct.GetLicense:output_type -> szproduct.GetLicenseResponse
	3, // 3: szproduct.SzProduct.GetVersion:output_type -> szproduct.GetVersionResponse
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_szproduct_proto_init() }
func file_szproduct_proto_init() {
	if File_szproduct_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_szproduct_proto_rawDesc), len(file_szproduct_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_szproduct_proto_goTypes,
		DependencyIndexes: file_szproduct_proto_depIdxs,
		MessageInfos:      file_szproduct_proto_msgTypes,
	}.Build()
	File_szproduct_proto = out.File
	file_szproduct_proto_goTypes = nil
	file_szproduct_proto_depIdxs = nil
}
