// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szconfig.proto

#include "szconfig.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace szconfig {
PROTOBUF_CONSTEXPR AddDataSourceRequest::AddDataSourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddDataSourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDataSourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDataSourceRequestDefaultTypeInternal() {}
  union {
    AddDataSourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDataSourceRequestDefaultTypeInternal _AddDataSourceRequest_default_instance_;
PROTOBUF_CONSTEXPR AddDataSourceResponse::AddDataSourceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddDataSourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddDataSourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddDataSourceResponseDefaultTypeInternal() {}
  union {
    AddDataSourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddDataSourceResponseDefaultTypeInternal _AddDataSourceResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteDataSourceRequest::DeleteDataSourceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDataSourceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDataSourceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDataSourceRequestDefaultTypeInternal() {}
  union {
    DeleteDataSourceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDataSourceRequestDefaultTypeInternal _DeleteDataSourceRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteDataSourceResponse::DeleteDataSourceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.config_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDataSourceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDataSourceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDataSourceResponseDefaultTypeInternal() {}
  union {
    DeleteDataSourceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDataSourceResponseDefaultTypeInternal _DeleteDataSourceResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDataSourcesRequest::GetDataSourcesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDataSourcesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDataSourcesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDataSourcesRequestDefaultTypeInternal() {}
  union {
    GetDataSourcesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDataSourcesRequestDefaultTypeInternal _GetDataSourcesRequest_default_instance_;
PROTOBUF_CONSTEXPR GetDataSourcesResponse::GetDataSourcesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDataSourcesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDataSourcesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDataSourcesResponseDefaultTypeInternal() {}
  union {
    GetDataSourcesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDataSourcesResponseDefaultTypeInternal _GetDataSourcesResponse_default_instance_;
PROTOBUF_CONSTEXPR VerifyConfigRequest::VerifyConfigRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VerifyConfigRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VerifyConfigRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VerifyConfigRequestDefaultTypeInternal() {}
  union {
    VerifyConfigRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VerifyConfigRequestDefaultTypeInternal _VerifyConfigRequest_default_instance_;
PROTOBUF_CONSTEXPR VerifyConfigResponse::VerifyConfigResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct VerifyConfigResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VerifyConfigResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~VerifyConfigResponseDefaultTypeInternal() {}
  union {
    VerifyConfigResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VerifyConfigResponseDefaultTypeInternal _VerifyConfigResponse_default_instance_;
}  // namespace szconfig
static ::_pb::Metadata file_level_metadata_szconfig_2eproto[8];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_szconfig_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_szconfig_2eproto = nullptr;

const uint32_t TableStruct_szconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::AddDataSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::AddDataSourceRequest, _impl_.config_definition_),
  PROTOBUF_FIELD_OFFSET(::szconfig::AddDataSourceRequest, _impl_.data_source_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::AddDataSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::AddDataSourceResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::szconfig::AddDataSourceResponse, _impl_.config_definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::DeleteDataSourceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::DeleteDataSourceRequest, _impl_.config_definition_),
  PROTOBUF_FIELD_OFFSET(::szconfig::DeleteDataSourceRequest, _impl_.data_source_code_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::DeleteDataSourceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::DeleteDataSourceResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::szconfig::DeleteDataSourceResponse, _impl_.config_definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::GetDataSourcesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::GetDataSourcesRequest, _impl_.config_definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::GetDataSourcesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::GetDataSourcesResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::VerifyConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::VerifyConfigRequest, _impl_.config_definition_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfig::VerifyConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szconfig::VerifyConfigResponse, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::szconfig::AddDataSourceRequest)},
  { 8, -1, -1, sizeof(::szconfig::AddDataSourceResponse)},
  { 16, -1, -1, sizeof(::szconfig::DeleteDataSourceRequest)},
  { 24, -1, -1, sizeof(::szconfig::DeleteDataSourceResponse)},
  { 32, -1, -1, sizeof(::szconfig::GetDataSourcesRequest)},
  { 39, -1, -1, sizeof(::szconfig::GetDataSourcesResponse)},
  { 46, -1, -1, sizeof(::szconfig::VerifyConfigRequest)},
  { 53, -1, -1, sizeof(::szconfig::VerifyConfigResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::szconfig::_AddDataSourceRequest_default_instance_._instance,
  &::szconfig::_AddDataSourceResponse_default_instance_._instance,
  &::szconfig::_DeleteDataSourceRequest_default_instance_._instance,
  &::szconfig::_DeleteDataSourceResponse_default_instance_._instance,
  &::szconfig::_GetDataSourcesRequest_default_instance_._instance,
  &::szconfig::_GetDataSourcesResponse_default_instance_._instance,
  &::szconfig::_VerifyConfigRequest_default_instance_._instance,
  &::szconfig::_VerifyConfigResponse_default_instance_._instance,
};

const char descriptor_table_protodef_szconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016szconfig.proto\022\010szconfig\"K\n\024AddDataSou"
  "rceRequest\022\031\n\021config_definition\030\001 \001(\t\022\030\n"
  "\020data_source_code\030\002 \001(\t\"B\n\025AddDataSource"
  "Response\022\016\n\006result\030\001 \001(\t\022\031\n\021config_defin"
  "ition\030\002 \001(\t\"N\n\027DeleteDataSourceRequest\022\031"
  "\n\021config_definition\030\001 \001(\t\022\030\n\020data_source"
  "_code\030\002 \001(\t\"E\n\030DeleteDataSourceResponse\022"
  "\016\n\006result\030\001 \001(\t\022\031\n\021config_definition\030\002 \001"
  "(\t\"2\n\025GetDataSourcesRequest\022\031\n\021config_de"
  "finition\030\001 \001(\t\"(\n\026GetDataSourcesResponse"
  "\022\016\n\006result\030\001 \001(\t\"0\n\023VerifyConfigRequest\022"
  "\031\n\021config_definition\030\001 \001(\t\"&\n\024VerifyConf"
  "igResponse\022\016\n\006result\030\001 \001(\0102\343\002\n\010SzConfig\022"
  "R\n\rAddDataSource\022\036.szconfig.AddDataSourc"
  "eRequest\032\037.szconfig.AddDataSourceRespons"
  "e\"\000\022[\n\020DeleteDataSource\022!.szconfig.Delet"
  "eDataSourceRequest\032\".szconfig.DeleteData"
  "SourceResponse\"\000\022U\n\016GetDataSources\022\037.szc"
  "onfig.GetDataSourcesRequest\032 .szconfig.G"
  "etDataSourcesResponse\"\000\022O\n\014VerifyConfig\022"
  "\035.szconfig.VerifyConfigRequest\032\036.szconfi"
  "g.VerifyConfigResponse\"\000BX\n\024com.senzing."
  "sdk.grpcB\rSzConfigProtoZ1github.com/senz"
  "ing-garage/sz-sdk-go-grpc/szconfigb\006prot"
  "o3"
  ;
static ::_pbi::once_flag descriptor_table_szconfig_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_szconfig_2eproto = {
    false, false, 962, descriptor_table_protodef_szconfig_2eproto,
    "szconfig.proto",
    &descriptor_table_szconfig_2eproto_once, nullptr, 0, 8,
    schemas, file_default_instances, TableStruct_szconfig_2eproto::offsets,
    file_level_metadata_szconfig_2eproto, file_level_enum_descriptors_szconfig_2eproto,
    file_level_service_descriptors_szconfig_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_szconfig_2eproto_getter() {
  return &descriptor_table_szconfig_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_szconfig_2eproto(&descriptor_table_szconfig_2eproto);
namespace szconfig {

// ===================================================================

class AddDataSourceRequest::_Internal {
 public:
};

AddDataSourceRequest::AddDataSourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.AddDataSourceRequest)
}
AddDataSourceRequest::AddDataSourceRequest(const AddDataSourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddDataSourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , decltype(_impl_.data_source_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_definition().empty()) {
    _this->_impl_.config_definition_.Set(from._internal_config_definition(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.AddDataSourceRequest)
}

inline void AddDataSourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , decltype(_impl_.data_source_code_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddDataSourceRequest::~AddDataSourceRequest() {
  // @@protoc_insertion_point(destructor:szconfig.AddDataSourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddDataSourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_definition_.Destroy();
  _impl_.data_source_code_.Destroy();
}

void AddDataSourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddDataSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.AddDataSourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_definition_.ClearToEmpty();
  _impl_.data_source_code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddDataSourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string config_definition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_config_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.AddDataSourceRequest.config_definition"));
        } else
          goto handle_unusual;
        continue;
      // string data_source_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.AddDataSourceRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddDataSourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.AddDataSourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_definition().data(), static_cast<int>(this->_internal_config_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.AddDataSourceRequest.config_definition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_definition(), target);
  }

  // string data_source_code = 2;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.AddDataSourceRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data_source_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.AddDataSourceRequest)
  return target;
}

size_t AddDataSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.AddDataSourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_definition());
  }

  // string data_source_code = 2;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddDataSourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddDataSourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddDataSourceRequest::GetClassData() const { return &_class_data_; }


void AddDataSourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddDataSourceRequest*>(&to_msg);
  auto& from = static_cast<const AddDataSourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.AddDataSourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_definition().empty()) {
    _this->_internal_set_config_definition(from._internal_config_definition());
  }
  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddDataSourceRequest::CopyFrom(const AddDataSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.AddDataSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDataSourceRequest::IsInitialized() const {
  return true;
}

void AddDataSourceRequest::InternalSwap(AddDataSourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_definition_, lhs_arena,
      &other->_impl_.config_definition_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AddDataSourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[0]);
}

// ===================================================================

class AddDataSourceResponse::_Internal {
 public:
};

AddDataSourceResponse::AddDataSourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.AddDataSourceResponse)
}
AddDataSourceResponse::AddDataSourceResponse(const AddDataSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddDataSourceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_definition().empty()) {
    _this->_impl_.config_definition_.Set(from._internal_config_definition(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.AddDataSourceResponse)
}

inline void AddDataSourceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddDataSourceResponse::~AddDataSourceResponse() {
  // @@protoc_insertion_point(destructor:szconfig.AddDataSourceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddDataSourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
  _impl_.config_definition_.Destroy();
}

void AddDataSourceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddDataSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.AddDataSourceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _impl_.config_definition_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddDataSourceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.AddDataSourceResponse.result"));
        } else
          goto handle_unusual;
        continue;
      // string config_definition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.AddDataSourceResponse.config_definition"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddDataSourceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.AddDataSourceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.AddDataSourceResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  // string config_definition = 2;
  if (!this->_internal_config_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_definition().data(), static_cast<int>(this->_internal_config_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.AddDataSourceResponse.config_definition");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.AddDataSourceResponse)
  return target;
}

size_t AddDataSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.AddDataSourceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // string config_definition = 2;
  if (!this->_internal_config_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_definition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddDataSourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddDataSourceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddDataSourceResponse::GetClassData() const { return &_class_data_; }


void AddDataSourceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddDataSourceResponse*>(&to_msg);
  auto& from = static_cast<const AddDataSourceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.AddDataSourceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  if (!from._internal_config_definition().empty()) {
    _this->_internal_set_config_definition(from._internal_config_definition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddDataSourceResponse::CopyFrom(const AddDataSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.AddDataSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddDataSourceResponse::IsInitialized() const {
  return true;
}

void AddDataSourceResponse::InternalSwap(AddDataSourceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_definition_, lhs_arena,
      &other->_impl_.config_definition_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AddDataSourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[1]);
}

// ===================================================================

class DeleteDataSourceRequest::_Internal {
 public:
};

DeleteDataSourceRequest::DeleteDataSourceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.DeleteDataSourceRequest)
}
DeleteDataSourceRequest::DeleteDataSourceRequest(const DeleteDataSourceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDataSourceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , decltype(_impl_.data_source_code_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_definition().empty()) {
    _this->_impl_.config_definition_.Set(from._internal_config_definition(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.DeleteDataSourceRequest)
}

inline void DeleteDataSourceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , decltype(_impl_.data_source_code_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDataSourceRequest::~DeleteDataSourceRequest() {
  // @@protoc_insertion_point(destructor:szconfig.DeleteDataSourceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDataSourceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_definition_.Destroy();
  _impl_.data_source_code_.Destroy();
}

void DeleteDataSourceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDataSourceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.DeleteDataSourceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_definition_.ClearToEmpty();
  _impl_.data_source_code_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDataSourceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string config_definition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_config_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.DeleteDataSourceRequest.config_definition"));
        } else
          goto handle_unusual;
        continue;
      // string data_source_code = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.DeleteDataSourceRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDataSourceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.DeleteDataSourceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_definition().data(), static_cast<int>(this->_internal_config_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.DeleteDataSourceRequest.config_definition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_definition(), target);
  }

  // string data_source_code = 2;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.DeleteDataSourceRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_data_source_code(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.DeleteDataSourceRequest)
  return target;
}

size_t DeleteDataSourceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.DeleteDataSourceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_definition());
  }

  // string data_source_code = 2;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDataSourceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDataSourceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDataSourceRequest::GetClassData() const { return &_class_data_; }


void DeleteDataSourceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDataSourceRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDataSourceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.DeleteDataSourceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_definition().empty()) {
    _this->_internal_set_config_definition(from._internal_config_definition());
  }
  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDataSourceRequest::CopyFrom(const DeleteDataSourceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.DeleteDataSourceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDataSourceRequest::IsInitialized() const {
  return true;
}

void DeleteDataSourceRequest::InternalSwap(DeleteDataSourceRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_definition_, lhs_arena,
      &other->_impl_.config_definition_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDataSourceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[2]);
}

// ===================================================================

class DeleteDataSourceResponse::_Internal {
 public:
};

DeleteDataSourceResponse::DeleteDataSourceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.DeleteDataSourceResponse)
}
DeleteDataSourceResponse::DeleteDataSourceResponse(const DeleteDataSourceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDataSourceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_definition().empty()) {
    _this->_impl_.config_definition_.Set(from._internal_config_definition(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.DeleteDataSourceResponse)
}

inline void DeleteDataSourceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDataSourceResponse::~DeleteDataSourceResponse() {
  // @@protoc_insertion_point(destructor:szconfig.DeleteDataSourceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDataSourceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
  _impl_.config_definition_.Destroy();
}

void DeleteDataSourceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDataSourceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.DeleteDataSourceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _impl_.config_definition_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDataSourceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.DeleteDataSourceResponse.result"));
        } else
          goto handle_unusual;
        continue;
      // string config_definition = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_config_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.DeleteDataSourceResponse.config_definition"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDataSourceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.DeleteDataSourceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.DeleteDataSourceResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  // string config_definition = 2;
  if (!this->_internal_config_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_definition().data(), static_cast<int>(this->_internal_config_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.DeleteDataSourceResponse.config_definition");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_config_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.DeleteDataSourceResponse)
  return target;
}

size_t DeleteDataSourceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.DeleteDataSourceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  // string config_definition = 2;
  if (!this->_internal_config_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_definition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDataSourceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDataSourceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDataSourceResponse::GetClassData() const { return &_class_data_; }


void DeleteDataSourceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDataSourceResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDataSourceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.DeleteDataSourceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  if (!from._internal_config_definition().empty()) {
    _this->_internal_set_config_definition(from._internal_config_definition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDataSourceResponse::CopyFrom(const DeleteDataSourceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.DeleteDataSourceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDataSourceResponse::IsInitialized() const {
  return true;
}

void DeleteDataSourceResponse::InternalSwap(DeleteDataSourceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_definition_, lhs_arena,
      &other->_impl_.config_definition_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDataSourceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[3]);
}

// ===================================================================

class GetDataSourcesRequest::_Internal {
 public:
};

GetDataSourcesRequest::GetDataSourcesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.GetDataSourcesRequest)
}
GetDataSourcesRequest::GetDataSourcesRequest(const GetDataSourcesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDataSourcesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_definition().empty()) {
    _this->_impl_.config_definition_.Set(from._internal_config_definition(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.GetDataSourcesRequest)
}

inline void GetDataSourcesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDataSourcesRequest::~GetDataSourcesRequest() {
  // @@protoc_insertion_point(destructor:szconfig.GetDataSourcesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDataSourcesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_definition_.Destroy();
}

void GetDataSourcesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDataSourcesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.GetDataSourcesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_definition_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDataSourcesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string config_definition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_config_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.GetDataSourcesRequest.config_definition"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDataSourcesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.GetDataSourcesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_definition().data(), static_cast<int>(this->_internal_config_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.GetDataSourcesRequest.config_definition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.GetDataSourcesRequest)
  return target;
}

size_t GetDataSourcesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.GetDataSourcesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_definition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDataSourcesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDataSourcesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDataSourcesRequest::GetClassData() const { return &_class_data_; }


void GetDataSourcesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDataSourcesRequest*>(&to_msg);
  auto& from = static_cast<const GetDataSourcesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.GetDataSourcesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_definition().empty()) {
    _this->_internal_set_config_definition(from._internal_config_definition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDataSourcesRequest::CopyFrom(const GetDataSourcesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.GetDataSourcesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataSourcesRequest::IsInitialized() const {
  return true;
}

void GetDataSourcesRequest::InternalSwap(GetDataSourcesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_definition_, lhs_arena,
      &other->_impl_.config_definition_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDataSourcesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[4]);
}

// ===================================================================

class GetDataSourcesResponse::_Internal {
 public:
};

GetDataSourcesResponse::GetDataSourcesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.GetDataSourcesResponse)
}
GetDataSourcesResponse::GetDataSourcesResponse(const GetDataSourcesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDataSourcesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.GetDataSourcesResponse)
}

inline void GetDataSourcesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDataSourcesResponse::~GetDataSourcesResponse() {
  // @@protoc_insertion_point(destructor:szconfig.GetDataSourcesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDataSourcesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetDataSourcesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDataSourcesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.GetDataSourcesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDataSourcesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.GetDataSourcesResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDataSourcesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.GetDataSourcesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.GetDataSourcesResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.GetDataSourcesResponse)
  return target;
}

size_t GetDataSourcesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.GetDataSourcesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDataSourcesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDataSourcesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDataSourcesResponse::GetClassData() const { return &_class_data_; }


void GetDataSourcesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDataSourcesResponse*>(&to_msg);
  auto& from = static_cast<const GetDataSourcesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.GetDataSourcesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDataSourcesResponse::CopyFrom(const GetDataSourcesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.GetDataSourcesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDataSourcesResponse::IsInitialized() const {
  return true;
}

void GetDataSourcesResponse::InternalSwap(GetDataSourcesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDataSourcesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[5]);
}

// ===================================================================

class VerifyConfigRequest::_Internal {
 public:
};

VerifyConfigRequest::VerifyConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.VerifyConfigRequest)
}
VerifyConfigRequest::VerifyConfigRequest(const VerifyConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VerifyConfigRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_config_definition().empty()) {
    _this->_impl_.config_definition_.Set(from._internal_config_definition(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szconfig.VerifyConfigRequest)
}

inline void VerifyConfigRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_definition_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.config_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.config_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

VerifyConfigRequest::~VerifyConfigRequest() {
  // @@protoc_insertion_point(destructor:szconfig.VerifyConfigRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VerifyConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.config_definition_.Destroy();
}

void VerifyConfigRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VerifyConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.VerifyConfigRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_definition_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VerifyConfigRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string config_definition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_config_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szconfig.VerifyConfigRequest.config_definition"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VerifyConfigRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.VerifyConfigRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_config_definition().data(), static_cast<int>(this->_internal_config_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfig.VerifyConfigRequest.config_definition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_config_definition(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.VerifyConfigRequest)
  return target;
}

size_t VerifyConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.VerifyConfigRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string config_definition = 1;
  if (!this->_internal_config_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_config_definition());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VerifyConfigRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VerifyConfigRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VerifyConfigRequest::GetClassData() const { return &_class_data_; }


void VerifyConfigRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VerifyConfigRequest*>(&to_msg);
  auto& from = static_cast<const VerifyConfigRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.VerifyConfigRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_config_definition().empty()) {
    _this->_internal_set_config_definition(from._internal_config_definition());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VerifyConfigRequest::CopyFrom(const VerifyConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.VerifyConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyConfigRequest::IsInitialized() const {
  return true;
}

void VerifyConfigRequest::InternalSwap(VerifyConfigRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.config_definition_, lhs_arena,
      &other->_impl_.config_definition_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata VerifyConfigRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[6]);
}

// ===================================================================

class VerifyConfigResponse::_Internal {
 public:
};

VerifyConfigResponse::VerifyConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szconfig.VerifyConfigResponse)
}
VerifyConfigResponse::VerifyConfigResponse(const VerifyConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  VerifyConfigResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:szconfig.VerifyConfigResponse)
}

inline void VerifyConfigResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

VerifyConfigResponse::~VerifyConfigResponse() {
  // @@protoc_insertion_point(destructor:szconfig.VerifyConfigResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void VerifyConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void VerifyConfigResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void VerifyConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfig.VerifyConfigResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* VerifyConfigResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* VerifyConfigResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfig.VerifyConfigResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfig.VerifyConfigResponse)
  return target;
}

size_t VerifyConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfig.VerifyConfigResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool result = 1;
  if (this->_internal_result() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData VerifyConfigResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    VerifyConfigResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*VerifyConfigResponse::GetClassData() const { return &_class_data_; }


void VerifyConfigResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<VerifyConfigResponse*>(&to_msg);
  auto& from = static_cast<const VerifyConfigResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szconfig.VerifyConfigResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void VerifyConfigResponse::CopyFrom(const VerifyConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfig.VerifyConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VerifyConfigResponse::IsInitialized() const {
  return true;
}

void VerifyConfigResponse::InternalSwap(VerifyConfigResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VerifyConfigResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szconfig_2eproto_getter, &descriptor_table_szconfig_2eproto_once,
      file_level_metadata_szconfig_2eproto[7]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace szconfig
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::szconfig::AddDataSourceRequest*
Arena::CreateMaybeMessage< ::szconfig::AddDataSourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::AddDataSourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::AddDataSourceResponse*
Arena::CreateMaybeMessage< ::szconfig::AddDataSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::AddDataSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::DeleteDataSourceRequest*
Arena::CreateMaybeMessage< ::szconfig::DeleteDataSourceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::DeleteDataSourceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::DeleteDataSourceResponse*
Arena::CreateMaybeMessage< ::szconfig::DeleteDataSourceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::DeleteDataSourceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::GetDataSourcesRequest*
Arena::CreateMaybeMessage< ::szconfig::GetDataSourcesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::GetDataSourcesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::GetDataSourcesResponse*
Arena::CreateMaybeMessage< ::szconfig::GetDataSourcesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::GetDataSourcesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::VerifyConfigRequest*
Arena::CreateMaybeMessage< ::szconfig::VerifyConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::VerifyConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfig::VerifyConfigResponse*
Arena::CreateMaybeMessage< ::szconfig::VerifyConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfig::VerifyConfigResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
