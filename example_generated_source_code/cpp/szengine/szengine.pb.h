// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szengine.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_szengine_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_szengine_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_szengine_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_szengine_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_szengine_2eproto;
namespace szengine {
class AddRecordRequest;
struct AddRecordRequestDefaultTypeInternal;
extern AddRecordRequestDefaultTypeInternal _AddRecordRequest_default_instance_;
class AddRecordResponse;
struct AddRecordResponseDefaultTypeInternal;
extern AddRecordResponseDefaultTypeInternal _AddRecordResponse_default_instance_;
class CloseExportRequest;
struct CloseExportRequestDefaultTypeInternal;
extern CloseExportRequestDefaultTypeInternal _CloseExportRequest_default_instance_;
class CloseExportResponse;
struct CloseExportResponseDefaultTypeInternal;
extern CloseExportResponseDefaultTypeInternal _CloseExportResponse_default_instance_;
class CountRedoRecordsRequest;
struct CountRedoRecordsRequestDefaultTypeInternal;
extern CountRedoRecordsRequestDefaultTypeInternal _CountRedoRecordsRequest_default_instance_;
class CountRedoRecordsResponse;
struct CountRedoRecordsResponseDefaultTypeInternal;
extern CountRedoRecordsResponseDefaultTypeInternal _CountRedoRecordsResponse_default_instance_;
class DeleteRecordRequest;
struct DeleteRecordRequestDefaultTypeInternal;
extern DeleteRecordRequestDefaultTypeInternal _DeleteRecordRequest_default_instance_;
class DeleteRecordResponse;
struct DeleteRecordResponseDefaultTypeInternal;
extern DeleteRecordResponseDefaultTypeInternal _DeleteRecordResponse_default_instance_;
class ExportCsvEntityReportRequest;
struct ExportCsvEntityReportRequestDefaultTypeInternal;
extern ExportCsvEntityReportRequestDefaultTypeInternal _ExportCsvEntityReportRequest_default_instance_;
class ExportCsvEntityReportResponse;
struct ExportCsvEntityReportResponseDefaultTypeInternal;
extern ExportCsvEntityReportResponseDefaultTypeInternal _ExportCsvEntityReportResponse_default_instance_;
class ExportJsonEntityReportRequest;
struct ExportJsonEntityReportRequestDefaultTypeInternal;
extern ExportJsonEntityReportRequestDefaultTypeInternal _ExportJsonEntityReportRequest_default_instance_;
class ExportJsonEntityReportResponse;
struct ExportJsonEntityReportResponseDefaultTypeInternal;
extern ExportJsonEntityReportResponseDefaultTypeInternal _ExportJsonEntityReportResponse_default_instance_;
class FetchNextRequest;
struct FetchNextRequestDefaultTypeInternal;
extern FetchNextRequestDefaultTypeInternal _FetchNextRequest_default_instance_;
class FetchNextResponse;
struct FetchNextResponseDefaultTypeInternal;
extern FetchNextResponseDefaultTypeInternal _FetchNextResponse_default_instance_;
class FindInterestingEntitiesByEntityIdRequest;
struct FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal;
extern FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal _FindInterestingEntitiesByEntityIdRequest_default_instance_;
class FindInterestingEntitiesByEntityIdResponse;
struct FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal;
extern FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal _FindInterestingEntitiesByEntityIdResponse_default_instance_;
class FindInterestingEntitiesByRecordIdRequest;
struct FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal;
extern FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal _FindInterestingEntitiesByRecordIdRequest_default_instance_;
class FindInterestingEntitiesByRecordIdResponse;
struct FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal;
extern FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal _FindInterestingEntitiesByRecordIdResponse_default_instance_;
class FindNetworkByEntityIdRequest;
struct FindNetworkByEntityIdRequestDefaultTypeInternal;
extern FindNetworkByEntityIdRequestDefaultTypeInternal _FindNetworkByEntityIdRequest_default_instance_;
class FindNetworkByEntityIdResponse;
struct FindNetworkByEntityIdResponseDefaultTypeInternal;
extern FindNetworkByEntityIdResponseDefaultTypeInternal _FindNetworkByEntityIdResponse_default_instance_;
class FindNetworkByRecordIdRequest;
struct FindNetworkByRecordIdRequestDefaultTypeInternal;
extern FindNetworkByRecordIdRequestDefaultTypeInternal _FindNetworkByRecordIdRequest_default_instance_;
class FindNetworkByRecordIdResponse;
struct FindNetworkByRecordIdResponseDefaultTypeInternal;
extern FindNetworkByRecordIdResponseDefaultTypeInternal _FindNetworkByRecordIdResponse_default_instance_;
class FindPathByEntityIdRequest;
struct FindPathByEntityIdRequestDefaultTypeInternal;
extern FindPathByEntityIdRequestDefaultTypeInternal _FindPathByEntityIdRequest_default_instance_;
class FindPathByEntityIdResponse;
struct FindPathByEntityIdResponseDefaultTypeInternal;
extern FindPathByEntityIdResponseDefaultTypeInternal _FindPathByEntityIdResponse_default_instance_;
class FindPathByRecordIdRequest;
struct FindPathByRecordIdRequestDefaultTypeInternal;
extern FindPathByRecordIdRequestDefaultTypeInternal _FindPathByRecordIdRequest_default_instance_;
class FindPathByRecordIdResponse;
struct FindPathByRecordIdResponseDefaultTypeInternal;
extern FindPathByRecordIdResponseDefaultTypeInternal _FindPathByRecordIdResponse_default_instance_;
class GetActiveConfigIdRequest;
struct GetActiveConfigIdRequestDefaultTypeInternal;
extern GetActiveConfigIdRequestDefaultTypeInternal _GetActiveConfigIdRequest_default_instance_;
class GetActiveConfigIdResponse;
struct GetActiveConfigIdResponseDefaultTypeInternal;
extern GetActiveConfigIdResponseDefaultTypeInternal _GetActiveConfigIdResponse_default_instance_;
class GetEntityByEntityIdRequest;
struct GetEntityByEntityIdRequestDefaultTypeInternal;
extern GetEntityByEntityIdRequestDefaultTypeInternal _GetEntityByEntityIdRequest_default_instance_;
class GetEntityByEntityIdResponse;
struct GetEntityByEntityIdResponseDefaultTypeInternal;
extern GetEntityByEntityIdResponseDefaultTypeInternal _GetEntityByEntityIdResponse_default_instance_;
class GetEntityByRecordIdRequest;
struct GetEntityByRecordIdRequestDefaultTypeInternal;
extern GetEntityByRecordIdRequestDefaultTypeInternal _GetEntityByRecordIdRequest_default_instance_;
class GetEntityByRecordIdResponse;
struct GetEntityByRecordIdResponseDefaultTypeInternal;
extern GetEntityByRecordIdResponseDefaultTypeInternal _GetEntityByRecordIdResponse_default_instance_;
class GetRecordRequest;
struct GetRecordRequestDefaultTypeInternal;
extern GetRecordRequestDefaultTypeInternal _GetRecordRequest_default_instance_;
class GetRecordResponse;
struct GetRecordResponseDefaultTypeInternal;
extern GetRecordResponseDefaultTypeInternal _GetRecordResponse_default_instance_;
class GetRedoRecordRequest;
struct GetRedoRecordRequestDefaultTypeInternal;
extern GetRedoRecordRequestDefaultTypeInternal _GetRedoRecordRequest_default_instance_;
class GetRedoRecordResponse;
struct GetRedoRecordResponseDefaultTypeInternal;
extern GetRedoRecordResponseDefaultTypeInternal _GetRedoRecordResponse_default_instance_;
class GetStatsRequest;
struct GetStatsRequestDefaultTypeInternal;
extern GetStatsRequestDefaultTypeInternal _GetStatsRequest_default_instance_;
class GetStatsResponse;
struct GetStatsResponseDefaultTypeInternal;
extern GetStatsResponseDefaultTypeInternal _GetStatsResponse_default_instance_;
class GetVirtualEntityByRecordIdRequest;
struct GetVirtualEntityByRecordIdRequestDefaultTypeInternal;
extern GetVirtualEntityByRecordIdRequestDefaultTypeInternal _GetVirtualEntityByRecordIdRequest_default_instance_;
class GetVirtualEntityByRecordIdResponse;
struct GetVirtualEntityByRecordIdResponseDefaultTypeInternal;
extern GetVirtualEntityByRecordIdResponseDefaultTypeInternal _GetVirtualEntityByRecordIdResponse_default_instance_;
class HowEntityByEntityIdRequest;
struct HowEntityByEntityIdRequestDefaultTypeInternal;
extern HowEntityByEntityIdRequestDefaultTypeInternal _HowEntityByEntityIdRequest_default_instance_;
class HowEntityByEntityIdResponse;
struct HowEntityByEntityIdResponseDefaultTypeInternal;
extern HowEntityByEntityIdResponseDefaultTypeInternal _HowEntityByEntityIdResponse_default_instance_;
class PreprocessRecordRequest;
struct PreprocessRecordRequestDefaultTypeInternal;
extern PreprocessRecordRequestDefaultTypeInternal _PreprocessRecordRequest_default_instance_;
class PreprocessRecordResponse;
struct PreprocessRecordResponseDefaultTypeInternal;
extern PreprocessRecordResponseDefaultTypeInternal _PreprocessRecordResponse_default_instance_;
class PrimeEngineRequest;
struct PrimeEngineRequestDefaultTypeInternal;
extern PrimeEngineRequestDefaultTypeInternal _PrimeEngineRequest_default_instance_;
class PrimeEngineResponse;
struct PrimeEngineResponseDefaultTypeInternal;
extern PrimeEngineResponseDefaultTypeInternal _PrimeEngineResponse_default_instance_;
class ProcessRedoRecordRequest;
struct ProcessRedoRecordRequestDefaultTypeInternal;
extern ProcessRedoRecordRequestDefaultTypeInternal _ProcessRedoRecordRequest_default_instance_;
class ProcessRedoRecordResponse;
struct ProcessRedoRecordResponseDefaultTypeInternal;
extern ProcessRedoRecordResponseDefaultTypeInternal _ProcessRedoRecordResponse_default_instance_;
class ReevaluateEntityRequest;
struct ReevaluateEntityRequestDefaultTypeInternal;
extern ReevaluateEntityRequestDefaultTypeInternal _ReevaluateEntityRequest_default_instance_;
class ReevaluateEntityResponse;
struct ReevaluateEntityResponseDefaultTypeInternal;
extern ReevaluateEntityResponseDefaultTypeInternal _ReevaluateEntityResponse_default_instance_;
class ReevaluateRecordRequest;
struct ReevaluateRecordRequestDefaultTypeInternal;
extern ReevaluateRecordRequestDefaultTypeInternal _ReevaluateRecordRequest_default_instance_;
class ReevaluateRecordResponse;
struct ReevaluateRecordResponseDefaultTypeInternal;
extern ReevaluateRecordResponseDefaultTypeInternal _ReevaluateRecordResponse_default_instance_;
class ReinitializeRequest;
struct ReinitializeRequestDefaultTypeInternal;
extern ReinitializeRequestDefaultTypeInternal _ReinitializeRequest_default_instance_;
class ReinitializeResponse;
struct ReinitializeResponseDefaultTypeInternal;
extern ReinitializeResponseDefaultTypeInternal _ReinitializeResponse_default_instance_;
class SearchByAttributesRequest;
struct SearchByAttributesRequestDefaultTypeInternal;
extern SearchByAttributesRequestDefaultTypeInternal _SearchByAttributesRequest_default_instance_;
class SearchByAttributesResponse;
struct SearchByAttributesResponseDefaultTypeInternal;
extern SearchByAttributesResponseDefaultTypeInternal _SearchByAttributesResponse_default_instance_;
class StreamExportCsvEntityReportRequest;
struct StreamExportCsvEntityReportRequestDefaultTypeInternal;
extern StreamExportCsvEntityReportRequestDefaultTypeInternal _StreamExportCsvEntityReportRequest_default_instance_;
class StreamExportCsvEntityReportResponse;
struct StreamExportCsvEntityReportResponseDefaultTypeInternal;
extern StreamExportCsvEntityReportResponseDefaultTypeInternal _StreamExportCsvEntityReportResponse_default_instance_;
class StreamExportJsonEntityReportRequest;
struct StreamExportJsonEntityReportRequestDefaultTypeInternal;
extern StreamExportJsonEntityReportRequestDefaultTypeInternal _StreamExportJsonEntityReportRequest_default_instance_;
class StreamExportJsonEntityReportResponse;
struct StreamExportJsonEntityReportResponseDefaultTypeInternal;
extern StreamExportJsonEntityReportResponseDefaultTypeInternal _StreamExportJsonEntityReportResponse_default_instance_;
class WhyEntitiesRequest;
struct WhyEntitiesRequestDefaultTypeInternal;
extern WhyEntitiesRequestDefaultTypeInternal _WhyEntitiesRequest_default_instance_;
class WhyEntitiesResponse;
struct WhyEntitiesResponseDefaultTypeInternal;
extern WhyEntitiesResponseDefaultTypeInternal _WhyEntitiesResponse_default_instance_;
class WhyRecordInEntityRequest;
struct WhyRecordInEntityRequestDefaultTypeInternal;
extern WhyRecordInEntityRequestDefaultTypeInternal _WhyRecordInEntityRequest_default_instance_;
class WhyRecordInEntityResponse;
struct WhyRecordInEntityResponseDefaultTypeInternal;
extern WhyRecordInEntityResponseDefaultTypeInternal _WhyRecordInEntityResponse_default_instance_;
class WhyRecordsRequest;
struct WhyRecordsRequestDefaultTypeInternal;
extern WhyRecordsRequestDefaultTypeInternal _WhyRecordsRequest_default_instance_;
class WhyRecordsResponse;
struct WhyRecordsResponseDefaultTypeInternal;
extern WhyRecordsResponseDefaultTypeInternal _WhyRecordsResponse_default_instance_;
class WhySearchRequest;
struct WhySearchRequestDefaultTypeInternal;
extern WhySearchRequestDefaultTypeInternal _WhySearchRequest_default_instance_;
class WhySearchResponse;
struct WhySearchResponseDefaultTypeInternal;
extern WhySearchResponseDefaultTypeInternal _WhySearchResponse_default_instance_;
}  // namespace szengine
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace szengine {

// ===================================================================


// -------------------------------------------------------------------

class WhySearchResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhySearchResponse) */ {
 public:
  inline WhySearchResponse() : WhySearchResponse(nullptr) {}
  ~WhySearchResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhySearchResponse(::google::protobuf::internal::ConstantInitialized);

  inline WhySearchResponse(const WhySearchResponse& from)
      : WhySearchResponse(nullptr, from) {}
  WhySearchResponse(WhySearchResponse&& from) noexcept
    : WhySearchResponse() {
    *this = ::std::move(from);
  }

  inline WhySearchResponse& operator=(const WhySearchResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhySearchResponse& operator=(WhySearchResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhySearchResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhySearchResponse* internal_default_instance() {
    return reinterpret_cast<const WhySearchResponse*>(
               &_WhySearchResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  friend void swap(WhySearchResponse& a, WhySearchResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WhySearchResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhySearchResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhySearchResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhySearchResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhySearchResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhySearchResponse& from) {
    WhySearchResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhySearchResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhySearchResponse";
  }
  protected:
  explicit WhySearchResponse(::google::protobuf::Arena* arena);
  WhySearchResponse(::google::protobuf::Arena* arena, const WhySearchResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhySearchResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhySearchRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhySearchRequest) */ {
 public:
  inline WhySearchRequest() : WhySearchRequest(nullptr) {}
  ~WhySearchRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhySearchRequest(::google::protobuf::internal::ConstantInitialized);

  inline WhySearchRequest(const WhySearchRequest& from)
      : WhySearchRequest(nullptr, from) {}
  WhySearchRequest(WhySearchRequest&& from) noexcept
    : WhySearchRequest() {
    *this = ::std::move(from);
  }

  inline WhySearchRequest& operator=(const WhySearchRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhySearchRequest& operator=(WhySearchRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhySearchRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhySearchRequest* internal_default_instance() {
    return reinterpret_cast<const WhySearchRequest*>(
               &_WhySearchRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  friend void swap(WhySearchRequest& a, WhySearchRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WhySearchRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhySearchRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhySearchRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhySearchRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhySearchRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhySearchRequest& from) {
    WhySearchRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhySearchRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhySearchRequest";
  }
  protected:
  explicit WhySearchRequest(::google::protobuf::Arena* arena);
  WhySearchRequest(::google::protobuf::Arena* arena, const WhySearchRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributesFieldNumber = 1,
    kSearchProfileFieldNumber = 3,
    kEntityIdFieldNumber = 2,
    kFlagsFieldNumber = 4,
  };
  // string attributes = 1;
  void clear_attributes() ;
  const std::string& attributes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributes(Arg_&& arg, Args_... args);
  std::string* mutable_attributes();
  PROTOBUF_NODISCARD std::string* release_attributes();
  void set_allocated_attributes(std::string* value);

  private:
  const std::string& _internal_attributes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attributes(
      const std::string& value);
  std::string* _internal_mutable_attributes();

  public:
  // string search_profile = 3;
  void clear_search_profile() ;
  const std::string& search_profile() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_search_profile(Arg_&& arg, Args_... args);
  std::string* mutable_search_profile();
  PROTOBUF_NODISCARD std::string* release_search_profile();
  void set_allocated_search_profile(std::string* value);

  private:
  const std::string& _internal_search_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_search_profile(
      const std::string& value);
  std::string* _internal_mutable_search_profile();

  public:
  // int64 entity_id = 2;
  void clear_entity_id() ;
  ::int64_t entity_id() const;
  void set_entity_id(::int64_t value);

  private:
  ::int64_t _internal_entity_id() const;
  void _internal_set_entity_id(::int64_t value);

  public:
  // int64 flags = 4;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhySearchRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr attributes_;
    ::google::protobuf::internal::ArenaStringPtr search_profile_;
    ::int64_t entity_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhyRecordsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhyRecordsResponse) */ {
 public:
  inline WhyRecordsResponse() : WhyRecordsResponse(nullptr) {}
  ~WhyRecordsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhyRecordsResponse(::google::protobuf::internal::ConstantInitialized);

  inline WhyRecordsResponse(const WhyRecordsResponse& from)
      : WhyRecordsResponse(nullptr, from) {}
  WhyRecordsResponse(WhyRecordsResponse&& from) noexcept
    : WhyRecordsResponse() {
    *this = ::std::move(from);
  }

  inline WhyRecordsResponse& operator=(const WhyRecordsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhyRecordsResponse& operator=(WhyRecordsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhyRecordsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhyRecordsResponse* internal_default_instance() {
    return reinterpret_cast<const WhyRecordsResponse*>(
               &_WhyRecordsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  friend void swap(WhyRecordsResponse& a, WhyRecordsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WhyRecordsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhyRecordsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhyRecordsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhyRecordsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhyRecordsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhyRecordsResponse& from) {
    WhyRecordsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhyRecordsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhyRecordsResponse";
  }
  protected:
  explicit WhyRecordsResponse(::google::protobuf::Arena* arena);
  WhyRecordsResponse(::google::protobuf::Arena* arena, const WhyRecordsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhyRecordsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhyRecordsRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhyRecordsRequest) */ {
 public:
  inline WhyRecordsRequest() : WhyRecordsRequest(nullptr) {}
  ~WhyRecordsRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhyRecordsRequest(::google::protobuf::internal::ConstantInitialized);

  inline WhyRecordsRequest(const WhyRecordsRequest& from)
      : WhyRecordsRequest(nullptr, from) {}
  WhyRecordsRequest(WhyRecordsRequest&& from) noexcept
    : WhyRecordsRequest() {
    *this = ::std::move(from);
  }

  inline WhyRecordsRequest& operator=(const WhyRecordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhyRecordsRequest& operator=(WhyRecordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhyRecordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhyRecordsRequest* internal_default_instance() {
    return reinterpret_cast<const WhyRecordsRequest*>(
               &_WhyRecordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  friend void swap(WhyRecordsRequest& a, WhyRecordsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WhyRecordsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhyRecordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhyRecordsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhyRecordsRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhyRecordsRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhyRecordsRequest& from) {
    WhyRecordsRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhyRecordsRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhyRecordsRequest";
  }
  protected:
  explicit WhyRecordsRequest(::google::protobuf::Arena* arena);
  WhyRecordsRequest(::google::protobuf::Arena* arena, const WhyRecordsRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCode1FieldNumber = 1,
    kRecordId1FieldNumber = 2,
    kDataSourceCode2FieldNumber = 3,
    kRecordId2FieldNumber = 4,
    kFlagsFieldNumber = 5,
  };
  // string data_source_code_1 = 1;
  void clear_data_source_code_1() ;
  const std::string& data_source_code_1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code_1(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code_1();
  PROTOBUF_NODISCARD std::string* release_data_source_code_1();
  void set_allocated_data_source_code_1(std::string* value);

  private:
  const std::string& _internal_data_source_code_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code_1(
      const std::string& value);
  std::string* _internal_mutable_data_source_code_1();

  public:
  // string record_id_1 = 2;
  void clear_record_id_1() ;
  const std::string& record_id_1() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id_1(Arg_&& arg, Args_... args);
  std::string* mutable_record_id_1();
  PROTOBUF_NODISCARD std::string* release_record_id_1();
  void set_allocated_record_id_1(std::string* value);

  private:
  const std::string& _internal_record_id_1() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id_1(
      const std::string& value);
  std::string* _internal_mutable_record_id_1();

  public:
  // string data_source_code_2 = 3;
  void clear_data_source_code_2() ;
  const std::string& data_source_code_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code_2(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code_2();
  PROTOBUF_NODISCARD std::string* release_data_source_code_2();
  void set_allocated_data_source_code_2(std::string* value);

  private:
  const std::string& _internal_data_source_code_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code_2(
      const std::string& value);
  std::string* _internal_mutable_data_source_code_2();

  public:
  // string record_id_2 = 4;
  void clear_record_id_2() ;
  const std::string& record_id_2() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id_2(Arg_&& arg, Args_... args);
  std::string* mutable_record_id_2();
  PROTOBUF_NODISCARD std::string* release_record_id_2();
  void set_allocated_record_id_2(std::string* value);

  private:
  const std::string& _internal_record_id_2() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id_2(
      const std::string& value);
  std::string* _internal_mutable_record_id_2();

  public:
  // int64 flags = 5;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhyRecordsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      93, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_1_;
    ::google::protobuf::internal::ArenaStringPtr record_id_1_;
    ::google::protobuf::internal::ArenaStringPtr data_source_code_2_;
    ::google::protobuf::internal::ArenaStringPtr record_id_2_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhyRecordInEntityResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhyRecordInEntityResponse) */ {
 public:
  inline WhyRecordInEntityResponse() : WhyRecordInEntityResponse(nullptr) {}
  ~WhyRecordInEntityResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhyRecordInEntityResponse(::google::protobuf::internal::ConstantInitialized);

  inline WhyRecordInEntityResponse(const WhyRecordInEntityResponse& from)
      : WhyRecordInEntityResponse(nullptr, from) {}
  WhyRecordInEntityResponse(WhyRecordInEntityResponse&& from) noexcept
    : WhyRecordInEntityResponse() {
    *this = ::std::move(from);
  }

  inline WhyRecordInEntityResponse& operator=(const WhyRecordInEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhyRecordInEntityResponse& operator=(WhyRecordInEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhyRecordInEntityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhyRecordInEntityResponse* internal_default_instance() {
    return reinterpret_cast<const WhyRecordInEntityResponse*>(
               &_WhyRecordInEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  friend void swap(WhyRecordInEntityResponse& a, WhyRecordInEntityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WhyRecordInEntityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhyRecordInEntityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhyRecordInEntityResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhyRecordInEntityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhyRecordInEntityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhyRecordInEntityResponse& from) {
    WhyRecordInEntityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhyRecordInEntityResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhyRecordInEntityResponse";
  }
  protected:
  explicit WhyRecordInEntityResponse(::google::protobuf::Arena* arena);
  WhyRecordInEntityResponse(::google::protobuf::Arena* arena, const WhyRecordInEntityResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhyRecordInEntityResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhyRecordInEntityRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhyRecordInEntityRequest) */ {
 public:
  inline WhyRecordInEntityRequest() : WhyRecordInEntityRequest(nullptr) {}
  ~WhyRecordInEntityRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhyRecordInEntityRequest(::google::protobuf::internal::ConstantInitialized);

  inline WhyRecordInEntityRequest(const WhyRecordInEntityRequest& from)
      : WhyRecordInEntityRequest(nullptr, from) {}
  WhyRecordInEntityRequest(WhyRecordInEntityRequest&& from) noexcept
    : WhyRecordInEntityRequest() {
    *this = ::std::move(from);
  }

  inline WhyRecordInEntityRequest& operator=(const WhyRecordInEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhyRecordInEntityRequest& operator=(WhyRecordInEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhyRecordInEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhyRecordInEntityRequest* internal_default_instance() {
    return reinterpret_cast<const WhyRecordInEntityRequest*>(
               &_WhyRecordInEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  friend void swap(WhyRecordInEntityRequest& a, WhyRecordInEntityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WhyRecordInEntityRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhyRecordInEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhyRecordInEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhyRecordInEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhyRecordInEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhyRecordInEntityRequest& from) {
    WhyRecordInEntityRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhyRecordInEntityRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhyRecordInEntityRequest";
  }
  protected:
  explicit WhyRecordInEntityRequest(::google::protobuf::Arena* arena);
  WhyRecordInEntityRequest(::google::protobuf::Arena* arena, const WhyRecordInEntityRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhyRecordInEntityRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      67, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhyEntitiesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhyEntitiesResponse) */ {
 public:
  inline WhyEntitiesResponse() : WhyEntitiesResponse(nullptr) {}
  ~WhyEntitiesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhyEntitiesResponse(::google::protobuf::internal::ConstantInitialized);

  inline WhyEntitiesResponse(const WhyEntitiesResponse& from)
      : WhyEntitiesResponse(nullptr, from) {}
  WhyEntitiesResponse(WhyEntitiesResponse&& from) noexcept
    : WhyEntitiesResponse() {
    *this = ::std::move(from);
  }

  inline WhyEntitiesResponse& operator=(const WhyEntitiesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhyEntitiesResponse& operator=(WhyEntitiesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhyEntitiesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhyEntitiesResponse* internal_default_instance() {
    return reinterpret_cast<const WhyEntitiesResponse*>(
               &_WhyEntitiesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  friend void swap(WhyEntitiesResponse& a, WhyEntitiesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(WhyEntitiesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhyEntitiesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhyEntitiesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhyEntitiesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhyEntitiesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhyEntitiesResponse& from) {
    WhyEntitiesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhyEntitiesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhyEntitiesResponse";
  }
  protected:
  explicit WhyEntitiesResponse(::google::protobuf::Arena* arena);
  WhyEntitiesResponse(::google::protobuf::Arena* arena, const WhyEntitiesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhyEntitiesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class WhyEntitiesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.WhyEntitiesRequest) */ {
 public:
  inline WhyEntitiesRequest() : WhyEntitiesRequest(nullptr) {}
  ~WhyEntitiesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR WhyEntitiesRequest(::google::protobuf::internal::ConstantInitialized);

  inline WhyEntitiesRequest(const WhyEntitiesRequest& from)
      : WhyEntitiesRequest(nullptr, from) {}
  WhyEntitiesRequest(WhyEntitiesRequest&& from) noexcept
    : WhyEntitiesRequest() {
    *this = ::std::move(from);
  }

  inline WhyEntitiesRequest& operator=(const WhyEntitiesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline WhyEntitiesRequest& operator=(WhyEntitiesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const WhyEntitiesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const WhyEntitiesRequest* internal_default_instance() {
    return reinterpret_cast<const WhyEntitiesRequest*>(
               &_WhyEntitiesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  friend void swap(WhyEntitiesRequest& a, WhyEntitiesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(WhyEntitiesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(WhyEntitiesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  WhyEntitiesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<WhyEntitiesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const WhyEntitiesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const WhyEntitiesRequest& from) {
    WhyEntitiesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(WhyEntitiesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.WhyEntitiesRequest";
  }
  protected:
  explicit WhyEntitiesRequest(::google::protobuf::Arena* arena);
  WhyEntitiesRequest(::google::protobuf::Arena* arena, const WhyEntitiesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityId1FieldNumber = 1,
    kEntityId2FieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // int64 entity_id_1 = 1;
  void clear_entity_id_1() ;
  ::int64_t entity_id_1() const;
  void set_entity_id_1(::int64_t value);

  private:
  ::int64_t _internal_entity_id_1() const;
  void _internal_set_entity_id_1(::int64_t value);

  public:
  // int64 entity_id_2 = 2;
  void clear_entity_id_2() ;
  ::int64_t entity_id_2() const;
  void set_entity_id_2(::int64_t value);

  private:
  ::int64_t _internal_entity_id_2() const;
  void _internal_set_entity_id_2(::int64_t value);

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.WhyEntitiesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t entity_id_1_;
    ::int64_t entity_id_2_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class StreamExportJsonEntityReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.StreamExportJsonEntityReportResponse) */ {
 public:
  inline StreamExportJsonEntityReportResponse() : StreamExportJsonEntityReportResponse(nullptr) {}
  ~StreamExportJsonEntityReportResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamExportJsonEntityReportResponse(::google::protobuf::internal::ConstantInitialized);

  inline StreamExportJsonEntityReportResponse(const StreamExportJsonEntityReportResponse& from)
      : StreamExportJsonEntityReportResponse(nullptr, from) {}
  StreamExportJsonEntityReportResponse(StreamExportJsonEntityReportResponse&& from) noexcept
    : StreamExportJsonEntityReportResponse() {
    *this = ::std::move(from);
  }

  inline StreamExportJsonEntityReportResponse& operator=(const StreamExportJsonEntityReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamExportJsonEntityReportResponse& operator=(StreamExportJsonEntityReportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamExportJsonEntityReportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamExportJsonEntityReportResponse* internal_default_instance() {
    return reinterpret_cast<const StreamExportJsonEntityReportResponse*>(
               &_StreamExportJsonEntityReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  friend void swap(StreamExportJsonEntityReportResponse& a, StreamExportJsonEntityReportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamExportJsonEntityReportResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamExportJsonEntityReportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamExportJsonEntityReportResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamExportJsonEntityReportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamExportJsonEntityReportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamExportJsonEntityReportResponse& from) {
    StreamExportJsonEntityReportResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamExportJsonEntityReportResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.StreamExportJsonEntityReportResponse";
  }
  protected:
  explicit StreamExportJsonEntityReportResponse(::google::protobuf::Arena* arena);
  StreamExportJsonEntityReportResponse(::google::protobuf::Arena* arena, const StreamExportJsonEntityReportResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.StreamExportJsonEntityReportResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      60, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class StreamExportJsonEntityReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.StreamExportJsonEntityReportRequest) */ {
 public:
  inline StreamExportJsonEntityReportRequest() : StreamExportJsonEntityReportRequest(nullptr) {}
  ~StreamExportJsonEntityReportRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamExportJsonEntityReportRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamExportJsonEntityReportRequest(const StreamExportJsonEntityReportRequest& from)
      : StreamExportJsonEntityReportRequest(nullptr, from) {}
  StreamExportJsonEntityReportRequest(StreamExportJsonEntityReportRequest&& from) noexcept
    : StreamExportJsonEntityReportRequest() {
    *this = ::std::move(from);
  }

  inline StreamExportJsonEntityReportRequest& operator=(const StreamExportJsonEntityReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamExportJsonEntityReportRequest& operator=(StreamExportJsonEntityReportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamExportJsonEntityReportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamExportJsonEntityReportRequest* internal_default_instance() {
    return reinterpret_cast<const StreamExportJsonEntityReportRequest*>(
               &_StreamExportJsonEntityReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  friend void swap(StreamExportJsonEntityReportRequest& a, StreamExportJsonEntityReportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamExportJsonEntityReportRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamExportJsonEntityReportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamExportJsonEntityReportRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamExportJsonEntityReportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamExportJsonEntityReportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamExportJsonEntityReportRequest& from) {
    StreamExportJsonEntityReportRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamExportJsonEntityReportRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.StreamExportJsonEntityReportRequest";
  }
  protected:
  explicit StreamExportJsonEntityReportRequest(::google::protobuf::Arena* arena);
  StreamExportJsonEntityReportRequest(::google::protobuf::Arena* arena, const StreamExportJsonEntityReportRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagsFieldNumber = 1,
  };
  // int64 flags = 1;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.StreamExportJsonEntityReportRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class StreamExportCsvEntityReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.StreamExportCsvEntityReportResponse) */ {
 public:
  inline StreamExportCsvEntityReportResponse() : StreamExportCsvEntityReportResponse(nullptr) {}
  ~StreamExportCsvEntityReportResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamExportCsvEntityReportResponse(::google::protobuf::internal::ConstantInitialized);

  inline StreamExportCsvEntityReportResponse(const StreamExportCsvEntityReportResponse& from)
      : StreamExportCsvEntityReportResponse(nullptr, from) {}
  StreamExportCsvEntityReportResponse(StreamExportCsvEntityReportResponse&& from) noexcept
    : StreamExportCsvEntityReportResponse() {
    *this = ::std::move(from);
  }

  inline StreamExportCsvEntityReportResponse& operator=(const StreamExportCsvEntityReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamExportCsvEntityReportResponse& operator=(StreamExportCsvEntityReportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamExportCsvEntityReportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamExportCsvEntityReportResponse* internal_default_instance() {
    return reinterpret_cast<const StreamExportCsvEntityReportResponse*>(
               &_StreamExportCsvEntityReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  friend void swap(StreamExportCsvEntityReportResponse& a, StreamExportCsvEntityReportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamExportCsvEntityReportResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamExportCsvEntityReportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamExportCsvEntityReportResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamExportCsvEntityReportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamExportCsvEntityReportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamExportCsvEntityReportResponse& from) {
    StreamExportCsvEntityReportResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamExportCsvEntityReportResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.StreamExportCsvEntityReportResponse";
  }
  protected:
  explicit StreamExportCsvEntityReportResponse(::google::protobuf::Arena* arena);
  StreamExportCsvEntityReportResponse(::google::protobuf::Arena* arena, const StreamExportCsvEntityReportResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.StreamExportCsvEntityReportResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class StreamExportCsvEntityReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.StreamExportCsvEntityReportRequest) */ {
 public:
  inline StreamExportCsvEntityReportRequest() : StreamExportCsvEntityReportRequest(nullptr) {}
  ~StreamExportCsvEntityReportRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR StreamExportCsvEntityReportRequest(::google::protobuf::internal::ConstantInitialized);

  inline StreamExportCsvEntityReportRequest(const StreamExportCsvEntityReportRequest& from)
      : StreamExportCsvEntityReportRequest(nullptr, from) {}
  StreamExportCsvEntityReportRequest(StreamExportCsvEntityReportRequest&& from) noexcept
    : StreamExportCsvEntityReportRequest() {
    *this = ::std::move(from);
  }

  inline StreamExportCsvEntityReportRequest& operator=(const StreamExportCsvEntityReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StreamExportCsvEntityReportRequest& operator=(StreamExportCsvEntityReportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StreamExportCsvEntityReportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StreamExportCsvEntityReportRequest* internal_default_instance() {
    return reinterpret_cast<const StreamExportCsvEntityReportRequest*>(
               &_StreamExportCsvEntityReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  friend void swap(StreamExportCsvEntityReportRequest& a, StreamExportCsvEntityReportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(StreamExportCsvEntityReportRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StreamExportCsvEntityReportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StreamExportCsvEntityReportRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<StreamExportCsvEntityReportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StreamExportCsvEntityReportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const StreamExportCsvEntityReportRequest& from) {
    StreamExportCsvEntityReportRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StreamExportCsvEntityReportRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.StreamExportCsvEntityReportRequest";
  }
  protected:
  explicit StreamExportCsvEntityReportRequest(::google::protobuf::Arena* arena);
  StreamExportCsvEntityReportRequest(::google::protobuf::Arena* arena, const StreamExportCsvEntityReportRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCsvColumnListFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // string csv_column_list = 1;
  void clear_csv_column_list() ;
  const std::string& csv_column_list() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_csv_column_list(Arg_&& arg, Args_... args);
  std::string* mutable_csv_column_list();
  PROTOBUF_NODISCARD std::string* release_csv_column_list();
  void set_allocated_csv_column_list(std::string* value);

  private:
  const std::string& _internal_csv_column_list() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_csv_column_list(
      const std::string& value);
  std::string* _internal_mutable_csv_column_list();

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.StreamExportCsvEntityReportRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      67, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr csv_column_list_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class SearchByAttributesResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.SearchByAttributesResponse) */ {
 public:
  inline SearchByAttributesResponse() : SearchByAttributesResponse(nullptr) {}
  ~SearchByAttributesResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SearchByAttributesResponse(::google::protobuf::internal::ConstantInitialized);

  inline SearchByAttributesResponse(const SearchByAttributesResponse& from)
      : SearchByAttributesResponse(nullptr, from) {}
  SearchByAttributesResponse(SearchByAttributesResponse&& from) noexcept
    : SearchByAttributesResponse() {
    *this = ::std::move(from);
  }

  inline SearchByAttributesResponse& operator=(const SearchByAttributesResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchByAttributesResponse& operator=(SearchByAttributesResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchByAttributesResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SearchByAttributesResponse* internal_default_instance() {
    return reinterpret_cast<const SearchByAttributesResponse*>(
               &_SearchByAttributesResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  friend void swap(SearchByAttributesResponse& a, SearchByAttributesResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SearchByAttributesResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchByAttributesResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchByAttributesResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SearchByAttributesResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchByAttributesResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SearchByAttributesResponse& from) {
    SearchByAttributesResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SearchByAttributesResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.SearchByAttributesResponse";
  }
  protected:
  explicit SearchByAttributesResponse(::google::protobuf::Arena* arena);
  SearchByAttributesResponse(::google::protobuf::Arena* arena, const SearchByAttributesResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.SearchByAttributesResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class SearchByAttributesRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.SearchByAttributesRequest) */ {
 public:
  inline SearchByAttributesRequest() : SearchByAttributesRequest(nullptr) {}
  ~SearchByAttributesRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SearchByAttributesRequest(::google::protobuf::internal::ConstantInitialized);

  inline SearchByAttributesRequest(const SearchByAttributesRequest& from)
      : SearchByAttributesRequest(nullptr, from) {}
  SearchByAttributesRequest(SearchByAttributesRequest&& from) noexcept
    : SearchByAttributesRequest() {
    *this = ::std::move(from);
  }

  inline SearchByAttributesRequest& operator=(const SearchByAttributesRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SearchByAttributesRequest& operator=(SearchByAttributesRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SearchByAttributesRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SearchByAttributesRequest* internal_default_instance() {
    return reinterpret_cast<const SearchByAttributesRequest*>(
               &_SearchByAttributesRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  friend void swap(SearchByAttributesRequest& a, SearchByAttributesRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SearchByAttributesRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SearchByAttributesRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SearchByAttributesRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SearchByAttributesRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SearchByAttributesRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SearchByAttributesRequest& from) {
    SearchByAttributesRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SearchByAttributesRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.SearchByAttributesRequest";
  }
  protected:
  explicit SearchByAttributesRequest(::google::protobuf::Arena* arena);
  SearchByAttributesRequest(::google::protobuf::Arena* arena, const SearchByAttributesRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAttributesFieldNumber = 1,
    kSearchProfileFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string attributes = 1;
  void clear_attributes() ;
  const std::string& attributes() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attributes(Arg_&& arg, Args_... args);
  std::string* mutable_attributes();
  PROTOBUF_NODISCARD std::string* release_attributes();
  void set_allocated_attributes(std::string* value);

  private:
  const std::string& _internal_attributes() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attributes(
      const std::string& value);
  std::string* _internal_mutable_attributes();

  public:
  // string search_profile = 2;
  void clear_search_profile() ;
  const std::string& search_profile() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_search_profile(Arg_&& arg, Args_... args);
  std::string* mutable_search_profile();
  PROTOBUF_NODISCARD std::string* release_search_profile();
  void set_allocated_search_profile(std::string* value);

  private:
  const std::string& _internal_search_profile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_search_profile(
      const std::string& value);
  std::string* _internal_mutable_search_profile();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.SearchByAttributesRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      67, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr attributes_;
    ::google::protobuf::internal::ArenaStringPtr search_profile_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ReinitializeResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.ReinitializeResponse) */ {
 public:
  inline ReinitializeResponse() : ReinitializeResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReinitializeResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReinitializeResponse(const ReinitializeResponse& from)
      : ReinitializeResponse(nullptr, from) {}
  ReinitializeResponse(ReinitializeResponse&& from) noexcept
    : ReinitializeResponse() {
    *this = ::std::move(from);
  }

  inline ReinitializeResponse& operator=(const ReinitializeResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReinitializeResponse& operator=(ReinitializeResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReinitializeResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReinitializeResponse* internal_default_instance() {
    return reinterpret_cast<const ReinitializeResponse*>(
               &_ReinitializeResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  friend void swap(ReinitializeResponse& a, ReinitializeResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReinitializeResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReinitializeResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReinitializeResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReinitializeResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReinitializeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReinitializeResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ReinitializeResponse";
  }
  protected:
  explicit ReinitializeResponse(::google::protobuf::Arena* arena);
  ReinitializeResponse(::google::protobuf::Arena* arena, const ReinitializeResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.ReinitializeResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ReinitializeRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ReinitializeRequest) */ {
 public:
  inline ReinitializeRequest() : ReinitializeRequest(nullptr) {}
  ~ReinitializeRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReinitializeRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReinitializeRequest(const ReinitializeRequest& from)
      : ReinitializeRequest(nullptr, from) {}
  ReinitializeRequest(ReinitializeRequest&& from) noexcept
    : ReinitializeRequest() {
    *this = ::std::move(from);
  }

  inline ReinitializeRequest& operator=(const ReinitializeRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReinitializeRequest& operator=(ReinitializeRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReinitializeRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReinitializeRequest* internal_default_instance() {
    return reinterpret_cast<const ReinitializeRequest*>(
               &_ReinitializeRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  friend void swap(ReinitializeRequest& a, ReinitializeRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReinitializeRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReinitializeRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReinitializeRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReinitializeRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReinitializeRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReinitializeRequest& from) {
    ReinitializeRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReinitializeRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ReinitializeRequest";
  }
  protected:
  explicit ReinitializeRequest(::google::protobuf::Arena* arena);
  ReinitializeRequest(::google::protobuf::Arena* arena, const ReinitializeRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 1,
  };
  // int64 config_id = 1;
  void clear_config_id() ;
  ::int64_t config_id() const;
  void set_config_id(::int64_t value);

  private:
  ::int64_t _internal_config_id() const;
  void _internal_set_config_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ReinitializeRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t config_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ReevaluateRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ReevaluateRecordResponse) */ {
 public:
  inline ReevaluateRecordResponse() : ReevaluateRecordResponse(nullptr) {}
  ~ReevaluateRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReevaluateRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReevaluateRecordResponse(const ReevaluateRecordResponse& from)
      : ReevaluateRecordResponse(nullptr, from) {}
  ReevaluateRecordResponse(ReevaluateRecordResponse&& from) noexcept
    : ReevaluateRecordResponse() {
    *this = ::std::move(from);
  }

  inline ReevaluateRecordResponse& operator=(const ReevaluateRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReevaluateRecordResponse& operator=(ReevaluateRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReevaluateRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReevaluateRecordResponse* internal_default_instance() {
    return reinterpret_cast<const ReevaluateRecordResponse*>(
               &_ReevaluateRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  friend void swap(ReevaluateRecordResponse& a, ReevaluateRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReevaluateRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReevaluateRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReevaluateRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReevaluateRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReevaluateRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReevaluateRecordResponse& from) {
    ReevaluateRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReevaluateRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ReevaluateRecordResponse";
  }
  protected:
  explicit ReevaluateRecordResponse(::google::protobuf::Arena* arena);
  ReevaluateRecordResponse(::google::protobuf::Arena* arena, const ReevaluateRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.ReevaluateRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ReevaluateRecordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ReevaluateRecordRequest) */ {
 public:
  inline ReevaluateRecordRequest() : ReevaluateRecordRequest(nullptr) {}
  ~ReevaluateRecordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReevaluateRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReevaluateRecordRequest(const ReevaluateRecordRequest& from)
      : ReevaluateRecordRequest(nullptr, from) {}
  ReevaluateRecordRequest(ReevaluateRecordRequest&& from) noexcept
    : ReevaluateRecordRequest() {
    *this = ::std::move(from);
  }

  inline ReevaluateRecordRequest& operator=(const ReevaluateRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReevaluateRecordRequest& operator=(ReevaluateRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReevaluateRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReevaluateRecordRequest* internal_default_instance() {
    return reinterpret_cast<const ReevaluateRecordRequest*>(
               &_ReevaluateRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  friend void swap(ReevaluateRecordRequest& a, ReevaluateRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReevaluateRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReevaluateRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReevaluateRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReevaluateRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReevaluateRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReevaluateRecordRequest& from) {
    ReevaluateRecordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReevaluateRecordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ReevaluateRecordRequest";
  }
  protected:
  explicit ReevaluateRecordRequest(::google::protobuf::Arena* arena);
  ReevaluateRecordRequest(::google::protobuf::Arena* arena, const ReevaluateRecordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ReevaluateRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      66, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ReevaluateEntityResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ReevaluateEntityResponse) */ {
 public:
  inline ReevaluateEntityResponse() : ReevaluateEntityResponse(nullptr) {}
  ~ReevaluateEntityResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReevaluateEntityResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReevaluateEntityResponse(const ReevaluateEntityResponse& from)
      : ReevaluateEntityResponse(nullptr, from) {}
  ReevaluateEntityResponse(ReevaluateEntityResponse&& from) noexcept
    : ReevaluateEntityResponse() {
    *this = ::std::move(from);
  }

  inline ReevaluateEntityResponse& operator=(const ReevaluateEntityResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReevaluateEntityResponse& operator=(ReevaluateEntityResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReevaluateEntityResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReevaluateEntityResponse* internal_default_instance() {
    return reinterpret_cast<const ReevaluateEntityResponse*>(
               &_ReevaluateEntityResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  friend void swap(ReevaluateEntityResponse& a, ReevaluateEntityResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReevaluateEntityResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReevaluateEntityResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReevaluateEntityResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReevaluateEntityResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReevaluateEntityResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReevaluateEntityResponse& from) {
    ReevaluateEntityResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReevaluateEntityResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ReevaluateEntityResponse";
  }
  protected:
  explicit ReevaluateEntityResponse(::google::protobuf::Arena* arena);
  ReevaluateEntityResponse(::google::protobuf::Arena* arena, const ReevaluateEntityResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.ReevaluateEntityResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ReevaluateEntityRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ReevaluateEntityRequest) */ {
 public:
  inline ReevaluateEntityRequest() : ReevaluateEntityRequest(nullptr) {}
  ~ReevaluateEntityRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReevaluateEntityRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReevaluateEntityRequest(const ReevaluateEntityRequest& from)
      : ReevaluateEntityRequest(nullptr, from) {}
  ReevaluateEntityRequest(ReevaluateEntityRequest&& from) noexcept
    : ReevaluateEntityRequest() {
    *this = ::std::move(from);
  }

  inline ReevaluateEntityRequest& operator=(const ReevaluateEntityRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReevaluateEntityRequest& operator=(ReevaluateEntityRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReevaluateEntityRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReevaluateEntityRequest* internal_default_instance() {
    return reinterpret_cast<const ReevaluateEntityRequest*>(
               &_ReevaluateEntityRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  friend void swap(ReevaluateEntityRequest& a, ReevaluateEntityRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReevaluateEntityRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReevaluateEntityRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReevaluateEntityRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReevaluateEntityRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReevaluateEntityRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReevaluateEntityRequest& from) {
    ReevaluateEntityRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReevaluateEntityRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ReevaluateEntityRequest";
  }
  protected:
  explicit ReevaluateEntityRequest(::google::protobuf::Arena* arena);
  ReevaluateEntityRequest(::google::protobuf::Arena* arena, const ReevaluateEntityRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // int64 entity_id = 1;
  void clear_entity_id() ;
  ::int64_t entity_id() const;
  void set_entity_id(::int64_t value);

  private:
  ::int64_t _internal_entity_id() const;
  void _internal_set_entity_id(::int64_t value);

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ReevaluateEntityRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t entity_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ProcessRedoRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ProcessRedoRecordResponse) */ {
 public:
  inline ProcessRedoRecordResponse() : ProcessRedoRecordResponse(nullptr) {}
  ~ProcessRedoRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ProcessRedoRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline ProcessRedoRecordResponse(const ProcessRedoRecordResponse& from)
      : ProcessRedoRecordResponse(nullptr, from) {}
  ProcessRedoRecordResponse(ProcessRedoRecordResponse&& from) noexcept
    : ProcessRedoRecordResponse() {
    *this = ::std::move(from);
  }

  inline ProcessRedoRecordResponse& operator=(const ProcessRedoRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessRedoRecordResponse& operator=(ProcessRedoRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcessRedoRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProcessRedoRecordResponse* internal_default_instance() {
    return reinterpret_cast<const ProcessRedoRecordResponse*>(
               &_ProcessRedoRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  friend void swap(ProcessRedoRecordResponse& a, ProcessRedoRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessRedoRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessRedoRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcessRedoRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProcessRedoRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcessRedoRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ProcessRedoRecordResponse& from) {
    ProcessRedoRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProcessRedoRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ProcessRedoRecordResponse";
  }
  protected:
  explicit ProcessRedoRecordResponse(::google::protobuf::Arena* arena);
  ProcessRedoRecordResponse(::google::protobuf::Arena* arena, const ProcessRedoRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.ProcessRedoRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ProcessRedoRecordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ProcessRedoRecordRequest) */ {
 public:
  inline ProcessRedoRecordRequest() : ProcessRedoRecordRequest(nullptr) {}
  ~ProcessRedoRecordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ProcessRedoRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline ProcessRedoRecordRequest(const ProcessRedoRecordRequest& from)
      : ProcessRedoRecordRequest(nullptr, from) {}
  ProcessRedoRecordRequest(ProcessRedoRecordRequest&& from) noexcept
    : ProcessRedoRecordRequest() {
    *this = ::std::move(from);
  }

  inline ProcessRedoRecordRequest& operator=(const ProcessRedoRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ProcessRedoRecordRequest& operator=(ProcessRedoRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ProcessRedoRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ProcessRedoRecordRequest* internal_default_instance() {
    return reinterpret_cast<const ProcessRedoRecordRequest*>(
               &_ProcessRedoRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  friend void swap(ProcessRedoRecordRequest& a, ProcessRedoRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ProcessRedoRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ProcessRedoRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ProcessRedoRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ProcessRedoRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ProcessRedoRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ProcessRedoRecordRequest& from) {
    ProcessRedoRecordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ProcessRedoRecordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ProcessRedoRecordRequest";
  }
  protected:
  explicit ProcessRedoRecordRequest(::google::protobuf::Arena* arena);
  ProcessRedoRecordRequest(::google::protobuf::Arena* arena, const ProcessRedoRecordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRedoRecordFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // string redo_record = 1;
  void clear_redo_record() ;
  const std::string& redo_record() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_redo_record(Arg_&& arg, Args_... args);
  std::string* mutable_redo_record();
  PROTOBUF_NODISCARD std::string* release_redo_record();
  void set_allocated_redo_record(std::string* value);

  private:
  const std::string& _internal_redo_record() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_redo_record(
      const std::string& value);
  std::string* _internal_mutable_redo_record();

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ProcessRedoRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr redo_record_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class PrimeEngineResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.PrimeEngineResponse) */ {
 public:
  inline PrimeEngineResponse() : PrimeEngineResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PrimeEngineResponse(::google::protobuf::internal::ConstantInitialized);

  inline PrimeEngineResponse(const PrimeEngineResponse& from)
      : PrimeEngineResponse(nullptr, from) {}
  PrimeEngineResponse(PrimeEngineResponse&& from) noexcept
    : PrimeEngineResponse() {
    *this = ::std::move(from);
  }

  inline PrimeEngineResponse& operator=(const PrimeEngineResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrimeEngineResponse& operator=(PrimeEngineResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrimeEngineResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrimeEngineResponse* internal_default_instance() {
    return reinterpret_cast<const PrimeEngineResponse*>(
               &_PrimeEngineResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  friend void swap(PrimeEngineResponse& a, PrimeEngineResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PrimeEngineResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrimeEngineResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrimeEngineResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrimeEngineResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PrimeEngineResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PrimeEngineResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.PrimeEngineResponse";
  }
  protected:
  explicit PrimeEngineResponse(::google::protobuf::Arena* arena);
  PrimeEngineResponse(::google::protobuf::Arena* arena, const PrimeEngineResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.PrimeEngineResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class PrimeEngineRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.PrimeEngineRequest) */ {
 public:
  inline PrimeEngineRequest() : PrimeEngineRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PrimeEngineRequest(::google::protobuf::internal::ConstantInitialized);

  inline PrimeEngineRequest(const PrimeEngineRequest& from)
      : PrimeEngineRequest(nullptr, from) {}
  PrimeEngineRequest(PrimeEngineRequest&& from) noexcept
    : PrimeEngineRequest() {
    *this = ::std::move(from);
  }

  inline PrimeEngineRequest& operator=(const PrimeEngineRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PrimeEngineRequest& operator=(PrimeEngineRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PrimeEngineRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PrimeEngineRequest* internal_default_instance() {
    return reinterpret_cast<const PrimeEngineRequest*>(
               &_PrimeEngineRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  friend void swap(PrimeEngineRequest& a, PrimeEngineRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PrimeEngineRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PrimeEngineRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PrimeEngineRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PrimeEngineRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const PrimeEngineRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const PrimeEngineRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.PrimeEngineRequest";
  }
  protected:
  explicit PrimeEngineRequest(::google::protobuf::Arena* arena);
  PrimeEngineRequest(::google::protobuf::Arena* arena, const PrimeEngineRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.PrimeEngineRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class PreprocessRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.PreprocessRecordResponse) */ {
 public:
  inline PreprocessRecordResponse() : PreprocessRecordResponse(nullptr) {}
  ~PreprocessRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PreprocessRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline PreprocessRecordResponse(const PreprocessRecordResponse& from)
      : PreprocessRecordResponse(nullptr, from) {}
  PreprocessRecordResponse(PreprocessRecordResponse&& from) noexcept
    : PreprocessRecordResponse() {
    *this = ::std::move(from);
  }

  inline PreprocessRecordResponse& operator=(const PreprocessRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreprocessRecordResponse& operator=(PreprocessRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreprocessRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const PreprocessRecordResponse* internal_default_instance() {
    return reinterpret_cast<const PreprocessRecordResponse*>(
               &_PreprocessRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  friend void swap(PreprocessRecordResponse& a, PreprocessRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(PreprocessRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreprocessRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreprocessRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PreprocessRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreprocessRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PreprocessRecordResponse& from) {
    PreprocessRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PreprocessRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.PreprocessRecordResponse";
  }
  protected:
  explicit PreprocessRecordResponse(::google::protobuf::Arena* arena);
  PreprocessRecordResponse(::google::protobuf::Arena* arena, const PreprocessRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.PreprocessRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class PreprocessRecordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.PreprocessRecordRequest) */ {
 public:
  inline PreprocessRecordRequest() : PreprocessRecordRequest(nullptr) {}
  ~PreprocessRecordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR PreprocessRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline PreprocessRecordRequest(const PreprocessRecordRequest& from)
      : PreprocessRecordRequest(nullptr, from) {}
  PreprocessRecordRequest(PreprocessRecordRequest&& from) noexcept
    : PreprocessRecordRequest() {
    *this = ::std::move(from);
  }

  inline PreprocessRecordRequest& operator=(const PreprocessRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline PreprocessRecordRequest& operator=(PreprocessRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const PreprocessRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const PreprocessRecordRequest* internal_default_instance() {
    return reinterpret_cast<const PreprocessRecordRequest*>(
               &_PreprocessRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  friend void swap(PreprocessRecordRequest& a, PreprocessRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(PreprocessRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PreprocessRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  PreprocessRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<PreprocessRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const PreprocessRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const PreprocessRecordRequest& from) {
    PreprocessRecordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(PreprocessRecordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.PreprocessRecordRequest";
  }
  protected:
  explicit PreprocessRecordRequest(::google::protobuf::Arena* arena);
  PreprocessRecordRequest(::google::protobuf::Arena* arena, const PreprocessRecordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordDefinitionFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // string record_definition = 1;
  void clear_record_definition() ;
  const std::string& record_definition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_definition(Arg_&& arg, Args_... args);
  std::string* mutable_record_definition();
  PROTOBUF_NODISCARD std::string* release_record_definition();
  void set_allocated_record_definition(std::string* value);

  private:
  const std::string& _internal_record_definition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_definition(
      const std::string& value);
  std::string* _internal_mutable_record_definition();

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.PreprocessRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr record_definition_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class HowEntityByEntityIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.HowEntityByEntityIdResponse) */ {
 public:
  inline HowEntityByEntityIdResponse() : HowEntityByEntityIdResponse(nullptr) {}
  ~HowEntityByEntityIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HowEntityByEntityIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline HowEntityByEntityIdResponse(const HowEntityByEntityIdResponse& from)
      : HowEntityByEntityIdResponse(nullptr, from) {}
  HowEntityByEntityIdResponse(HowEntityByEntityIdResponse&& from) noexcept
    : HowEntityByEntityIdResponse() {
    *this = ::std::move(from);
  }

  inline HowEntityByEntityIdResponse& operator=(const HowEntityByEntityIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline HowEntityByEntityIdResponse& operator=(HowEntityByEntityIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HowEntityByEntityIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const HowEntityByEntityIdResponse* internal_default_instance() {
    return reinterpret_cast<const HowEntityByEntityIdResponse*>(
               &_HowEntityByEntityIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  friend void swap(HowEntityByEntityIdResponse& a, HowEntityByEntityIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(HowEntityByEntityIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HowEntityByEntityIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HowEntityByEntityIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HowEntityByEntityIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HowEntityByEntityIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HowEntityByEntityIdResponse& from) {
    HowEntityByEntityIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HowEntityByEntityIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.HowEntityByEntityIdResponse";
  }
  protected:
  explicit HowEntityByEntityIdResponse(::google::protobuf::Arena* arena);
  HowEntityByEntityIdResponse(::google::protobuf::Arena* arena, const HowEntityByEntityIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.HowEntityByEntityIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class HowEntityByEntityIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.HowEntityByEntityIdRequest) */ {
 public:
  inline HowEntityByEntityIdRequest() : HowEntityByEntityIdRequest(nullptr) {}
  ~HowEntityByEntityIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR HowEntityByEntityIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline HowEntityByEntityIdRequest(const HowEntityByEntityIdRequest& from)
      : HowEntityByEntityIdRequest(nullptr, from) {}
  HowEntityByEntityIdRequest(HowEntityByEntityIdRequest&& from) noexcept
    : HowEntityByEntityIdRequest() {
    *this = ::std::move(from);
  }

  inline HowEntityByEntityIdRequest& operator=(const HowEntityByEntityIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline HowEntityByEntityIdRequest& operator=(HowEntityByEntityIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const HowEntityByEntityIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const HowEntityByEntityIdRequest* internal_default_instance() {
    return reinterpret_cast<const HowEntityByEntityIdRequest*>(
               &_HowEntityByEntityIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  friend void swap(HowEntityByEntityIdRequest& a, HowEntityByEntityIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(HowEntityByEntityIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HowEntityByEntityIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  HowEntityByEntityIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<HowEntityByEntityIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const HowEntityByEntityIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const HowEntityByEntityIdRequest& from) {
    HowEntityByEntityIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(HowEntityByEntityIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.HowEntityByEntityIdRequest";
  }
  protected:
  explicit HowEntityByEntityIdRequest(::google::protobuf::Arena* arena);
  HowEntityByEntityIdRequest(::google::protobuf::Arena* arena, const HowEntityByEntityIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // int64 entity_id = 1;
  void clear_entity_id() ;
  ::int64_t entity_id() const;
  void set_entity_id(::int64_t value);

  private:
  ::int64_t _internal_entity_id() const;
  void _internal_set_entity_id(::int64_t value);

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.HowEntityByEntityIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t entity_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetVirtualEntityByRecordIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetVirtualEntityByRecordIdResponse) */ {
 public:
  inline GetVirtualEntityByRecordIdResponse() : GetVirtualEntityByRecordIdResponse(nullptr) {}
  ~GetVirtualEntityByRecordIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVirtualEntityByRecordIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetVirtualEntityByRecordIdResponse(const GetVirtualEntityByRecordIdResponse& from)
      : GetVirtualEntityByRecordIdResponse(nullptr, from) {}
  GetVirtualEntityByRecordIdResponse(GetVirtualEntityByRecordIdResponse&& from) noexcept
    : GetVirtualEntityByRecordIdResponse() {
    *this = ::std::move(from);
  }

  inline GetVirtualEntityByRecordIdResponse& operator=(const GetVirtualEntityByRecordIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVirtualEntityByRecordIdResponse& operator=(GetVirtualEntityByRecordIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVirtualEntityByRecordIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVirtualEntityByRecordIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetVirtualEntityByRecordIdResponse*>(
               &_GetVirtualEntityByRecordIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  friend void swap(GetVirtualEntityByRecordIdResponse& a, GetVirtualEntityByRecordIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVirtualEntityByRecordIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVirtualEntityByRecordIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVirtualEntityByRecordIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVirtualEntityByRecordIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVirtualEntityByRecordIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVirtualEntityByRecordIdResponse& from) {
    GetVirtualEntityByRecordIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVirtualEntityByRecordIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetVirtualEntityByRecordIdResponse";
  }
  protected:
  explicit GetVirtualEntityByRecordIdResponse(::google::protobuf::Arena* arena);
  GetVirtualEntityByRecordIdResponse(::google::protobuf::Arena* arena, const GetVirtualEntityByRecordIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetVirtualEntityByRecordIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      58, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetVirtualEntityByRecordIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetVirtualEntityByRecordIdRequest) */ {
 public:
  inline GetVirtualEntityByRecordIdRequest() : GetVirtualEntityByRecordIdRequest(nullptr) {}
  ~GetVirtualEntityByRecordIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetVirtualEntityByRecordIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetVirtualEntityByRecordIdRequest(const GetVirtualEntityByRecordIdRequest& from)
      : GetVirtualEntityByRecordIdRequest(nullptr, from) {}
  GetVirtualEntityByRecordIdRequest(GetVirtualEntityByRecordIdRequest&& from) noexcept
    : GetVirtualEntityByRecordIdRequest() {
    *this = ::std::move(from);
  }

  inline GetVirtualEntityByRecordIdRequest& operator=(const GetVirtualEntityByRecordIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVirtualEntityByRecordIdRequest& operator=(GetVirtualEntityByRecordIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVirtualEntityByRecordIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVirtualEntityByRecordIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetVirtualEntityByRecordIdRequest*>(
               &_GetVirtualEntityByRecordIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  friend void swap(GetVirtualEntityByRecordIdRequest& a, GetVirtualEntityByRecordIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetVirtualEntityByRecordIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVirtualEntityByRecordIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVirtualEntityByRecordIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetVirtualEntityByRecordIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVirtualEntityByRecordIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetVirtualEntityByRecordIdRequest& from) {
    GetVirtualEntityByRecordIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVirtualEntityByRecordIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetVirtualEntityByRecordIdRequest";
  }
  protected:
  explicit GetVirtualEntityByRecordIdRequest(::google::protobuf::Arena* arena);
  GetVirtualEntityByRecordIdRequest(::google::protobuf::Arena* arena, const GetVirtualEntityByRecordIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordKeysFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // string record_keys = 1;
  void clear_record_keys() ;
  const std::string& record_keys() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_keys(Arg_&& arg, Args_... args);
  std::string* mutable_record_keys();
  PROTOBUF_NODISCARD std::string* release_record_keys();
  void set_allocated_record_keys(std::string* value);

  private:
  const std::string& _internal_record_keys() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_keys(
      const std::string& value);
  std::string* _internal_mutable_record_keys();

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetVirtualEntityByRecordIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr record_keys_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetStatsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetStatsResponse) */ {
 public:
  inline GetStatsResponse() : GetStatsResponse(nullptr) {}
  ~GetStatsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetStatsResponse(const GetStatsResponse& from)
      : GetStatsResponse(nullptr, from) {}
  GetStatsResponse(GetStatsResponse&& from) noexcept
    : GetStatsResponse() {
    *this = ::std::move(from);
  }

  inline GetStatsResponse& operator=(const GetStatsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatsResponse& operator=(GetStatsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatsResponse* internal_default_instance() {
    return reinterpret_cast<const GetStatsResponse*>(
               &_GetStatsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  friend void swap(GetStatsResponse& a, GetStatsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStatsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetStatsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetStatsResponse& from) {
    GetStatsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetStatsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetStatsResponse";
  }
  protected:
  explicit GetStatsResponse(::google::protobuf::Arena* arena);
  GetStatsResponse(::google::protobuf::Arena* arena, const GetStatsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetStatsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetStatsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.GetStatsRequest) */ {
 public:
  inline GetStatsRequest() : GetStatsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetStatsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetStatsRequest(const GetStatsRequest& from)
      : GetStatsRequest(nullptr, from) {}
  GetStatsRequest(GetStatsRequest&& from) noexcept
    : GetStatsRequest() {
    *this = ::std::move(from);
  }

  inline GetStatsRequest& operator=(const GetStatsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetStatsRequest& operator=(GetStatsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetStatsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetStatsRequest* internal_default_instance() {
    return reinterpret_cast<const GetStatsRequest*>(
               &_GetStatsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  friend void swap(GetStatsRequest& a, GetStatsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetStatsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetStatsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetStatsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetStatsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetStatsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetStatsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetStatsRequest";
  }
  protected:
  explicit GetStatsRequest(::google::protobuf::Arena* arena);
  GetStatsRequest(::google::protobuf::Arena* arena, const GetStatsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.GetStatsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetRedoRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetRedoRecordResponse) */ {
 public:
  inline GetRedoRecordResponse() : GetRedoRecordResponse(nullptr) {}
  ~GetRedoRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRedoRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetRedoRecordResponse(const GetRedoRecordResponse& from)
      : GetRedoRecordResponse(nullptr, from) {}
  GetRedoRecordResponse(GetRedoRecordResponse&& from) noexcept
    : GetRedoRecordResponse() {
    *this = ::std::move(from);
  }

  inline GetRedoRecordResponse& operator=(const GetRedoRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRedoRecordResponse& operator=(GetRedoRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRedoRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRedoRecordResponse* internal_default_instance() {
    return reinterpret_cast<const GetRedoRecordResponse*>(
               &_GetRedoRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  friend void swap(GetRedoRecordResponse& a, GetRedoRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRedoRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRedoRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRedoRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRedoRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRedoRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetRedoRecordResponse& from) {
    GetRedoRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetRedoRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetRedoRecordResponse";
  }
  protected:
  explicit GetRedoRecordResponse(::google::protobuf::Arena* arena);
  GetRedoRecordResponse(::google::protobuf::Arena* arena, const GetRedoRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetRedoRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      45, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetRedoRecordRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.GetRedoRecordRequest) */ {
 public:
  inline GetRedoRecordRequest() : GetRedoRecordRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRedoRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetRedoRecordRequest(const GetRedoRecordRequest& from)
      : GetRedoRecordRequest(nullptr, from) {}
  GetRedoRecordRequest(GetRedoRecordRequest&& from) noexcept
    : GetRedoRecordRequest() {
    *this = ::std::move(from);
  }

  inline GetRedoRecordRequest& operator=(const GetRedoRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRedoRecordRequest& operator=(GetRedoRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRedoRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRedoRecordRequest* internal_default_instance() {
    return reinterpret_cast<const GetRedoRecordRequest*>(
               &_GetRedoRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  friend void swap(GetRedoRecordRequest& a, GetRedoRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRedoRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRedoRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRedoRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRedoRecordRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetRedoRecordRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetRedoRecordRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetRedoRecordRequest";
  }
  protected:
  explicit GetRedoRecordRequest(::google::protobuf::Arena* arena);
  GetRedoRecordRequest(::google::protobuf::Arena* arena, const GetRedoRecordRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.GetRedoRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetRecordResponse) */ {
 public:
  inline GetRecordResponse() : GetRecordResponse(nullptr) {}
  ~GetRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetRecordResponse(const GetRecordResponse& from)
      : GetRecordResponse(nullptr, from) {}
  GetRecordResponse(GetRecordResponse&& from) noexcept
    : GetRecordResponse() {
    *this = ::std::move(from);
  }

  inline GetRecordResponse& operator=(const GetRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecordResponse& operator=(GetRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRecordResponse* internal_default_instance() {
    return reinterpret_cast<const GetRecordResponse*>(
               &_GetRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  friend void swap(GetRecordResponse& a, GetRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetRecordResponse& from) {
    GetRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetRecordResponse";
  }
  protected:
  explicit GetRecordResponse(::google::protobuf::Arena* arena);
  GetRecordResponse(::google::protobuf::Arena* arena, const GetRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetRecordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetRecordRequest) */ {
 public:
  inline GetRecordRequest() : GetRecordRequest(nullptr) {}
  ~GetRecordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetRecordRequest(const GetRecordRequest& from)
      : GetRecordRequest(nullptr, from) {}
  GetRecordRequest(GetRecordRequest&& from) noexcept
    : GetRecordRequest() {
    *this = ::std::move(from);
  }

  inline GetRecordRequest& operator=(const GetRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetRecordRequest& operator=(GetRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetRecordRequest* internal_default_instance() {
    return reinterpret_cast<const GetRecordRequest*>(
               &_GetRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  friend void swap(GetRecordRequest& a, GetRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetRecordRequest& from) {
    GetRecordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetRecordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetRecordRequest";
  }
  protected:
  explicit GetRecordRequest(::google::protobuf::Arena* arena);
  GetRecordRequest(::google::protobuf::Arena* arena, const GetRecordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      59, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetEntityByRecordIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetEntityByRecordIdResponse) */ {
 public:
  inline GetEntityByRecordIdResponse() : GetEntityByRecordIdResponse(nullptr) {}
  ~GetEntityByRecordIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetEntityByRecordIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetEntityByRecordIdResponse(const GetEntityByRecordIdResponse& from)
      : GetEntityByRecordIdResponse(nullptr, from) {}
  GetEntityByRecordIdResponse(GetEntityByRecordIdResponse&& from) noexcept
    : GetEntityByRecordIdResponse() {
    *this = ::std::move(from);
  }

  inline GetEntityByRecordIdResponse& operator=(const GetEntityByRecordIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEntityByRecordIdResponse& operator=(GetEntityByRecordIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEntityByRecordIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEntityByRecordIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetEntityByRecordIdResponse*>(
               &_GetEntityByRecordIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  friend void swap(GetEntityByRecordIdResponse& a, GetEntityByRecordIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEntityByRecordIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEntityByRecordIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEntityByRecordIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEntityByRecordIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEntityByRecordIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetEntityByRecordIdResponse& from) {
    GetEntityByRecordIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetEntityByRecordIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetEntityByRecordIdResponse";
  }
  protected:
  explicit GetEntityByRecordIdResponse(::google::protobuf::Arena* arena);
  GetEntityByRecordIdResponse(::google::protobuf::Arena* arena, const GetEntityByRecordIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetEntityByRecordIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetEntityByRecordIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetEntityByRecordIdRequest) */ {
 public:
  inline GetEntityByRecordIdRequest() : GetEntityByRecordIdRequest(nullptr) {}
  ~GetEntityByRecordIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetEntityByRecordIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetEntityByRecordIdRequest(const GetEntityByRecordIdRequest& from)
      : GetEntityByRecordIdRequest(nullptr, from) {}
  GetEntityByRecordIdRequest(GetEntityByRecordIdRequest&& from) noexcept
    : GetEntityByRecordIdRequest() {
    *this = ::std::move(from);
  }

  inline GetEntityByRecordIdRequest& operator=(const GetEntityByRecordIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEntityByRecordIdRequest& operator=(GetEntityByRecordIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEntityByRecordIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEntityByRecordIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetEntityByRecordIdRequest*>(
               &_GetEntityByRecordIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  friend void swap(GetEntityByRecordIdRequest& a, GetEntityByRecordIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEntityByRecordIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEntityByRecordIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEntityByRecordIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEntityByRecordIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEntityByRecordIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetEntityByRecordIdRequest& from) {
    GetEntityByRecordIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetEntityByRecordIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetEntityByRecordIdRequest";
  }
  protected:
  explicit GetEntityByRecordIdRequest(::google::protobuf::Arena* arena);
  GetEntityByRecordIdRequest(::google::protobuf::Arena* arena, const GetEntityByRecordIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetEntityByRecordIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      69, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetEntityByEntityIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetEntityByEntityIdResponse) */ {
 public:
  inline GetEntityByEntityIdResponse() : GetEntityByEntityIdResponse(nullptr) {}
  ~GetEntityByEntityIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetEntityByEntityIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetEntityByEntityIdResponse(const GetEntityByEntityIdResponse& from)
      : GetEntityByEntityIdResponse(nullptr, from) {}
  GetEntityByEntityIdResponse(GetEntityByEntityIdResponse&& from) noexcept
    : GetEntityByEntityIdResponse() {
    *this = ::std::move(from);
  }

  inline GetEntityByEntityIdResponse& operator=(const GetEntityByEntityIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEntityByEntityIdResponse& operator=(GetEntityByEntityIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEntityByEntityIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEntityByEntityIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetEntityByEntityIdResponse*>(
               &_GetEntityByEntityIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  friend void swap(GetEntityByEntityIdResponse& a, GetEntityByEntityIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEntityByEntityIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEntityByEntityIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEntityByEntityIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEntityByEntityIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEntityByEntityIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetEntityByEntityIdResponse& from) {
    GetEntityByEntityIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetEntityByEntityIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetEntityByEntityIdResponse";
  }
  protected:
  explicit GetEntityByEntityIdResponse(::google::protobuf::Arena* arena);
  GetEntityByEntityIdResponse(::google::protobuf::Arena* arena, const GetEntityByEntityIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetEntityByEntityIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetEntityByEntityIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetEntityByEntityIdRequest) */ {
 public:
  inline GetEntityByEntityIdRequest() : GetEntityByEntityIdRequest(nullptr) {}
  ~GetEntityByEntityIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetEntityByEntityIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetEntityByEntityIdRequest(const GetEntityByEntityIdRequest& from)
      : GetEntityByEntityIdRequest(nullptr, from) {}
  GetEntityByEntityIdRequest(GetEntityByEntityIdRequest&& from) noexcept
    : GetEntityByEntityIdRequest() {
    *this = ::std::move(from);
  }

  inline GetEntityByEntityIdRequest& operator=(const GetEntityByEntityIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetEntityByEntityIdRequest& operator=(GetEntityByEntityIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetEntityByEntityIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetEntityByEntityIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetEntityByEntityIdRequest*>(
               &_GetEntityByEntityIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  friend void swap(GetEntityByEntityIdRequest& a, GetEntityByEntityIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetEntityByEntityIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetEntityByEntityIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetEntityByEntityIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetEntityByEntityIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetEntityByEntityIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetEntityByEntityIdRequest& from) {
    GetEntityByEntityIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetEntityByEntityIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetEntityByEntityIdRequest";
  }
  protected:
  explicit GetEntityByEntityIdRequest(::google::protobuf::Arena* arena);
  GetEntityByEntityIdRequest(::google::protobuf::Arena* arena, const GetEntityByEntityIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // int64 entity_id = 1;
  void clear_entity_id() ;
  ::int64_t entity_id() const;
  void set_entity_id(::int64_t value);

  private:
  ::int64_t _internal_entity_id() const;
  void _internal_set_entity_id(::int64_t value);

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetEntityByEntityIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t entity_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetActiveConfigIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.GetActiveConfigIdResponse) */ {
 public:
  inline GetActiveConfigIdResponse() : GetActiveConfigIdResponse(nullptr) {}
  ~GetActiveConfigIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveConfigIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetActiveConfigIdResponse(const GetActiveConfigIdResponse& from)
      : GetActiveConfigIdResponse(nullptr, from) {}
  GetActiveConfigIdResponse(GetActiveConfigIdResponse&& from) noexcept
    : GetActiveConfigIdResponse() {
    *this = ::std::move(from);
  }

  inline GetActiveConfigIdResponse& operator=(const GetActiveConfigIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActiveConfigIdResponse& operator=(GetActiveConfigIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActiveConfigIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetActiveConfigIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetActiveConfigIdResponse*>(
               &_GetActiveConfigIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  friend void swap(GetActiveConfigIdResponse& a, GetActiveConfigIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetActiveConfigIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActiveConfigIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActiveConfigIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetActiveConfigIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetActiveConfigIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetActiveConfigIdResponse& from) {
    GetActiveConfigIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetActiveConfigIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetActiveConfigIdResponse";
  }
  protected:
  explicit GetActiveConfigIdResponse(::google::protobuf::Arena* arena);
  GetActiveConfigIdResponse(::google::protobuf::Arena* arena, const GetActiveConfigIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.GetActiveConfigIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class GetActiveConfigIdRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.GetActiveConfigIdRequest) */ {
 public:
  inline GetActiveConfigIdRequest() : GetActiveConfigIdRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetActiveConfigIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetActiveConfigIdRequest(const GetActiveConfigIdRequest& from)
      : GetActiveConfigIdRequest(nullptr, from) {}
  GetActiveConfigIdRequest(GetActiveConfigIdRequest&& from) noexcept
    : GetActiveConfigIdRequest() {
    *this = ::std::move(from);
  }

  inline GetActiveConfigIdRequest& operator=(const GetActiveConfigIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetActiveConfigIdRequest& operator=(GetActiveConfigIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetActiveConfigIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetActiveConfigIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetActiveConfigIdRequest*>(
               &_GetActiveConfigIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  friend void swap(GetActiveConfigIdRequest& a, GetActiveConfigIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetActiveConfigIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetActiveConfigIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetActiveConfigIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetActiveConfigIdRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetActiveConfigIdRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetActiveConfigIdRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.GetActiveConfigIdRequest";
  }
  protected:
  explicit GetActiveConfigIdRequest(::google::protobuf::Arena* arena);
  GetActiveConfigIdRequest(::google::protobuf::Arena* arena, const GetActiveConfigIdRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.GetActiveConfigIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindPathByRecordIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindPathByRecordIdResponse) */ {
 public:
  inline FindPathByRecordIdResponse() : FindPathByRecordIdResponse(nullptr) {}
  ~FindPathByRecordIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindPathByRecordIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindPathByRecordIdResponse(const FindPathByRecordIdResponse& from)
      : FindPathByRecordIdResponse(nullptr, from) {}
  FindPathByRecordIdResponse(FindPathByRecordIdResponse&& from) noexcept
    : FindPathByRecordIdResponse() {
    *this = ::std::move(from);
  }

  inline FindPathByRecordIdResponse& operator=(const FindPathByRecordIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindPathByRecordIdResponse& operator=(FindPathByRecordIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindPathByRecordIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindPathByRecordIdResponse* internal_default_instance() {
    return reinterpret_cast<const FindPathByRecordIdResponse*>(
               &_FindPathByRecordIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  friend void swap(FindPathByRecordIdResponse& a, FindPathByRecordIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindPathByRecordIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindPathByRecordIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindPathByRecordIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindPathByRecordIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindPathByRecordIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindPathByRecordIdResponse& from) {
    FindPathByRecordIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindPathByRecordIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindPathByRecordIdResponse";
  }
  protected:
  explicit FindPathByRecordIdResponse(::google::protobuf::Arena* arena);
  FindPathByRecordIdResponse(::google::protobuf::Arena* arena, const FindPathByRecordIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindPathByRecordIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindPathByRecordIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindPathByRecordIdRequest) */ {
 public:
  inline FindPathByRecordIdRequest() : FindPathByRecordIdRequest(nullptr) {}
  ~FindPathByRecordIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindPathByRecordIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindPathByRecordIdRequest(const FindPathByRecordIdRequest& from)
      : FindPathByRecordIdRequest(nullptr, from) {}
  FindPathByRecordIdRequest(FindPathByRecordIdRequest&& from) noexcept
    : FindPathByRecordIdRequest() {
    *this = ::std::move(from);
  }

  inline FindPathByRecordIdRequest& operator=(const FindPathByRecordIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindPathByRecordIdRequest& operator=(FindPathByRecordIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindPathByRecordIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindPathByRecordIdRequest* internal_default_instance() {
    return reinterpret_cast<const FindPathByRecordIdRequest*>(
               &_FindPathByRecordIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  friend void swap(FindPathByRecordIdRequest& a, FindPathByRecordIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindPathByRecordIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindPathByRecordIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindPathByRecordIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindPathByRecordIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindPathByRecordIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindPathByRecordIdRequest& from) {
    FindPathByRecordIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindPathByRecordIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindPathByRecordIdRequest";
  }
  protected:
  explicit FindPathByRecordIdRequest(::google::protobuf::Arena* arena);
  FindPathByRecordIdRequest(::google::protobuf::Arena* arena, const FindPathByRecordIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kStartDataSourceCodeFieldNumber = 1,
    kStartRecordIdFieldNumber = 2,
    kEndDataSourceCodeFieldNumber = 3,
    kEndRecordIdFieldNumber = 4,
    kAvoidRecordKeysFieldNumber = 6,
    kRequiredDataSourcesFieldNumber = 7,
    kMaxDegreesFieldNumber = 5,
    kFlagsFieldNumber = 8,
  };
  // string start_data_source_code = 1;
  void clear_start_data_source_code() ;
  const std::string& start_data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_start_data_source_code();
  PROTOBUF_NODISCARD std::string* release_start_data_source_code();
  void set_allocated_start_data_source_code(std::string* value);

  private:
  const std::string& _internal_start_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_start_data_source_code();

  public:
  // string start_record_id = 2;
  void clear_start_record_id() ;
  const std::string& start_record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_start_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_start_record_id();
  PROTOBUF_NODISCARD std::string* release_start_record_id();
  void set_allocated_start_record_id(std::string* value);

  private:
  const std::string& _internal_start_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_start_record_id(
      const std::string& value);
  std::string* _internal_mutable_start_record_id();

  public:
  // string end_data_source_code = 3;
  void clear_end_data_source_code() ;
  const std::string& end_data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_end_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_end_data_source_code();
  PROTOBUF_NODISCARD std::string* release_end_data_source_code();
  void set_allocated_end_data_source_code(std::string* value);

  private:
  const std::string& _internal_end_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_end_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_end_data_source_code();

  public:
  // string end_record_id = 4;
  void clear_end_record_id() ;
  const std::string& end_record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_end_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_end_record_id();
  PROTOBUF_NODISCARD std::string* release_end_record_id();
  void set_allocated_end_record_id(std::string* value);

  private:
  const std::string& _internal_end_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_end_record_id(
      const std::string& value);
  std::string* _internal_mutable_end_record_id();

  public:
  // string avoid_record_keys = 6;
  void clear_avoid_record_keys() ;
  const std::string& avoid_record_keys() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avoid_record_keys(Arg_&& arg, Args_... args);
  std::string* mutable_avoid_record_keys();
  PROTOBUF_NODISCARD std::string* release_avoid_record_keys();
  void set_allocated_avoid_record_keys(std::string* value);

  private:
  const std::string& _internal_avoid_record_keys() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avoid_record_keys(
      const std::string& value);
  std::string* _internal_mutable_avoid_record_keys();

  public:
  // string required_data_sources = 7;
  void clear_required_data_sources() ;
  const std::string& required_data_sources() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_required_data_sources(Arg_&& arg, Args_... args);
  std::string* mutable_required_data_sources();
  PROTOBUF_NODISCARD std::string* release_required_data_sources();
  void set_allocated_required_data_sources(std::string* value);

  private:
  const std::string& _internal_required_data_sources() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_required_data_sources(
      const std::string& value);
  std::string* _internal_mutable_required_data_sources();

  public:
  // int64 max_degrees = 5;
  void clear_max_degrees() ;
  ::int64_t max_degrees() const;
  void set_max_degrees(::int64_t value);

  private:
  ::int64_t _internal_max_degrees() const;
  void _internal_set_max_degrees(::int64_t value);

  public:
  // int64 flags = 8;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindPathByRecordIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      159, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr start_data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr start_record_id_;
    ::google::protobuf::internal::ArenaStringPtr end_data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr end_record_id_;
    ::google::protobuf::internal::ArenaStringPtr avoid_record_keys_;
    ::google::protobuf::internal::ArenaStringPtr required_data_sources_;
    ::int64_t max_degrees_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindPathByEntityIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindPathByEntityIdResponse) */ {
 public:
  inline FindPathByEntityIdResponse() : FindPathByEntityIdResponse(nullptr) {}
  ~FindPathByEntityIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindPathByEntityIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindPathByEntityIdResponse(const FindPathByEntityIdResponse& from)
      : FindPathByEntityIdResponse(nullptr, from) {}
  FindPathByEntityIdResponse(FindPathByEntityIdResponse&& from) noexcept
    : FindPathByEntityIdResponse() {
    *this = ::std::move(from);
  }

  inline FindPathByEntityIdResponse& operator=(const FindPathByEntityIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindPathByEntityIdResponse& operator=(FindPathByEntityIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindPathByEntityIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindPathByEntityIdResponse* internal_default_instance() {
    return reinterpret_cast<const FindPathByEntityIdResponse*>(
               &_FindPathByEntityIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  friend void swap(FindPathByEntityIdResponse& a, FindPathByEntityIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindPathByEntityIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindPathByEntityIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindPathByEntityIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindPathByEntityIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindPathByEntityIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindPathByEntityIdResponse& from) {
    FindPathByEntityIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindPathByEntityIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindPathByEntityIdResponse";
  }
  protected:
  explicit FindPathByEntityIdResponse(::google::protobuf::Arena* arena);
  FindPathByEntityIdResponse(::google::protobuf::Arena* arena, const FindPathByEntityIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindPathByEntityIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      50, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindPathByEntityIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindPathByEntityIdRequest) */ {
 public:
  inline FindPathByEntityIdRequest() : FindPathByEntityIdRequest(nullptr) {}
  ~FindPathByEntityIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindPathByEntityIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindPathByEntityIdRequest(const FindPathByEntityIdRequest& from)
      : FindPathByEntityIdRequest(nullptr, from) {}
  FindPathByEntityIdRequest(FindPathByEntityIdRequest&& from) noexcept
    : FindPathByEntityIdRequest() {
    *this = ::std::move(from);
  }

  inline FindPathByEntityIdRequest& operator=(const FindPathByEntityIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindPathByEntityIdRequest& operator=(FindPathByEntityIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindPathByEntityIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindPathByEntityIdRequest* internal_default_instance() {
    return reinterpret_cast<const FindPathByEntityIdRequest*>(
               &_FindPathByEntityIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  friend void swap(FindPathByEntityIdRequest& a, FindPathByEntityIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindPathByEntityIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindPathByEntityIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindPathByEntityIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindPathByEntityIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindPathByEntityIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindPathByEntityIdRequest& from) {
    FindPathByEntityIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindPathByEntityIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindPathByEntityIdRequest";
  }
  protected:
  explicit FindPathByEntityIdRequest(::google::protobuf::Arena* arena);
  FindPathByEntityIdRequest(::google::protobuf::Arena* arena, const FindPathByEntityIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAvoidEntityIdsFieldNumber = 4,
    kRequiredDataSourcesFieldNumber = 5,
    kStartEntityIdFieldNumber = 1,
    kEndEntityIdFieldNumber = 2,
    kMaxDegreesFieldNumber = 3,
    kFlagsFieldNumber = 6,
  };
  // string avoid_entity_ids = 4;
  void clear_avoid_entity_ids() ;
  const std::string& avoid_entity_ids() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_avoid_entity_ids(Arg_&& arg, Args_... args);
  std::string* mutable_avoid_entity_ids();
  PROTOBUF_NODISCARD std::string* release_avoid_entity_ids();
  void set_allocated_avoid_entity_ids(std::string* value);

  private:
  const std::string& _internal_avoid_entity_ids() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_avoid_entity_ids(
      const std::string& value);
  std::string* _internal_mutable_avoid_entity_ids();

  public:
  // string required_data_sources = 5;
  void clear_required_data_sources() ;
  const std::string& required_data_sources() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_required_data_sources(Arg_&& arg, Args_... args);
  std::string* mutable_required_data_sources();
  PROTOBUF_NODISCARD std::string* release_required_data_sources();
  void set_allocated_required_data_sources(std::string* value);

  private:
  const std::string& _internal_required_data_sources() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_required_data_sources(
      const std::string& value);
  std::string* _internal_mutable_required_data_sources();

  public:
  // int64 start_entity_id = 1;
  void clear_start_entity_id() ;
  ::int64_t start_entity_id() const;
  void set_start_entity_id(::int64_t value);

  private:
  ::int64_t _internal_start_entity_id() const;
  void _internal_set_start_entity_id(::int64_t value);

  public:
  // int64 end_entity_id = 2;
  void clear_end_entity_id() ;
  ::int64_t end_entity_id() const;
  void set_end_entity_id(::int64_t value);

  private:
  ::int64_t _internal_end_entity_id() const;
  void _internal_set_end_entity_id(::int64_t value);

  public:
  // int64 max_degrees = 3;
  void clear_max_degrees() ;
  ::int64_t max_degrees() const;
  void set_max_degrees(::int64_t value);

  private:
  ::int64_t _internal_max_degrees() const;
  void _internal_set_max_degrees(::int64_t value);

  public:
  // int64 flags = 6;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindPathByEntityIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 0,
      80, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr avoid_entity_ids_;
    ::google::protobuf::internal::ArenaStringPtr required_data_sources_;
    ::int64_t start_entity_id_;
    ::int64_t end_entity_id_;
    ::int64_t max_degrees_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindNetworkByRecordIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindNetworkByRecordIdResponse) */ {
 public:
  inline FindNetworkByRecordIdResponse() : FindNetworkByRecordIdResponse(nullptr) {}
  ~FindNetworkByRecordIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindNetworkByRecordIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindNetworkByRecordIdResponse(const FindNetworkByRecordIdResponse& from)
      : FindNetworkByRecordIdResponse(nullptr, from) {}
  FindNetworkByRecordIdResponse(FindNetworkByRecordIdResponse&& from) noexcept
    : FindNetworkByRecordIdResponse() {
    *this = ::std::move(from);
  }

  inline FindNetworkByRecordIdResponse& operator=(const FindNetworkByRecordIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindNetworkByRecordIdResponse& operator=(FindNetworkByRecordIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindNetworkByRecordIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindNetworkByRecordIdResponse* internal_default_instance() {
    return reinterpret_cast<const FindNetworkByRecordIdResponse*>(
               &_FindNetworkByRecordIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  friend void swap(FindNetworkByRecordIdResponse& a, FindNetworkByRecordIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindNetworkByRecordIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindNetworkByRecordIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindNetworkByRecordIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindNetworkByRecordIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindNetworkByRecordIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindNetworkByRecordIdResponse& from) {
    FindNetworkByRecordIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindNetworkByRecordIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindNetworkByRecordIdResponse";
  }
  protected:
  explicit FindNetworkByRecordIdResponse(::google::protobuf::Arena* arena);
  FindNetworkByRecordIdResponse(::google::protobuf::Arena* arena, const FindNetworkByRecordIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindNetworkByRecordIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindNetworkByRecordIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindNetworkByRecordIdRequest) */ {
 public:
  inline FindNetworkByRecordIdRequest() : FindNetworkByRecordIdRequest(nullptr) {}
  ~FindNetworkByRecordIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindNetworkByRecordIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindNetworkByRecordIdRequest(const FindNetworkByRecordIdRequest& from)
      : FindNetworkByRecordIdRequest(nullptr, from) {}
  FindNetworkByRecordIdRequest(FindNetworkByRecordIdRequest&& from) noexcept
    : FindNetworkByRecordIdRequest() {
    *this = ::std::move(from);
  }

  inline FindNetworkByRecordIdRequest& operator=(const FindNetworkByRecordIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindNetworkByRecordIdRequest& operator=(FindNetworkByRecordIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindNetworkByRecordIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindNetworkByRecordIdRequest* internal_default_instance() {
    return reinterpret_cast<const FindNetworkByRecordIdRequest*>(
               &_FindNetworkByRecordIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  friend void swap(FindNetworkByRecordIdRequest& a, FindNetworkByRecordIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindNetworkByRecordIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindNetworkByRecordIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindNetworkByRecordIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindNetworkByRecordIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindNetworkByRecordIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindNetworkByRecordIdRequest& from) {
    FindNetworkByRecordIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindNetworkByRecordIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindNetworkByRecordIdRequest";
  }
  protected:
  explicit FindNetworkByRecordIdRequest(::google::protobuf::Arena* arena);
  FindNetworkByRecordIdRequest(::google::protobuf::Arena* arena, const FindNetworkByRecordIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kRecordKeysFieldNumber = 1,
    kMaxDegreesFieldNumber = 2,
    kBuildOutDegreesFieldNumber = 3,
    kBuildOutMaxEntitiesFieldNumber = 4,
    kFlagsFieldNumber = 5,
  };
  // string record_keys = 1;
  void clear_record_keys() ;
  const std::string& record_keys() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_keys(Arg_&& arg, Args_... args);
  std::string* mutable_record_keys();
  PROTOBUF_NODISCARD std::string* release_record_keys();
  void set_allocated_record_keys(std::string* value);

  private:
  const std::string& _internal_record_keys() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_keys(
      const std::string& value);
  std::string* _internal_mutable_record_keys();

  public:
  // int64 max_degrees = 2;
  void clear_max_degrees() ;
  ::int64_t max_degrees() const;
  void set_max_degrees(::int64_t value);

  private:
  ::int64_t _internal_max_degrees() const;
  void _internal_set_max_degrees(::int64_t value);

  public:
  // int64 build_out_degrees = 3;
  void clear_build_out_degrees() ;
  ::int64_t build_out_degrees() const;
  void set_build_out_degrees(::int64_t value);

  private:
  ::int64_t _internal_build_out_degrees() const;
  void _internal_set_build_out_degrees(::int64_t value);

  public:
  // int64 build_out_max_entities = 4;
  void clear_build_out_max_entities() ;
  ::int64_t build_out_max_entities() const;
  void set_build_out_max_entities(::int64_t value);

  private:
  ::int64_t _internal_build_out_max_entities() const;
  void _internal_set_build_out_max_entities(::int64_t value);

  public:
  // int64 flags = 5;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindNetworkByRecordIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      57, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr record_keys_;
    ::int64_t max_degrees_;
    ::int64_t build_out_degrees_;
    ::int64_t build_out_max_entities_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindNetworkByEntityIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindNetworkByEntityIdResponse) */ {
 public:
  inline FindNetworkByEntityIdResponse() : FindNetworkByEntityIdResponse(nullptr) {}
  ~FindNetworkByEntityIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindNetworkByEntityIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindNetworkByEntityIdResponse(const FindNetworkByEntityIdResponse& from)
      : FindNetworkByEntityIdResponse(nullptr, from) {}
  FindNetworkByEntityIdResponse(FindNetworkByEntityIdResponse&& from) noexcept
    : FindNetworkByEntityIdResponse() {
    *this = ::std::move(from);
  }

  inline FindNetworkByEntityIdResponse& operator=(const FindNetworkByEntityIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindNetworkByEntityIdResponse& operator=(FindNetworkByEntityIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindNetworkByEntityIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindNetworkByEntityIdResponse* internal_default_instance() {
    return reinterpret_cast<const FindNetworkByEntityIdResponse*>(
               &_FindNetworkByEntityIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  friend void swap(FindNetworkByEntityIdResponse& a, FindNetworkByEntityIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindNetworkByEntityIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindNetworkByEntityIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindNetworkByEntityIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindNetworkByEntityIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindNetworkByEntityIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindNetworkByEntityIdResponse& from) {
    FindNetworkByEntityIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindNetworkByEntityIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindNetworkByEntityIdResponse";
  }
  protected:
  explicit FindNetworkByEntityIdResponse(::google::protobuf::Arena* arena);
  FindNetworkByEntityIdResponse(::google::protobuf::Arena* arena, const FindNetworkByEntityIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindNetworkByEntityIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      53, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindNetworkByEntityIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindNetworkByEntityIdRequest) */ {
 public:
  inline FindNetworkByEntityIdRequest() : FindNetworkByEntityIdRequest(nullptr) {}
  ~FindNetworkByEntityIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindNetworkByEntityIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindNetworkByEntityIdRequest(const FindNetworkByEntityIdRequest& from)
      : FindNetworkByEntityIdRequest(nullptr, from) {}
  FindNetworkByEntityIdRequest(FindNetworkByEntityIdRequest&& from) noexcept
    : FindNetworkByEntityIdRequest() {
    *this = ::std::move(from);
  }

  inline FindNetworkByEntityIdRequest& operator=(const FindNetworkByEntityIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindNetworkByEntityIdRequest& operator=(FindNetworkByEntityIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindNetworkByEntityIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindNetworkByEntityIdRequest* internal_default_instance() {
    return reinterpret_cast<const FindNetworkByEntityIdRequest*>(
               &_FindNetworkByEntityIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  friend void swap(FindNetworkByEntityIdRequest& a, FindNetworkByEntityIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindNetworkByEntityIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindNetworkByEntityIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindNetworkByEntityIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindNetworkByEntityIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindNetworkByEntityIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindNetworkByEntityIdRequest& from) {
    FindNetworkByEntityIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindNetworkByEntityIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindNetworkByEntityIdRequest";
  }
  protected:
  explicit FindNetworkByEntityIdRequest(::google::protobuf::Arena* arena);
  FindNetworkByEntityIdRequest(::google::protobuf::Arena* arena, const FindNetworkByEntityIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdsFieldNumber = 1,
    kMaxDegreesFieldNumber = 2,
    kBuildOutDegreesFieldNumber = 3,
    kBuildOutMaxEntitiesFieldNumber = 4,
    kFlagsFieldNumber = 5,
  };
  // string entity_ids = 1;
  void clear_entity_ids() ;
  const std::string& entity_ids() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_entity_ids(Arg_&& arg, Args_... args);
  std::string* mutable_entity_ids();
  PROTOBUF_NODISCARD std::string* release_entity_ids();
  void set_allocated_entity_ids(std::string* value);

  private:
  const std::string& _internal_entity_ids() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_entity_ids(
      const std::string& value);
  std::string* _internal_mutable_entity_ids();

  public:
  // int64 max_degrees = 2;
  void clear_max_degrees() ;
  ::int64_t max_degrees() const;
  void set_max_degrees(::int64_t value);

  private:
  ::int64_t _internal_max_degrees() const;
  void _internal_set_max_degrees(::int64_t value);

  public:
  // int64 build_out_degrees = 3;
  void clear_build_out_degrees() ;
  ::int64_t build_out_degrees() const;
  void set_build_out_degrees(::int64_t value);

  private:
  ::int64_t _internal_build_out_degrees() const;
  void _internal_set_build_out_degrees(::int64_t value);

  public:
  // int64 build_out_max_entities = 4;
  void clear_build_out_max_entities() ;
  ::int64_t build_out_max_entities() const;
  void set_build_out_max_entities(::int64_t value);

  private:
  ::int64_t _internal_build_out_max_entities() const;
  void _internal_set_build_out_max_entities(::int64_t value);

  public:
  // int64 flags = 5;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindNetworkByEntityIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr entity_ids_;
    ::int64_t max_degrees_;
    ::int64_t build_out_degrees_;
    ::int64_t build_out_max_entities_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindInterestingEntitiesByRecordIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindInterestingEntitiesByRecordIdResponse) */ {
 public:
  inline FindInterestingEntitiesByRecordIdResponse() : FindInterestingEntitiesByRecordIdResponse(nullptr) {}
  ~FindInterestingEntitiesByRecordIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindInterestingEntitiesByRecordIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindInterestingEntitiesByRecordIdResponse(const FindInterestingEntitiesByRecordIdResponse& from)
      : FindInterestingEntitiesByRecordIdResponse(nullptr, from) {}
  FindInterestingEntitiesByRecordIdResponse(FindInterestingEntitiesByRecordIdResponse&& from) noexcept
    : FindInterestingEntitiesByRecordIdResponse() {
    *this = ::std::move(from);
  }

  inline FindInterestingEntitiesByRecordIdResponse& operator=(const FindInterestingEntitiesByRecordIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindInterestingEntitiesByRecordIdResponse& operator=(FindInterestingEntitiesByRecordIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindInterestingEntitiesByRecordIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindInterestingEntitiesByRecordIdResponse* internal_default_instance() {
    return reinterpret_cast<const FindInterestingEntitiesByRecordIdResponse*>(
               &_FindInterestingEntitiesByRecordIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  friend void swap(FindInterestingEntitiesByRecordIdResponse& a, FindInterestingEntitiesByRecordIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindInterestingEntitiesByRecordIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindInterestingEntitiesByRecordIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindInterestingEntitiesByRecordIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindInterestingEntitiesByRecordIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindInterestingEntitiesByRecordIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindInterestingEntitiesByRecordIdResponse& from) {
    FindInterestingEntitiesByRecordIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindInterestingEntitiesByRecordIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindInterestingEntitiesByRecordIdResponse";
  }
  protected:
  explicit FindInterestingEntitiesByRecordIdResponse(::google::protobuf::Arena* arena);
  FindInterestingEntitiesByRecordIdResponse(::google::protobuf::Arena* arena, const FindInterestingEntitiesByRecordIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindInterestingEntitiesByRecordIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindInterestingEntitiesByRecordIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindInterestingEntitiesByRecordIdRequest) */ {
 public:
  inline FindInterestingEntitiesByRecordIdRequest() : FindInterestingEntitiesByRecordIdRequest(nullptr) {}
  ~FindInterestingEntitiesByRecordIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindInterestingEntitiesByRecordIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindInterestingEntitiesByRecordIdRequest(const FindInterestingEntitiesByRecordIdRequest& from)
      : FindInterestingEntitiesByRecordIdRequest(nullptr, from) {}
  FindInterestingEntitiesByRecordIdRequest(FindInterestingEntitiesByRecordIdRequest&& from) noexcept
    : FindInterestingEntitiesByRecordIdRequest() {
    *this = ::std::move(from);
  }

  inline FindInterestingEntitiesByRecordIdRequest& operator=(const FindInterestingEntitiesByRecordIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindInterestingEntitiesByRecordIdRequest& operator=(FindInterestingEntitiesByRecordIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindInterestingEntitiesByRecordIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindInterestingEntitiesByRecordIdRequest* internal_default_instance() {
    return reinterpret_cast<const FindInterestingEntitiesByRecordIdRequest*>(
               &_FindInterestingEntitiesByRecordIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  friend void swap(FindInterestingEntitiesByRecordIdRequest& a, FindInterestingEntitiesByRecordIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindInterestingEntitiesByRecordIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindInterestingEntitiesByRecordIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindInterestingEntitiesByRecordIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindInterestingEntitiesByRecordIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindInterestingEntitiesByRecordIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindInterestingEntitiesByRecordIdRequest& from) {
    FindInterestingEntitiesByRecordIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindInterestingEntitiesByRecordIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindInterestingEntitiesByRecordIdRequest";
  }
  protected:
  explicit FindInterestingEntitiesByRecordIdRequest(::google::protobuf::Arena* arena);
  FindInterestingEntitiesByRecordIdRequest(::google::protobuf::Arena* arena, const FindInterestingEntitiesByRecordIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindInterestingEntitiesByRecordIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      83, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindInterestingEntitiesByEntityIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindInterestingEntitiesByEntityIdResponse) */ {
 public:
  inline FindInterestingEntitiesByEntityIdResponse() : FindInterestingEntitiesByEntityIdResponse(nullptr) {}
  ~FindInterestingEntitiesByEntityIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindInterestingEntitiesByEntityIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline FindInterestingEntitiesByEntityIdResponse(const FindInterestingEntitiesByEntityIdResponse& from)
      : FindInterestingEntitiesByEntityIdResponse(nullptr, from) {}
  FindInterestingEntitiesByEntityIdResponse(FindInterestingEntitiesByEntityIdResponse&& from) noexcept
    : FindInterestingEntitiesByEntityIdResponse() {
    *this = ::std::move(from);
  }

  inline FindInterestingEntitiesByEntityIdResponse& operator=(const FindInterestingEntitiesByEntityIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindInterestingEntitiesByEntityIdResponse& operator=(FindInterestingEntitiesByEntityIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindInterestingEntitiesByEntityIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindInterestingEntitiesByEntityIdResponse* internal_default_instance() {
    return reinterpret_cast<const FindInterestingEntitiesByEntityIdResponse*>(
               &_FindInterestingEntitiesByEntityIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(FindInterestingEntitiesByEntityIdResponse& a, FindInterestingEntitiesByEntityIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FindInterestingEntitiesByEntityIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindInterestingEntitiesByEntityIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindInterestingEntitiesByEntityIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindInterestingEntitiesByEntityIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindInterestingEntitiesByEntityIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindInterestingEntitiesByEntityIdResponse& from) {
    FindInterestingEntitiesByEntityIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindInterestingEntitiesByEntityIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindInterestingEntitiesByEntityIdResponse";
  }
  protected:
  explicit FindInterestingEntitiesByEntityIdResponse(::google::protobuf::Arena* arena);
  FindInterestingEntitiesByEntityIdResponse(::google::protobuf::Arena* arena, const FindInterestingEntitiesByEntityIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindInterestingEntitiesByEntityIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      65, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FindInterestingEntitiesByEntityIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FindInterestingEntitiesByEntityIdRequest) */ {
 public:
  inline FindInterestingEntitiesByEntityIdRequest() : FindInterestingEntitiesByEntityIdRequest(nullptr) {}
  ~FindInterestingEntitiesByEntityIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FindInterestingEntitiesByEntityIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline FindInterestingEntitiesByEntityIdRequest(const FindInterestingEntitiesByEntityIdRequest& from)
      : FindInterestingEntitiesByEntityIdRequest(nullptr, from) {}
  FindInterestingEntitiesByEntityIdRequest(FindInterestingEntitiesByEntityIdRequest&& from) noexcept
    : FindInterestingEntitiesByEntityIdRequest() {
    *this = ::std::move(from);
  }

  inline FindInterestingEntitiesByEntityIdRequest& operator=(const FindInterestingEntitiesByEntityIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FindInterestingEntitiesByEntityIdRequest& operator=(FindInterestingEntitiesByEntityIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FindInterestingEntitiesByEntityIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FindInterestingEntitiesByEntityIdRequest* internal_default_instance() {
    return reinterpret_cast<const FindInterestingEntitiesByEntityIdRequest*>(
               &_FindInterestingEntitiesByEntityIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(FindInterestingEntitiesByEntityIdRequest& a, FindInterestingEntitiesByEntityIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FindInterestingEntitiesByEntityIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FindInterestingEntitiesByEntityIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FindInterestingEntitiesByEntityIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FindInterestingEntitiesByEntityIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FindInterestingEntitiesByEntityIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FindInterestingEntitiesByEntityIdRequest& from) {
    FindInterestingEntitiesByEntityIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FindInterestingEntitiesByEntityIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FindInterestingEntitiesByEntityIdRequest";
  }
  protected:
  explicit FindInterestingEntitiesByEntityIdRequest(::google::protobuf::Arena* arena);
  FindInterestingEntitiesByEntityIdRequest(::google::protobuf::Arena* arena, const FindInterestingEntitiesByEntityIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kEntityIdFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // int64 entity_id = 1;
  void clear_entity_id() ;
  ::int64_t entity_id() const;
  void set_entity_id(::int64_t value);

  private:
  ::int64_t _internal_entity_id() const;
  void _internal_set_entity_id(::int64_t value);

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FindInterestingEntitiesByEntityIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t entity_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FetchNextResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FetchNextResponse) */ {
 public:
  inline FetchNextResponse() : FetchNextResponse(nullptr) {}
  ~FetchNextResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FetchNextResponse(::google::protobuf::internal::ConstantInitialized);

  inline FetchNextResponse(const FetchNextResponse& from)
      : FetchNextResponse(nullptr, from) {}
  FetchNextResponse(FetchNextResponse&& from) noexcept
    : FetchNextResponse() {
    *this = ::std::move(from);
  }

  inline FetchNextResponse& operator=(const FetchNextResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline FetchNextResponse& operator=(FetchNextResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FetchNextResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const FetchNextResponse* internal_default_instance() {
    return reinterpret_cast<const FetchNextResponse*>(
               &_FetchNextResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(FetchNextResponse& a, FetchNextResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(FetchNextResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FetchNextResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FetchNextResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FetchNextResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FetchNextResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FetchNextResponse& from) {
    FetchNextResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FetchNextResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FetchNextResponse";
  }
  protected:
  explicit FetchNextResponse(::google::protobuf::Arena* arena);
  FetchNextResponse(::google::protobuf::Arena* arena, const FetchNextResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.FetchNextResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class FetchNextRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.FetchNextRequest) */ {
 public:
  inline FetchNextRequest() : FetchNextRequest(nullptr) {}
  ~FetchNextRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR FetchNextRequest(::google::protobuf::internal::ConstantInitialized);

  inline FetchNextRequest(const FetchNextRequest& from)
      : FetchNextRequest(nullptr, from) {}
  FetchNextRequest(FetchNextRequest&& from) noexcept
    : FetchNextRequest() {
    *this = ::std::move(from);
  }

  inline FetchNextRequest& operator=(const FetchNextRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline FetchNextRequest& operator=(FetchNextRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FetchNextRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const FetchNextRequest* internal_default_instance() {
    return reinterpret_cast<const FetchNextRequest*>(
               &_FetchNextRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(FetchNextRequest& a, FetchNextRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(FetchNextRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FetchNextRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FetchNextRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<FetchNextRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FetchNextRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const FetchNextRequest& from) {
    FetchNextRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FetchNextRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.FetchNextRequest";
  }
  protected:
  explicit FetchNextRequest(::google::protobuf::Arena* arena);
  FetchNextRequest(::google::protobuf::Arena* arena, const FetchNextRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportHandleFieldNumber = 1,
  };
  // int64 export_handle = 1;
  void clear_export_handle() ;
  ::int64_t export_handle() const;
  void set_export_handle(::int64_t value);

  private:
  ::int64_t _internal_export_handle() const;
  void _internal_set_export_handle(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.FetchNextRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t export_handle_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ExportJsonEntityReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ExportJsonEntityReportResponse) */ {
 public:
  inline ExportJsonEntityReportResponse() : ExportJsonEntityReportResponse(nullptr) {}
  ~ExportJsonEntityReportResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExportJsonEntityReportResponse(::google::protobuf::internal::ConstantInitialized);

  inline ExportJsonEntityReportResponse(const ExportJsonEntityReportResponse& from)
      : ExportJsonEntityReportResponse(nullptr, from) {}
  ExportJsonEntityReportResponse(ExportJsonEntityReportResponse&& from) noexcept
    : ExportJsonEntityReportResponse() {
    *this = ::std::move(from);
  }

  inline ExportJsonEntityReportResponse& operator=(const ExportJsonEntityReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportJsonEntityReportResponse& operator=(ExportJsonEntityReportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportJsonEntityReportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportJsonEntityReportResponse* internal_default_instance() {
    return reinterpret_cast<const ExportJsonEntityReportResponse*>(
               &_ExportJsonEntityReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ExportJsonEntityReportResponse& a, ExportJsonEntityReportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportJsonEntityReportResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportJsonEntityReportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportJsonEntityReportResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExportJsonEntityReportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportJsonEntityReportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExportJsonEntityReportResponse& from) {
    ExportJsonEntityReportResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportJsonEntityReportResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ExportJsonEntityReportResponse";
  }
  protected:
  explicit ExportJsonEntityReportResponse(::google::protobuf::Arena* arena);
  ExportJsonEntityReportResponse(::google::protobuf::Arena* arena, const ExportJsonEntityReportResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ExportJsonEntityReportResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ExportJsonEntityReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ExportJsonEntityReportRequest) */ {
 public:
  inline ExportJsonEntityReportRequest() : ExportJsonEntityReportRequest(nullptr) {}
  ~ExportJsonEntityReportRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExportJsonEntityReportRequest(::google::protobuf::internal::ConstantInitialized);

  inline ExportJsonEntityReportRequest(const ExportJsonEntityReportRequest& from)
      : ExportJsonEntityReportRequest(nullptr, from) {}
  ExportJsonEntityReportRequest(ExportJsonEntityReportRequest&& from) noexcept
    : ExportJsonEntityReportRequest() {
    *this = ::std::move(from);
  }

  inline ExportJsonEntityReportRequest& operator=(const ExportJsonEntityReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportJsonEntityReportRequest& operator=(ExportJsonEntityReportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportJsonEntityReportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportJsonEntityReportRequest* internal_default_instance() {
    return reinterpret_cast<const ExportJsonEntityReportRequest*>(
               &_ExportJsonEntityReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ExportJsonEntityReportRequest& a, ExportJsonEntityReportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportJsonEntityReportRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportJsonEntityReportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportJsonEntityReportRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExportJsonEntityReportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportJsonEntityReportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExportJsonEntityReportRequest& from) {
    ExportJsonEntityReportRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportJsonEntityReportRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ExportJsonEntityReportRequest";
  }
  protected:
  explicit ExportJsonEntityReportRequest(::google::protobuf::Arena* arena);
  ExportJsonEntityReportRequest(::google::protobuf::Arena* arena, const ExportJsonEntityReportRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFlagsFieldNumber = 1,
  };
  // int64 flags = 1;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ExportJsonEntityReportRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ExportCsvEntityReportResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ExportCsvEntityReportResponse) */ {
 public:
  inline ExportCsvEntityReportResponse() : ExportCsvEntityReportResponse(nullptr) {}
  ~ExportCsvEntityReportResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExportCsvEntityReportResponse(::google::protobuf::internal::ConstantInitialized);

  inline ExportCsvEntityReportResponse(const ExportCsvEntityReportResponse& from)
      : ExportCsvEntityReportResponse(nullptr, from) {}
  ExportCsvEntityReportResponse(ExportCsvEntityReportResponse&& from) noexcept
    : ExportCsvEntityReportResponse() {
    *this = ::std::move(from);
  }

  inline ExportCsvEntityReportResponse& operator=(const ExportCsvEntityReportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportCsvEntityReportResponse& operator=(ExportCsvEntityReportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportCsvEntityReportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportCsvEntityReportResponse* internal_default_instance() {
    return reinterpret_cast<const ExportCsvEntityReportResponse*>(
               &_ExportCsvEntityReportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(ExportCsvEntityReportResponse& a, ExportCsvEntityReportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportCsvEntityReportResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportCsvEntityReportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportCsvEntityReportResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExportCsvEntityReportResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportCsvEntityReportResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExportCsvEntityReportResponse& from) {
    ExportCsvEntityReportResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportCsvEntityReportResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ExportCsvEntityReportResponse";
  }
  protected:
  explicit ExportCsvEntityReportResponse(::google::protobuf::Arena* arena);
  ExportCsvEntityReportResponse(::google::protobuf::Arena* arena, const ExportCsvEntityReportResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ExportCsvEntityReportResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class ExportCsvEntityReportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.ExportCsvEntityReportRequest) */ {
 public:
  inline ExportCsvEntityReportRequest() : ExportCsvEntityReportRequest(nullptr) {}
  ~ExportCsvEntityReportRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ExportCsvEntityReportRequest(::google::protobuf::internal::ConstantInitialized);

  inline ExportCsvEntityReportRequest(const ExportCsvEntityReportRequest& from)
      : ExportCsvEntityReportRequest(nullptr, from) {}
  ExportCsvEntityReportRequest(ExportCsvEntityReportRequest&& from) noexcept
    : ExportCsvEntityReportRequest() {
    *this = ::std::move(from);
  }

  inline ExportCsvEntityReportRequest& operator=(const ExportCsvEntityReportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExportCsvEntityReportRequest& operator=(ExportCsvEntityReportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExportCsvEntityReportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExportCsvEntityReportRequest* internal_default_instance() {
    return reinterpret_cast<const ExportCsvEntityReportRequest*>(
               &_ExportCsvEntityReportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(ExportCsvEntityReportRequest& a, ExportCsvEntityReportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ExportCsvEntityReportRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExportCsvEntityReportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExportCsvEntityReportRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ExportCsvEntityReportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExportCsvEntityReportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ExportCsvEntityReportRequest& from) {
    ExportCsvEntityReportRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExportCsvEntityReportRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.ExportCsvEntityReportRequest";
  }
  protected:
  explicit ExportCsvEntityReportRequest(::google::protobuf::Arena* arena);
  ExportCsvEntityReportRequest(::google::protobuf::Arena* arena, const ExportCsvEntityReportRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCsvColumnListFieldNumber = 1,
    kFlagsFieldNumber = 2,
  };
  // string csv_column_list = 1;
  void clear_csv_column_list() ;
  const std::string& csv_column_list() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_csv_column_list(Arg_&& arg, Args_... args);
  std::string* mutable_csv_column_list();
  PROTOBUF_NODISCARD std::string* release_csv_column_list();
  void set_allocated_csv_column_list(std::string* value);

  private:
  const std::string& _internal_csv_column_list() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_csv_column_list(
      const std::string& value);
  std::string* _internal_mutable_csv_column_list();

  public:
  // int64 flags = 2;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.ExportCsvEntityReportRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr csv_column_list_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class DeleteRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.DeleteRecordResponse) */ {
 public:
  inline DeleteRecordResponse() : DeleteRecordResponse(nullptr) {}
  ~DeleteRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline DeleteRecordResponse(const DeleteRecordResponse& from)
      : DeleteRecordResponse(nullptr, from) {}
  DeleteRecordResponse(DeleteRecordResponse&& from) noexcept
    : DeleteRecordResponse() {
    *this = ::std::move(from);
  }

  inline DeleteRecordResponse& operator=(const DeleteRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRecordResponse& operator=(DeleteRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteRecordResponse* internal_default_instance() {
    return reinterpret_cast<const DeleteRecordResponse*>(
               &_DeleteRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(DeleteRecordResponse& a, DeleteRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteRecordResponse& from) {
    DeleteRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.DeleteRecordResponse";
  }
  protected:
  explicit DeleteRecordResponse(::google::protobuf::Arena* arena);
  DeleteRecordResponse(::google::protobuf::Arena* arena, const DeleteRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.DeleteRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class DeleteRecordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.DeleteRecordRequest) */ {
 public:
  inline DeleteRecordRequest() : DeleteRecordRequest(nullptr) {}
  ~DeleteRecordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR DeleteRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline DeleteRecordRequest(const DeleteRecordRequest& from)
      : DeleteRecordRequest(nullptr, from) {}
  DeleteRecordRequest(DeleteRecordRequest&& from) noexcept
    : DeleteRecordRequest() {
    *this = ::std::move(from);
  }

  inline DeleteRecordRequest& operator=(const DeleteRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline DeleteRecordRequest& operator=(DeleteRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DeleteRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const DeleteRecordRequest* internal_default_instance() {
    return reinterpret_cast<const DeleteRecordRequest*>(
               &_DeleteRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DeleteRecordRequest& a, DeleteRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(DeleteRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DeleteRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DeleteRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<DeleteRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DeleteRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const DeleteRecordRequest& from) {
    DeleteRecordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(DeleteRecordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.DeleteRecordRequest";
  }
  protected:
  explicit DeleteRecordRequest(::google::protobuf::Arena* arena);
  DeleteRecordRequest(::google::protobuf::Arena* arena, const DeleteRecordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kFlagsFieldNumber = 3,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // int64 flags = 3;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.DeleteRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      62, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class CountRedoRecordsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.CountRedoRecordsResponse) */ {
 public:
  inline CountRedoRecordsResponse() : CountRedoRecordsResponse(nullptr) {}
  ~CountRedoRecordsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CountRedoRecordsResponse(::google::protobuf::internal::ConstantInitialized);

  inline CountRedoRecordsResponse(const CountRedoRecordsResponse& from)
      : CountRedoRecordsResponse(nullptr, from) {}
  CountRedoRecordsResponse(CountRedoRecordsResponse&& from) noexcept
    : CountRedoRecordsResponse() {
    *this = ::std::move(from);
  }

  inline CountRedoRecordsResponse& operator=(const CountRedoRecordsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountRedoRecordsResponse& operator=(CountRedoRecordsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CountRedoRecordsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CountRedoRecordsResponse* internal_default_instance() {
    return reinterpret_cast<const CountRedoRecordsResponse*>(
               &_CountRedoRecordsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(CountRedoRecordsResponse& a, CountRedoRecordsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CountRedoRecordsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CountRedoRecordsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CountRedoRecordsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CountRedoRecordsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CountRedoRecordsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CountRedoRecordsResponse& from) {
    CountRedoRecordsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CountRedoRecordsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.CountRedoRecordsResponse";
  }
  protected:
  explicit CountRedoRecordsResponse(::google::protobuf::Arena* arena);
  CountRedoRecordsResponse(::google::protobuf::Arena* arena, const CountRedoRecordsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.CountRedoRecordsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class CountRedoRecordsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.CountRedoRecordsRequest) */ {
 public:
  inline CountRedoRecordsRequest() : CountRedoRecordsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CountRedoRecordsRequest(::google::protobuf::internal::ConstantInitialized);

  inline CountRedoRecordsRequest(const CountRedoRecordsRequest& from)
      : CountRedoRecordsRequest(nullptr, from) {}
  CountRedoRecordsRequest(CountRedoRecordsRequest&& from) noexcept
    : CountRedoRecordsRequest() {
    *this = ::std::move(from);
  }

  inline CountRedoRecordsRequest& operator=(const CountRedoRecordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CountRedoRecordsRequest& operator=(CountRedoRecordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CountRedoRecordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CountRedoRecordsRequest* internal_default_instance() {
    return reinterpret_cast<const CountRedoRecordsRequest*>(
               &_CountRedoRecordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(CountRedoRecordsRequest& a, CountRedoRecordsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CountRedoRecordsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CountRedoRecordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CountRedoRecordsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CountRedoRecordsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CountRedoRecordsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CountRedoRecordsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.CountRedoRecordsRequest";
  }
  protected:
  explicit CountRedoRecordsRequest(::google::protobuf::Arena* arena);
  CountRedoRecordsRequest(::google::protobuf::Arena* arena, const CountRedoRecordsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.CountRedoRecordsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class CloseExportResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szengine.CloseExportResponse) */ {
 public:
  inline CloseExportResponse() : CloseExportResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CloseExportResponse(::google::protobuf::internal::ConstantInitialized);

  inline CloseExportResponse(const CloseExportResponse& from)
      : CloseExportResponse(nullptr, from) {}
  CloseExportResponse(CloseExportResponse&& from) noexcept
    : CloseExportResponse() {
    *this = ::std::move(from);
  }

  inline CloseExportResponse& operator=(const CloseExportResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseExportResponse& operator=(CloseExportResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseExportResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloseExportResponse* internal_default_instance() {
    return reinterpret_cast<const CloseExportResponse*>(
               &_CloseExportResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(CloseExportResponse& a, CloseExportResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(CloseExportResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseExportResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseExportResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CloseExportResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const CloseExportResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const CloseExportResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.CloseExportResponse";
  }
  protected:
  explicit CloseExportResponse(::google::protobuf::Arena* arena);
  CloseExportResponse(::google::protobuf::Arena* arena, const CloseExportResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szengine.CloseExportResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class CloseExportRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.CloseExportRequest) */ {
 public:
  inline CloseExportRequest() : CloseExportRequest(nullptr) {}
  ~CloseExportRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR CloseExportRequest(::google::protobuf::internal::ConstantInitialized);

  inline CloseExportRequest(const CloseExportRequest& from)
      : CloseExportRequest(nullptr, from) {}
  CloseExportRequest(CloseExportRequest&& from) noexcept
    : CloseExportRequest() {
    *this = ::std::move(from);
  }

  inline CloseExportRequest& operator=(const CloseExportRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline CloseExportRequest& operator=(CloseExportRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CloseExportRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const CloseExportRequest* internal_default_instance() {
    return reinterpret_cast<const CloseExportRequest*>(
               &_CloseExportRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(CloseExportRequest& a, CloseExportRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(CloseExportRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CloseExportRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CloseExportRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<CloseExportRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CloseExportRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const CloseExportRequest& from) {
    CloseExportRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CloseExportRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.CloseExportRequest";
  }
  protected:
  explicit CloseExportRequest(::google::protobuf::Arena* arena);
  CloseExportRequest(::google::protobuf::Arena* arena, const CloseExportRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kExportHandleFieldNumber = 1,
  };
  // int64 export_handle = 1;
  void clear_export_handle() ;
  ::int64_t export_handle() const;
  void set_export_handle(::int64_t value);

  private:
  ::int64_t _internal_export_handle() const;
  void _internal_set_export_handle(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.CloseExportRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t export_handle_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class AddRecordResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.AddRecordResponse) */ {
 public:
  inline AddRecordResponse() : AddRecordResponse(nullptr) {}
  ~AddRecordResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddRecordResponse(::google::protobuf::internal::ConstantInitialized);

  inline AddRecordResponse(const AddRecordResponse& from)
      : AddRecordResponse(nullptr, from) {}
  AddRecordResponse(AddRecordResponse&& from) noexcept
    : AddRecordResponse() {
    *this = ::std::move(from);
  }

  inline AddRecordResponse& operator=(const AddRecordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRecordResponse& operator=(AddRecordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddRecordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddRecordResponse* internal_default_instance() {
    return reinterpret_cast<const AddRecordResponse*>(
               &_AddRecordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(AddRecordResponse& a, AddRecordResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(AddRecordResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddRecordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddRecordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddRecordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddRecordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddRecordResponse& from) {
    AddRecordResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddRecordResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.AddRecordResponse";
  }
  protected:
  explicit AddRecordResponse(::google::protobuf::Arena* arena);
  AddRecordResponse(::google::protobuf::Arena* arena, const AddRecordResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szengine.AddRecordResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};// -------------------------------------------------------------------

class AddRecordRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szengine.AddRecordRequest) */ {
 public:
  inline AddRecordRequest() : AddRecordRequest(nullptr) {}
  ~AddRecordRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR AddRecordRequest(::google::protobuf::internal::ConstantInitialized);

  inline AddRecordRequest(const AddRecordRequest& from)
      : AddRecordRequest(nullptr, from) {}
  AddRecordRequest(AddRecordRequest&& from) noexcept
    : AddRecordRequest() {
    *this = ::std::move(from);
  }

  inline AddRecordRequest& operator=(const AddRecordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRecordRequest& operator=(AddRecordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddRecordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddRecordRequest* internal_default_instance() {
    return reinterpret_cast<const AddRecordRequest*>(
               &_AddRecordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(AddRecordRequest& a, AddRecordRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(AddRecordRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddRecordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddRecordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<AddRecordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddRecordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const AddRecordRequest& from) {
    AddRecordRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddRecordRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szengine.AddRecordRequest";
  }
  protected:
  explicit AddRecordRequest(::google::protobuf::Arena* arena);
  AddRecordRequest(::google::protobuf::Arena* arena, const AddRecordRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataSourceCodeFieldNumber = 1,
    kRecordIdFieldNumber = 2,
    kRecordDefinitionFieldNumber = 3,
    kFlagsFieldNumber = 4,
  };
  // string data_source_code = 1;
  void clear_data_source_code() ;
  const std::string& data_source_code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data_source_code(Arg_&& arg, Args_... args);
  std::string* mutable_data_source_code();
  PROTOBUF_NODISCARD std::string* release_data_source_code();
  void set_allocated_data_source_code(std::string* value);

  private:
  const std::string& _internal_data_source_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data_source_code(
      const std::string& value);
  std::string* _internal_mutable_data_source_code();

  public:
  // string record_id = 2;
  void clear_record_id() ;
  const std::string& record_id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_id(Arg_&& arg, Args_... args);
  std::string* mutable_record_id();
  PROTOBUF_NODISCARD std::string* release_record_id();
  void set_allocated_record_id(std::string* value);

  private:
  const std::string& _internal_record_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_id(
      const std::string& value);
  std::string* _internal_mutable_record_id();

  public:
  // string record_definition = 3;
  void clear_record_definition() ;
  const std::string& record_definition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_record_definition(Arg_&& arg, Args_... args);
  std::string* mutable_record_definition();
  PROTOBUF_NODISCARD std::string* release_record_definition();
  void set_allocated_record_definition(std::string* value);

  private:
  const std::string& _internal_record_definition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_record_definition(
      const std::string& value);
  std::string* _internal_mutable_record_definition();

  public:
  // int64 flags = 4;
  void clear_flags() ;
  ::int64_t flags() const;
  void set_flags(::int64_t value);

  private:
  ::int64_t _internal_flags() const;
  void _internal_set_flags(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szengine.AddRecordRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      76, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr data_source_code_;
    ::google::protobuf::internal::ArenaStringPtr record_id_;
    ::google::protobuf::internal::ArenaStringPtr record_definition_;
    ::int64_t flags_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szengine_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddRecordRequest

// string data_source_code = 1;
inline void AddRecordRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& AddRecordRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.AddRecordRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddRecordRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.AddRecordRequest.data_source_code)
}
inline std::string* AddRecordRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.AddRecordRequest.data_source_code)
  return _s;
}
inline const std::string& AddRecordRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void AddRecordRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* AddRecordRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* AddRecordRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.AddRecordRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void AddRecordRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.AddRecordRequest.data_source_code)
}

// string record_id = 2;
inline void AddRecordRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& AddRecordRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.AddRecordRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddRecordRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.AddRecordRequest.record_id)
}
inline std::string* AddRecordRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.AddRecordRequest.record_id)
  return _s;
}
inline const std::string& AddRecordRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void AddRecordRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* AddRecordRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* AddRecordRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.AddRecordRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void AddRecordRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.AddRecordRequest.record_id)
}

// string record_definition = 3;
inline void AddRecordRequest::clear_record_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_definition_.ClearToEmpty();
}
inline const std::string& AddRecordRequest::record_definition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.AddRecordRequest.record_definition)
  return _internal_record_definition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddRecordRequest::set_record_definition(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_definition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.AddRecordRequest.record_definition)
}
inline std::string* AddRecordRequest::mutable_record_definition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_definition();
  // @@protoc_insertion_point(field_mutable:szengine.AddRecordRequest.record_definition)
  return _s;
}
inline const std::string& AddRecordRequest::_internal_record_definition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_definition_.Get();
}
inline void AddRecordRequest::_internal_set_record_definition(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_definition_.Set(value, GetArena());
}
inline std::string* AddRecordRequest::_internal_mutable_record_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_definition_.Mutable( GetArena());
}
inline std::string* AddRecordRequest::release_record_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.AddRecordRequest.record_definition)
  return _impl_.record_definition_.Release();
}
inline void AddRecordRequest::set_allocated_record_definition(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_definition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_definition_.IsDefault()) {
          _impl_.record_definition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.AddRecordRequest.record_definition)
}

// int64 flags = 4;
inline void AddRecordRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t AddRecordRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.AddRecordRequest.flags)
  return _internal_flags();
}
inline void AddRecordRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.AddRecordRequest.flags)
}
inline ::int64_t AddRecordRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void AddRecordRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// AddRecordResponse

// string result = 1;
inline void AddRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& AddRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.AddRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.AddRecordResponse.result)
}
inline std::string* AddRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.AddRecordResponse.result)
  return _s;
}
inline const std::string& AddRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void AddRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* AddRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* AddRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.AddRecordResponse.result)
  return _impl_.result_.Release();
}
inline void AddRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.AddRecordResponse.result)
}

// -------------------------------------------------------------------

// CloseExportRequest

// int64 export_handle = 1;
inline void CloseExportRequest::clear_export_handle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.export_handle_ = ::int64_t{0};
}
inline ::int64_t CloseExportRequest::export_handle() const {
  // @@protoc_insertion_point(field_get:szengine.CloseExportRequest.export_handle)
  return _internal_export_handle();
}
inline void CloseExportRequest::set_export_handle(::int64_t value) {
  _internal_set_export_handle(value);
  // @@protoc_insertion_point(field_set:szengine.CloseExportRequest.export_handle)
}
inline ::int64_t CloseExportRequest::_internal_export_handle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.export_handle_;
}
inline void CloseExportRequest::_internal_set_export_handle(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.export_handle_ = value;
}

// -------------------------------------------------------------------

// CloseExportResponse

// -------------------------------------------------------------------

// CountRedoRecordsRequest

// -------------------------------------------------------------------

// CountRedoRecordsResponse

// int64 result = 1;
inline void CountRedoRecordsResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t CountRedoRecordsResponse::result() const {
  // @@protoc_insertion_point(field_get:szengine.CountRedoRecordsResponse.result)
  return _internal_result();
}
inline void CountRedoRecordsResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szengine.CountRedoRecordsResponse.result)
}
inline ::int64_t CountRedoRecordsResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void CountRedoRecordsResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// DeleteRecordRequest

// string data_source_code = 1;
inline void DeleteRecordRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& DeleteRecordRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.DeleteRecordRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteRecordRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.DeleteRecordRequest.data_source_code)
}
inline std::string* DeleteRecordRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.DeleteRecordRequest.data_source_code)
  return _s;
}
inline const std::string& DeleteRecordRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void DeleteRecordRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* DeleteRecordRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* DeleteRecordRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.DeleteRecordRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void DeleteRecordRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.DeleteRecordRequest.data_source_code)
}

// string record_id = 2;
inline void DeleteRecordRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& DeleteRecordRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.DeleteRecordRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteRecordRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.DeleteRecordRequest.record_id)
}
inline std::string* DeleteRecordRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.DeleteRecordRequest.record_id)
  return _s;
}
inline const std::string& DeleteRecordRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void DeleteRecordRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* DeleteRecordRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* DeleteRecordRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.DeleteRecordRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void DeleteRecordRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.DeleteRecordRequest.record_id)
}

// int64 flags = 3;
inline void DeleteRecordRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t DeleteRecordRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.DeleteRecordRequest.flags)
  return _internal_flags();
}
inline void DeleteRecordRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.DeleteRecordRequest.flags)
}
inline ::int64_t DeleteRecordRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void DeleteRecordRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// DeleteRecordResponse

// string result = 1;
inline void DeleteRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& DeleteRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.DeleteRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void DeleteRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.DeleteRecordResponse.result)
}
inline std::string* DeleteRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.DeleteRecordResponse.result)
  return _s;
}
inline const std::string& DeleteRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void DeleteRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* DeleteRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* DeleteRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.DeleteRecordResponse.result)
  return _impl_.result_.Release();
}
inline void DeleteRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.DeleteRecordResponse.result)
}

// -------------------------------------------------------------------

// ExportCsvEntityReportRequest

// string csv_column_list = 1;
inline void ExportCsvEntityReportRequest::clear_csv_column_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.csv_column_list_.ClearToEmpty();
}
inline const std::string& ExportCsvEntityReportRequest::csv_column_list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ExportCsvEntityReportRequest.csv_column_list)
  return _internal_csv_column_list();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExportCsvEntityReportRequest::set_csv_column_list(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.csv_column_list_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ExportCsvEntityReportRequest.csv_column_list)
}
inline std::string* ExportCsvEntityReportRequest::mutable_csv_column_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_csv_column_list();
  // @@protoc_insertion_point(field_mutable:szengine.ExportCsvEntityReportRequest.csv_column_list)
  return _s;
}
inline const std::string& ExportCsvEntityReportRequest::_internal_csv_column_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.csv_column_list_.Get();
}
inline void ExportCsvEntityReportRequest::_internal_set_csv_column_list(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.csv_column_list_.Set(value, GetArena());
}
inline std::string* ExportCsvEntityReportRequest::_internal_mutable_csv_column_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.csv_column_list_.Mutable( GetArena());
}
inline std::string* ExportCsvEntityReportRequest::release_csv_column_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ExportCsvEntityReportRequest.csv_column_list)
  return _impl_.csv_column_list_.Release();
}
inline void ExportCsvEntityReportRequest::set_allocated_csv_column_list(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.csv_column_list_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.csv_column_list_.IsDefault()) {
          _impl_.csv_column_list_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ExportCsvEntityReportRequest.csv_column_list)
}

// int64 flags = 2;
inline void ExportCsvEntityReportRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t ExportCsvEntityReportRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.ExportCsvEntityReportRequest.flags)
  return _internal_flags();
}
inline void ExportCsvEntityReportRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.ExportCsvEntityReportRequest.flags)
}
inline ::int64_t ExportCsvEntityReportRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void ExportCsvEntityReportRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// ExportCsvEntityReportResponse

// int64 result = 1;
inline void ExportCsvEntityReportResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t ExportCsvEntityReportResponse::result() const {
  // @@protoc_insertion_point(field_get:szengine.ExportCsvEntityReportResponse.result)
  return _internal_result();
}
inline void ExportCsvEntityReportResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szengine.ExportCsvEntityReportResponse.result)
}
inline ::int64_t ExportCsvEntityReportResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void ExportCsvEntityReportResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// ExportJsonEntityReportRequest

// int64 flags = 1;
inline void ExportJsonEntityReportRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t ExportJsonEntityReportRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.ExportJsonEntityReportRequest.flags)
  return _internal_flags();
}
inline void ExportJsonEntityReportRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.ExportJsonEntityReportRequest.flags)
}
inline ::int64_t ExportJsonEntityReportRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void ExportJsonEntityReportRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// ExportJsonEntityReportResponse

// int64 result = 1;
inline void ExportJsonEntityReportResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t ExportJsonEntityReportResponse::result() const {
  // @@protoc_insertion_point(field_get:szengine.ExportJsonEntityReportResponse.result)
  return _internal_result();
}
inline void ExportJsonEntityReportResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szengine.ExportJsonEntityReportResponse.result)
}
inline ::int64_t ExportJsonEntityReportResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void ExportJsonEntityReportResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// FetchNextRequest

// int64 export_handle = 1;
inline void FetchNextRequest::clear_export_handle() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.export_handle_ = ::int64_t{0};
}
inline ::int64_t FetchNextRequest::export_handle() const {
  // @@protoc_insertion_point(field_get:szengine.FetchNextRequest.export_handle)
  return _internal_export_handle();
}
inline void FetchNextRequest::set_export_handle(::int64_t value) {
  _internal_set_export_handle(value);
  // @@protoc_insertion_point(field_set:szengine.FetchNextRequest.export_handle)
}
inline ::int64_t FetchNextRequest::_internal_export_handle() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.export_handle_;
}
inline void FetchNextRequest::_internal_set_export_handle(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.export_handle_ = value;
}

// -------------------------------------------------------------------

// FetchNextResponse

// string result = 1;
inline void FetchNextResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FetchNextResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FetchNextResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FetchNextResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FetchNextResponse.result)
}
inline std::string* FetchNextResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FetchNextResponse.result)
  return _s;
}
inline const std::string& FetchNextResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FetchNextResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FetchNextResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FetchNextResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FetchNextResponse.result)
  return _impl_.result_.Release();
}
inline void FetchNextResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FetchNextResponse.result)
}

// -------------------------------------------------------------------

// FindInterestingEntitiesByEntityIdRequest

// int64 entity_id = 1;
inline void FindInterestingEntitiesByEntityIdRequest::clear_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_ = ::int64_t{0};
}
inline ::int64_t FindInterestingEntitiesByEntityIdRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByEntityIdRequest.entity_id)
  return _internal_entity_id();
}
inline void FindInterestingEntitiesByEntityIdRequest::set_entity_id(::int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByEntityIdRequest.entity_id)
}
inline ::int64_t FindInterestingEntitiesByEntityIdRequest::_internal_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_;
}
inline void FindInterestingEntitiesByEntityIdRequest::_internal_set_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_ = value;
}

// int64 flags = 2;
inline void FindInterestingEntitiesByEntityIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t FindInterestingEntitiesByEntityIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByEntityIdRequest.flags)
  return _internal_flags();
}
inline void FindInterestingEntitiesByEntityIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByEntityIdRequest.flags)
}
inline ::int64_t FindInterestingEntitiesByEntityIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void FindInterestingEntitiesByEntityIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// FindInterestingEntitiesByEntityIdResponse

// string result = 1;
inline void FindInterestingEntitiesByEntityIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FindInterestingEntitiesByEntityIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByEntityIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindInterestingEntitiesByEntityIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByEntityIdResponse.result)
}
inline std::string* FindInterestingEntitiesByEntityIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FindInterestingEntitiesByEntityIdResponse.result)
  return _s;
}
inline const std::string& FindInterestingEntitiesByEntityIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FindInterestingEntitiesByEntityIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FindInterestingEntitiesByEntityIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FindInterestingEntitiesByEntityIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindInterestingEntitiesByEntityIdResponse.result)
  return _impl_.result_.Release();
}
inline void FindInterestingEntitiesByEntityIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindInterestingEntitiesByEntityIdResponse.result)
}

// -------------------------------------------------------------------

// FindInterestingEntitiesByRecordIdRequest

// string data_source_code = 1;
inline void FindInterestingEntitiesByRecordIdRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& FindInterestingEntitiesByRecordIdRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindInterestingEntitiesByRecordIdRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code)
}
inline std::string* FindInterestingEntitiesByRecordIdRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code)
  return _s;
}
inline const std::string& FindInterestingEntitiesByRecordIdRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void FindInterestingEntitiesByRecordIdRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* FindInterestingEntitiesByRecordIdRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* FindInterestingEntitiesByRecordIdRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void FindInterestingEntitiesByRecordIdRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code)
}

// string record_id = 2;
inline void FindInterestingEntitiesByRecordIdRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& FindInterestingEntitiesByRecordIdRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByRecordIdRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindInterestingEntitiesByRecordIdRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByRecordIdRequest.record_id)
}
inline std::string* FindInterestingEntitiesByRecordIdRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.FindInterestingEntitiesByRecordIdRequest.record_id)
  return _s;
}
inline const std::string& FindInterestingEntitiesByRecordIdRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void FindInterestingEntitiesByRecordIdRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* FindInterestingEntitiesByRecordIdRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* FindInterestingEntitiesByRecordIdRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindInterestingEntitiesByRecordIdRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void FindInterestingEntitiesByRecordIdRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindInterestingEntitiesByRecordIdRequest.record_id)
}

// int64 flags = 3;
inline void FindInterestingEntitiesByRecordIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t FindInterestingEntitiesByRecordIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByRecordIdRequest.flags)
  return _internal_flags();
}
inline void FindInterestingEntitiesByRecordIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByRecordIdRequest.flags)
}
inline ::int64_t FindInterestingEntitiesByRecordIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void FindInterestingEntitiesByRecordIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// FindInterestingEntitiesByRecordIdResponse

// string result = 1;
inline void FindInterestingEntitiesByRecordIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FindInterestingEntitiesByRecordIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindInterestingEntitiesByRecordIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindInterestingEntitiesByRecordIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindInterestingEntitiesByRecordIdResponse.result)
}
inline std::string* FindInterestingEntitiesByRecordIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FindInterestingEntitiesByRecordIdResponse.result)
  return _s;
}
inline const std::string& FindInterestingEntitiesByRecordIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FindInterestingEntitiesByRecordIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FindInterestingEntitiesByRecordIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FindInterestingEntitiesByRecordIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindInterestingEntitiesByRecordIdResponse.result)
  return _impl_.result_.Release();
}
inline void FindInterestingEntitiesByRecordIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindInterestingEntitiesByRecordIdResponse.result)
}

// -------------------------------------------------------------------

// FindNetworkByEntityIdRequest

// string entity_ids = 1;
inline void FindNetworkByEntityIdRequest::clear_entity_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_ids_.ClearToEmpty();
}
inline const std::string& FindNetworkByEntityIdRequest::entity_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByEntityIdRequest.entity_ids)
  return _internal_entity_ids();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindNetworkByEntityIdRequest::set_entity_ids(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_ids_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByEntityIdRequest.entity_ids)
}
inline std::string* FindNetworkByEntityIdRequest::mutable_entity_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_entity_ids();
  // @@protoc_insertion_point(field_mutable:szengine.FindNetworkByEntityIdRequest.entity_ids)
  return _s;
}
inline const std::string& FindNetworkByEntityIdRequest::_internal_entity_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_ids_.Get();
}
inline void FindNetworkByEntityIdRequest::_internal_set_entity_ids(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_ids_.Set(value, GetArena());
}
inline std::string* FindNetworkByEntityIdRequest::_internal_mutable_entity_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.entity_ids_.Mutable( GetArena());
}
inline std::string* FindNetworkByEntityIdRequest::release_entity_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindNetworkByEntityIdRequest.entity_ids)
  return _impl_.entity_ids_.Release();
}
inline void FindNetworkByEntityIdRequest::set_allocated_entity_ids(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_ids_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.entity_ids_.IsDefault()) {
          _impl_.entity_ids_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindNetworkByEntityIdRequest.entity_ids)
}

// int64 max_degrees = 2;
inline void FindNetworkByEntityIdRequest::clear_max_degrees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_degrees_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByEntityIdRequest::max_degrees() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByEntityIdRequest.max_degrees)
  return _internal_max_degrees();
}
inline void FindNetworkByEntityIdRequest::set_max_degrees(::int64_t value) {
  _internal_set_max_degrees(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByEntityIdRequest.max_degrees)
}
inline ::int64_t FindNetworkByEntityIdRequest::_internal_max_degrees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_degrees_;
}
inline void FindNetworkByEntityIdRequest::_internal_set_max_degrees(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_degrees_ = value;
}

// int64 build_out_degrees = 3;
inline void FindNetworkByEntityIdRequest::clear_build_out_degrees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.build_out_degrees_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByEntityIdRequest::build_out_degrees() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByEntityIdRequest.build_out_degrees)
  return _internal_build_out_degrees();
}
inline void FindNetworkByEntityIdRequest::set_build_out_degrees(::int64_t value) {
  _internal_set_build_out_degrees(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByEntityIdRequest.build_out_degrees)
}
inline ::int64_t FindNetworkByEntityIdRequest::_internal_build_out_degrees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.build_out_degrees_;
}
inline void FindNetworkByEntityIdRequest::_internal_set_build_out_degrees(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.build_out_degrees_ = value;
}

// int64 build_out_max_entities = 4;
inline void FindNetworkByEntityIdRequest::clear_build_out_max_entities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.build_out_max_entities_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByEntityIdRequest::build_out_max_entities() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByEntityIdRequest.build_out_max_entities)
  return _internal_build_out_max_entities();
}
inline void FindNetworkByEntityIdRequest::set_build_out_max_entities(::int64_t value) {
  _internal_set_build_out_max_entities(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByEntityIdRequest.build_out_max_entities)
}
inline ::int64_t FindNetworkByEntityIdRequest::_internal_build_out_max_entities() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.build_out_max_entities_;
}
inline void FindNetworkByEntityIdRequest::_internal_set_build_out_max_entities(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.build_out_max_entities_ = value;
}

// int64 flags = 5;
inline void FindNetworkByEntityIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByEntityIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByEntityIdRequest.flags)
  return _internal_flags();
}
inline void FindNetworkByEntityIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByEntityIdRequest.flags)
}
inline ::int64_t FindNetworkByEntityIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void FindNetworkByEntityIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// FindNetworkByEntityIdResponse

// string result = 1;
inline void FindNetworkByEntityIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FindNetworkByEntityIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByEntityIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindNetworkByEntityIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByEntityIdResponse.result)
}
inline std::string* FindNetworkByEntityIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FindNetworkByEntityIdResponse.result)
  return _s;
}
inline const std::string& FindNetworkByEntityIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FindNetworkByEntityIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FindNetworkByEntityIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FindNetworkByEntityIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindNetworkByEntityIdResponse.result)
  return _impl_.result_.Release();
}
inline void FindNetworkByEntityIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindNetworkByEntityIdResponse.result)
}

// -------------------------------------------------------------------

// FindNetworkByRecordIdRequest

// string record_keys = 1;
inline void FindNetworkByRecordIdRequest::clear_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_keys_.ClearToEmpty();
}
inline const std::string& FindNetworkByRecordIdRequest::record_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByRecordIdRequest.record_keys)
  return _internal_record_keys();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindNetworkByRecordIdRequest::set_record_keys(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_keys_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByRecordIdRequest.record_keys)
}
inline std::string* FindNetworkByRecordIdRequest::mutable_record_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_keys();
  // @@protoc_insertion_point(field_mutable:szengine.FindNetworkByRecordIdRequest.record_keys)
  return _s;
}
inline const std::string& FindNetworkByRecordIdRequest::_internal_record_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_keys_.Get();
}
inline void FindNetworkByRecordIdRequest::_internal_set_record_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_keys_.Set(value, GetArena());
}
inline std::string* FindNetworkByRecordIdRequest::_internal_mutable_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_keys_.Mutable( GetArena());
}
inline std::string* FindNetworkByRecordIdRequest::release_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindNetworkByRecordIdRequest.record_keys)
  return _impl_.record_keys_.Release();
}
inline void FindNetworkByRecordIdRequest::set_allocated_record_keys(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_keys_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_keys_.IsDefault()) {
          _impl_.record_keys_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindNetworkByRecordIdRequest.record_keys)
}

// int64 max_degrees = 2;
inline void FindNetworkByRecordIdRequest::clear_max_degrees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_degrees_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByRecordIdRequest::max_degrees() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByRecordIdRequest.max_degrees)
  return _internal_max_degrees();
}
inline void FindNetworkByRecordIdRequest::set_max_degrees(::int64_t value) {
  _internal_set_max_degrees(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByRecordIdRequest.max_degrees)
}
inline ::int64_t FindNetworkByRecordIdRequest::_internal_max_degrees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_degrees_;
}
inline void FindNetworkByRecordIdRequest::_internal_set_max_degrees(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_degrees_ = value;
}

// int64 build_out_degrees = 3;
inline void FindNetworkByRecordIdRequest::clear_build_out_degrees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.build_out_degrees_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByRecordIdRequest::build_out_degrees() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByRecordIdRequest.build_out_degrees)
  return _internal_build_out_degrees();
}
inline void FindNetworkByRecordIdRequest::set_build_out_degrees(::int64_t value) {
  _internal_set_build_out_degrees(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByRecordIdRequest.build_out_degrees)
}
inline ::int64_t FindNetworkByRecordIdRequest::_internal_build_out_degrees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.build_out_degrees_;
}
inline void FindNetworkByRecordIdRequest::_internal_set_build_out_degrees(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.build_out_degrees_ = value;
}

// int64 build_out_max_entities = 4;
inline void FindNetworkByRecordIdRequest::clear_build_out_max_entities() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.build_out_max_entities_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByRecordIdRequest::build_out_max_entities() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByRecordIdRequest.build_out_max_entities)
  return _internal_build_out_max_entities();
}
inline void FindNetworkByRecordIdRequest::set_build_out_max_entities(::int64_t value) {
  _internal_set_build_out_max_entities(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByRecordIdRequest.build_out_max_entities)
}
inline ::int64_t FindNetworkByRecordIdRequest::_internal_build_out_max_entities() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.build_out_max_entities_;
}
inline void FindNetworkByRecordIdRequest::_internal_set_build_out_max_entities(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.build_out_max_entities_ = value;
}

// int64 flags = 5;
inline void FindNetworkByRecordIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t FindNetworkByRecordIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByRecordIdRequest.flags)
  return _internal_flags();
}
inline void FindNetworkByRecordIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByRecordIdRequest.flags)
}
inline ::int64_t FindNetworkByRecordIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void FindNetworkByRecordIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// FindNetworkByRecordIdResponse

// string result = 1;
inline void FindNetworkByRecordIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FindNetworkByRecordIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindNetworkByRecordIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindNetworkByRecordIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindNetworkByRecordIdResponse.result)
}
inline std::string* FindNetworkByRecordIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FindNetworkByRecordIdResponse.result)
  return _s;
}
inline const std::string& FindNetworkByRecordIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FindNetworkByRecordIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FindNetworkByRecordIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FindNetworkByRecordIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindNetworkByRecordIdResponse.result)
  return _impl_.result_.Release();
}
inline void FindNetworkByRecordIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindNetworkByRecordIdResponse.result)
}

// -------------------------------------------------------------------

// FindPathByEntityIdRequest

// int64 start_entity_id = 1;
inline void FindPathByEntityIdRequest::clear_start_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_entity_id_ = ::int64_t{0};
}
inline ::int64_t FindPathByEntityIdRequest::start_entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdRequest.start_entity_id)
  return _internal_start_entity_id();
}
inline void FindPathByEntityIdRequest::set_start_entity_id(::int64_t value) {
  _internal_set_start_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdRequest.start_entity_id)
}
inline ::int64_t FindPathByEntityIdRequest::_internal_start_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_entity_id_;
}
inline void FindPathByEntityIdRequest::_internal_set_start_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_entity_id_ = value;
}

// int64 end_entity_id = 2;
inline void FindPathByEntityIdRequest::clear_end_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_entity_id_ = ::int64_t{0};
}
inline ::int64_t FindPathByEntityIdRequest::end_entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdRequest.end_entity_id)
  return _internal_end_entity_id();
}
inline void FindPathByEntityIdRequest::set_end_entity_id(::int64_t value) {
  _internal_set_end_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdRequest.end_entity_id)
}
inline ::int64_t FindPathByEntityIdRequest::_internal_end_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_entity_id_;
}
inline void FindPathByEntityIdRequest::_internal_set_end_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_entity_id_ = value;
}

// int64 max_degrees = 3;
inline void FindPathByEntityIdRequest::clear_max_degrees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_degrees_ = ::int64_t{0};
}
inline ::int64_t FindPathByEntityIdRequest::max_degrees() const {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdRequest.max_degrees)
  return _internal_max_degrees();
}
inline void FindPathByEntityIdRequest::set_max_degrees(::int64_t value) {
  _internal_set_max_degrees(value);
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdRequest.max_degrees)
}
inline ::int64_t FindPathByEntityIdRequest::_internal_max_degrees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_degrees_;
}
inline void FindPathByEntityIdRequest::_internal_set_max_degrees(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_degrees_ = value;
}

// string avoid_entity_ids = 4;
inline void FindPathByEntityIdRequest::clear_avoid_entity_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avoid_entity_ids_.ClearToEmpty();
}
inline const std::string& FindPathByEntityIdRequest::avoid_entity_ids() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdRequest.avoid_entity_ids)
  return _internal_avoid_entity_ids();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByEntityIdRequest::set_avoid_entity_ids(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avoid_entity_ids_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdRequest.avoid_entity_ids)
}
inline std::string* FindPathByEntityIdRequest::mutable_avoid_entity_ids() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avoid_entity_ids();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByEntityIdRequest.avoid_entity_ids)
  return _s;
}
inline const std::string& FindPathByEntityIdRequest::_internal_avoid_entity_ids() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avoid_entity_ids_.Get();
}
inline void FindPathByEntityIdRequest::_internal_set_avoid_entity_ids(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avoid_entity_ids_.Set(value, GetArena());
}
inline std::string* FindPathByEntityIdRequest::_internal_mutable_avoid_entity_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.avoid_entity_ids_.Mutable( GetArena());
}
inline std::string* FindPathByEntityIdRequest::release_avoid_entity_ids() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByEntityIdRequest.avoid_entity_ids)
  return _impl_.avoid_entity_ids_.Release();
}
inline void FindPathByEntityIdRequest::set_allocated_avoid_entity_ids(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avoid_entity_ids_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avoid_entity_ids_.IsDefault()) {
          _impl_.avoid_entity_ids_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByEntityIdRequest.avoid_entity_ids)
}

// string required_data_sources = 5;
inline void FindPathByEntityIdRequest::clear_required_data_sources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_data_sources_.ClearToEmpty();
}
inline const std::string& FindPathByEntityIdRequest::required_data_sources() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdRequest.required_data_sources)
  return _internal_required_data_sources();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByEntityIdRequest::set_required_data_sources(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.required_data_sources_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdRequest.required_data_sources)
}
inline std::string* FindPathByEntityIdRequest::mutable_required_data_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_required_data_sources();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByEntityIdRequest.required_data_sources)
  return _s;
}
inline const std::string& FindPathByEntityIdRequest::_internal_required_data_sources() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.required_data_sources_.Get();
}
inline void FindPathByEntityIdRequest::_internal_set_required_data_sources(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.required_data_sources_.Set(value, GetArena());
}
inline std::string* FindPathByEntityIdRequest::_internal_mutable_required_data_sources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.required_data_sources_.Mutable( GetArena());
}
inline std::string* FindPathByEntityIdRequest::release_required_data_sources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByEntityIdRequest.required_data_sources)
  return _impl_.required_data_sources_.Release();
}
inline void FindPathByEntityIdRequest::set_allocated_required_data_sources(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_data_sources_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.required_data_sources_.IsDefault()) {
          _impl_.required_data_sources_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByEntityIdRequest.required_data_sources)
}

// int64 flags = 6;
inline void FindPathByEntityIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t FindPathByEntityIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdRequest.flags)
  return _internal_flags();
}
inline void FindPathByEntityIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdRequest.flags)
}
inline ::int64_t FindPathByEntityIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void FindPathByEntityIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// FindPathByEntityIdResponse

// string result = 1;
inline void FindPathByEntityIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FindPathByEntityIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByEntityIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByEntityIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByEntityIdResponse.result)
}
inline std::string* FindPathByEntityIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByEntityIdResponse.result)
  return _s;
}
inline const std::string& FindPathByEntityIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FindPathByEntityIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FindPathByEntityIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FindPathByEntityIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByEntityIdResponse.result)
  return _impl_.result_.Release();
}
inline void FindPathByEntityIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByEntityIdResponse.result)
}

// -------------------------------------------------------------------

// FindPathByRecordIdRequest

// string start_data_source_code = 1;
inline void FindPathByRecordIdRequest::clear_start_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_data_source_code_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdRequest::start_data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.start_data_source_code)
  return _internal_start_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdRequest::set_start_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.start_data_source_code)
}
inline std::string* FindPathByRecordIdRequest::mutable_start_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_start_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdRequest.start_data_source_code)
  return _s;
}
inline const std::string& FindPathByRecordIdRequest::_internal_start_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_data_source_code_.Get();
}
inline void FindPathByRecordIdRequest::_internal_set_start_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_data_source_code_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdRequest::_internal_mutable_start_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.start_data_source_code_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdRequest::release_start_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdRequest.start_data_source_code)
  return _impl_.start_data_source_code_.Release();
}
inline void FindPathByRecordIdRequest::set_allocated_start_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.start_data_source_code_.IsDefault()) {
          _impl_.start_data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdRequest.start_data_source_code)
}

// string start_record_id = 2;
inline void FindPathByRecordIdRequest::clear_start_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_record_id_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdRequest::start_record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.start_record_id)
  return _internal_start_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdRequest::set_start_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.start_record_id)
}
inline std::string* FindPathByRecordIdRequest::mutable_start_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_start_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdRequest.start_record_id)
  return _s;
}
inline const std::string& FindPathByRecordIdRequest::_internal_start_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.start_record_id_.Get();
}
inline void FindPathByRecordIdRequest::_internal_set_start_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.start_record_id_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdRequest::_internal_mutable_start_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.start_record_id_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdRequest::release_start_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdRequest.start_record_id)
  return _impl_.start_record_id_.Release();
}
inline void FindPathByRecordIdRequest::set_allocated_start_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.start_record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.start_record_id_.IsDefault()) {
          _impl_.start_record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdRequest.start_record_id)
}

// string end_data_source_code = 3;
inline void FindPathByRecordIdRequest::clear_end_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_data_source_code_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdRequest::end_data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.end_data_source_code)
  return _internal_end_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdRequest::set_end_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.end_data_source_code)
}
inline std::string* FindPathByRecordIdRequest::mutable_end_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_end_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdRequest.end_data_source_code)
  return _s;
}
inline const std::string& FindPathByRecordIdRequest::_internal_end_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_data_source_code_.Get();
}
inline void FindPathByRecordIdRequest::_internal_set_end_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_data_source_code_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdRequest::_internal_mutable_end_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.end_data_source_code_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdRequest::release_end_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdRequest.end_data_source_code)
  return _impl_.end_data_source_code_.Release();
}
inline void FindPathByRecordIdRequest::set_allocated_end_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.end_data_source_code_.IsDefault()) {
          _impl_.end_data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdRequest.end_data_source_code)
}

// string end_record_id = 4;
inline void FindPathByRecordIdRequest::clear_end_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_record_id_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdRequest::end_record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.end_record_id)
  return _internal_end_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdRequest::set_end_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.end_record_id)
}
inline std::string* FindPathByRecordIdRequest::mutable_end_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_end_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdRequest.end_record_id)
  return _s;
}
inline const std::string& FindPathByRecordIdRequest::_internal_end_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.end_record_id_.Get();
}
inline void FindPathByRecordIdRequest::_internal_set_end_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.end_record_id_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdRequest::_internal_mutable_end_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.end_record_id_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdRequest::release_end_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdRequest.end_record_id)
  return _impl_.end_record_id_.Release();
}
inline void FindPathByRecordIdRequest::set_allocated_end_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.end_record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.end_record_id_.IsDefault()) {
          _impl_.end_record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdRequest.end_record_id)
}

// int64 max_degrees = 5;
inline void FindPathByRecordIdRequest::clear_max_degrees() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.max_degrees_ = ::int64_t{0};
}
inline ::int64_t FindPathByRecordIdRequest::max_degrees() const {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.max_degrees)
  return _internal_max_degrees();
}
inline void FindPathByRecordIdRequest::set_max_degrees(::int64_t value) {
  _internal_set_max_degrees(value);
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.max_degrees)
}
inline ::int64_t FindPathByRecordIdRequest::_internal_max_degrees() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.max_degrees_;
}
inline void FindPathByRecordIdRequest::_internal_set_max_degrees(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.max_degrees_ = value;
}

// string avoid_record_keys = 6;
inline void FindPathByRecordIdRequest::clear_avoid_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avoid_record_keys_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdRequest::avoid_record_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.avoid_record_keys)
  return _internal_avoid_record_keys();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdRequest::set_avoid_record_keys(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avoid_record_keys_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.avoid_record_keys)
}
inline std::string* FindPathByRecordIdRequest::mutable_avoid_record_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_avoid_record_keys();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdRequest.avoid_record_keys)
  return _s;
}
inline const std::string& FindPathByRecordIdRequest::_internal_avoid_record_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.avoid_record_keys_.Get();
}
inline void FindPathByRecordIdRequest::_internal_set_avoid_record_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.avoid_record_keys_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdRequest::_internal_mutable_avoid_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.avoid_record_keys_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdRequest::release_avoid_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdRequest.avoid_record_keys)
  return _impl_.avoid_record_keys_.Release();
}
inline void FindPathByRecordIdRequest::set_allocated_avoid_record_keys(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.avoid_record_keys_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.avoid_record_keys_.IsDefault()) {
          _impl_.avoid_record_keys_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdRequest.avoid_record_keys)
}

// string required_data_sources = 7;
inline void FindPathByRecordIdRequest::clear_required_data_sources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_data_sources_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdRequest::required_data_sources() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.required_data_sources)
  return _internal_required_data_sources();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdRequest::set_required_data_sources(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.required_data_sources_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.required_data_sources)
}
inline std::string* FindPathByRecordIdRequest::mutable_required_data_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_required_data_sources();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdRequest.required_data_sources)
  return _s;
}
inline const std::string& FindPathByRecordIdRequest::_internal_required_data_sources() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.required_data_sources_.Get();
}
inline void FindPathByRecordIdRequest::_internal_set_required_data_sources(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.required_data_sources_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdRequest::_internal_mutable_required_data_sources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.required_data_sources_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdRequest::release_required_data_sources() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdRequest.required_data_sources)
  return _impl_.required_data_sources_.Release();
}
inline void FindPathByRecordIdRequest::set_allocated_required_data_sources(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.required_data_sources_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.required_data_sources_.IsDefault()) {
          _impl_.required_data_sources_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdRequest.required_data_sources)
}

// int64 flags = 8;
inline void FindPathByRecordIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t FindPathByRecordIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdRequest.flags)
  return _internal_flags();
}
inline void FindPathByRecordIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdRequest.flags)
}
inline ::int64_t FindPathByRecordIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void FindPathByRecordIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// FindPathByRecordIdResponse

// string result = 1;
inline void FindPathByRecordIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& FindPathByRecordIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.FindPathByRecordIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FindPathByRecordIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.FindPathByRecordIdResponse.result)
}
inline std::string* FindPathByRecordIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.FindPathByRecordIdResponse.result)
  return _s;
}
inline const std::string& FindPathByRecordIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void FindPathByRecordIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* FindPathByRecordIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* FindPathByRecordIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.FindPathByRecordIdResponse.result)
  return _impl_.result_.Release();
}
inline void FindPathByRecordIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.FindPathByRecordIdResponse.result)
}

// -------------------------------------------------------------------

// GetActiveConfigIdRequest

// -------------------------------------------------------------------

// GetActiveConfigIdResponse

// int64 result = 1;
inline void GetActiveConfigIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t GetActiveConfigIdResponse::result() const {
  // @@protoc_insertion_point(field_get:szengine.GetActiveConfigIdResponse.result)
  return _internal_result();
}
inline void GetActiveConfigIdResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szengine.GetActiveConfigIdResponse.result)
}
inline ::int64_t GetActiveConfigIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void GetActiveConfigIdResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// GetEntityByEntityIdRequest

// int64 entity_id = 1;
inline void GetEntityByEntityIdRequest::clear_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_ = ::int64_t{0};
}
inline ::int64_t GetEntityByEntityIdRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByEntityIdRequest.entity_id)
  return _internal_entity_id();
}
inline void GetEntityByEntityIdRequest::set_entity_id(::int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.GetEntityByEntityIdRequest.entity_id)
}
inline ::int64_t GetEntityByEntityIdRequest::_internal_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_;
}
inline void GetEntityByEntityIdRequest::_internal_set_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_ = value;
}

// int64 flags = 2;
inline void GetEntityByEntityIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t GetEntityByEntityIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByEntityIdRequest.flags)
  return _internal_flags();
}
inline void GetEntityByEntityIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.GetEntityByEntityIdRequest.flags)
}
inline ::int64_t GetEntityByEntityIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void GetEntityByEntityIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// GetEntityByEntityIdResponse

// string result = 1;
inline void GetEntityByEntityIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetEntityByEntityIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByEntityIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetEntityByEntityIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetEntityByEntityIdResponse.result)
}
inline std::string* GetEntityByEntityIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.GetEntityByEntityIdResponse.result)
  return _s;
}
inline const std::string& GetEntityByEntityIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetEntityByEntityIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetEntityByEntityIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetEntityByEntityIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetEntityByEntityIdResponse.result)
  return _impl_.result_.Release();
}
inline void GetEntityByEntityIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetEntityByEntityIdResponse.result)
}

// -------------------------------------------------------------------

// GetEntityByRecordIdRequest

// string data_source_code = 1;
inline void GetEntityByRecordIdRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& GetEntityByRecordIdRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByRecordIdRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetEntityByRecordIdRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetEntityByRecordIdRequest.data_source_code)
}
inline std::string* GetEntityByRecordIdRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.GetEntityByRecordIdRequest.data_source_code)
  return _s;
}
inline const std::string& GetEntityByRecordIdRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void GetEntityByRecordIdRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* GetEntityByRecordIdRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* GetEntityByRecordIdRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetEntityByRecordIdRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void GetEntityByRecordIdRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetEntityByRecordIdRequest.data_source_code)
}

// string record_id = 2;
inline void GetEntityByRecordIdRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& GetEntityByRecordIdRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByRecordIdRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetEntityByRecordIdRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetEntityByRecordIdRequest.record_id)
}
inline std::string* GetEntityByRecordIdRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.GetEntityByRecordIdRequest.record_id)
  return _s;
}
inline const std::string& GetEntityByRecordIdRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void GetEntityByRecordIdRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* GetEntityByRecordIdRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* GetEntityByRecordIdRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetEntityByRecordIdRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void GetEntityByRecordIdRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetEntityByRecordIdRequest.record_id)
}

// int64 flags = 3;
inline void GetEntityByRecordIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t GetEntityByRecordIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByRecordIdRequest.flags)
  return _internal_flags();
}
inline void GetEntityByRecordIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.GetEntityByRecordIdRequest.flags)
}
inline ::int64_t GetEntityByRecordIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void GetEntityByRecordIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// GetEntityByRecordIdResponse

// string result = 1;
inline void GetEntityByRecordIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetEntityByRecordIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetEntityByRecordIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetEntityByRecordIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetEntityByRecordIdResponse.result)
}
inline std::string* GetEntityByRecordIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.GetEntityByRecordIdResponse.result)
  return _s;
}
inline const std::string& GetEntityByRecordIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetEntityByRecordIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetEntityByRecordIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetEntityByRecordIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetEntityByRecordIdResponse.result)
  return _impl_.result_.Release();
}
inline void GetEntityByRecordIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetEntityByRecordIdResponse.result)
}

// -------------------------------------------------------------------

// GetRecordRequest

// string data_source_code = 1;
inline void GetRecordRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& GetRecordRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetRecordRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRecordRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetRecordRequest.data_source_code)
}
inline std::string* GetRecordRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.GetRecordRequest.data_source_code)
  return _s;
}
inline const std::string& GetRecordRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void GetRecordRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* GetRecordRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* GetRecordRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetRecordRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void GetRecordRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetRecordRequest.data_source_code)
}

// string record_id = 2;
inline void GetRecordRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& GetRecordRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetRecordRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRecordRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetRecordRequest.record_id)
}
inline std::string* GetRecordRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.GetRecordRequest.record_id)
  return _s;
}
inline const std::string& GetRecordRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void GetRecordRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* GetRecordRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* GetRecordRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetRecordRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void GetRecordRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetRecordRequest.record_id)
}

// int64 flags = 3;
inline void GetRecordRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t GetRecordRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.GetRecordRequest.flags)
  return _internal_flags();
}
inline void GetRecordRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.GetRecordRequest.flags)
}
inline ::int64_t GetRecordRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void GetRecordRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// GetRecordResponse

// string result = 1;
inline void GetRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetRecordResponse.result)
}
inline std::string* GetRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.GetRecordResponse.result)
  return _s;
}
inline const std::string& GetRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetRecordResponse.result)
  return _impl_.result_.Release();
}
inline void GetRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetRecordResponse.result)
}

// -------------------------------------------------------------------

// GetRedoRecordRequest

// -------------------------------------------------------------------

// GetRedoRecordResponse

// string result = 1;
inline void GetRedoRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetRedoRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetRedoRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetRedoRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetRedoRecordResponse.result)
}
inline std::string* GetRedoRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.GetRedoRecordResponse.result)
  return _s;
}
inline const std::string& GetRedoRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetRedoRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetRedoRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetRedoRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetRedoRecordResponse.result)
  return _impl_.result_.Release();
}
inline void GetRedoRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetRedoRecordResponse.result)
}

// -------------------------------------------------------------------

// GetStatsRequest

// -------------------------------------------------------------------

// GetStatsResponse

// string result = 1;
inline void GetStatsResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetStatsResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetStatsResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetStatsResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetStatsResponse.result)
}
inline std::string* GetStatsResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.GetStatsResponse.result)
  return _s;
}
inline const std::string& GetStatsResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetStatsResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetStatsResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetStatsResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetStatsResponse.result)
  return _impl_.result_.Release();
}
inline void GetStatsResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetStatsResponse.result)
}

// -------------------------------------------------------------------

// GetVirtualEntityByRecordIdRequest

// string record_keys = 1;
inline void GetVirtualEntityByRecordIdRequest::clear_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_keys_.ClearToEmpty();
}
inline const std::string& GetVirtualEntityByRecordIdRequest::record_keys() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetVirtualEntityByRecordIdRequest.record_keys)
  return _internal_record_keys();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVirtualEntityByRecordIdRequest::set_record_keys(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_keys_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetVirtualEntityByRecordIdRequest.record_keys)
}
inline std::string* GetVirtualEntityByRecordIdRequest::mutable_record_keys() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_keys();
  // @@protoc_insertion_point(field_mutable:szengine.GetVirtualEntityByRecordIdRequest.record_keys)
  return _s;
}
inline const std::string& GetVirtualEntityByRecordIdRequest::_internal_record_keys() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_keys_.Get();
}
inline void GetVirtualEntityByRecordIdRequest::_internal_set_record_keys(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_keys_.Set(value, GetArena());
}
inline std::string* GetVirtualEntityByRecordIdRequest::_internal_mutable_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_keys_.Mutable( GetArena());
}
inline std::string* GetVirtualEntityByRecordIdRequest::release_record_keys() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetVirtualEntityByRecordIdRequest.record_keys)
  return _impl_.record_keys_.Release();
}
inline void GetVirtualEntityByRecordIdRequest::set_allocated_record_keys(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_keys_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_keys_.IsDefault()) {
          _impl_.record_keys_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetVirtualEntityByRecordIdRequest.record_keys)
}

// int64 flags = 2;
inline void GetVirtualEntityByRecordIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t GetVirtualEntityByRecordIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.GetVirtualEntityByRecordIdRequest.flags)
  return _internal_flags();
}
inline void GetVirtualEntityByRecordIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.GetVirtualEntityByRecordIdRequest.flags)
}
inline ::int64_t GetVirtualEntityByRecordIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void GetVirtualEntityByRecordIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// GetVirtualEntityByRecordIdResponse

// string result = 1;
inline void GetVirtualEntityByRecordIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetVirtualEntityByRecordIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.GetVirtualEntityByRecordIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVirtualEntityByRecordIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.GetVirtualEntityByRecordIdResponse.result)
}
inline std::string* GetVirtualEntityByRecordIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.GetVirtualEntityByRecordIdResponse.result)
  return _s;
}
inline const std::string& GetVirtualEntityByRecordIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetVirtualEntityByRecordIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetVirtualEntityByRecordIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetVirtualEntityByRecordIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.GetVirtualEntityByRecordIdResponse.result)
  return _impl_.result_.Release();
}
inline void GetVirtualEntityByRecordIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.GetVirtualEntityByRecordIdResponse.result)
}

// -------------------------------------------------------------------

// HowEntityByEntityIdRequest

// int64 entity_id = 1;
inline void HowEntityByEntityIdRequest::clear_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_ = ::int64_t{0};
}
inline ::int64_t HowEntityByEntityIdRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.HowEntityByEntityIdRequest.entity_id)
  return _internal_entity_id();
}
inline void HowEntityByEntityIdRequest::set_entity_id(::int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.HowEntityByEntityIdRequest.entity_id)
}
inline ::int64_t HowEntityByEntityIdRequest::_internal_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_;
}
inline void HowEntityByEntityIdRequest::_internal_set_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_ = value;
}

// int64 flags = 2;
inline void HowEntityByEntityIdRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t HowEntityByEntityIdRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.HowEntityByEntityIdRequest.flags)
  return _internal_flags();
}
inline void HowEntityByEntityIdRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.HowEntityByEntityIdRequest.flags)
}
inline ::int64_t HowEntityByEntityIdRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void HowEntityByEntityIdRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// HowEntityByEntityIdResponse

// string result = 1;
inline void HowEntityByEntityIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& HowEntityByEntityIdResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.HowEntityByEntityIdResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void HowEntityByEntityIdResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.HowEntityByEntityIdResponse.result)
}
inline std::string* HowEntityByEntityIdResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.HowEntityByEntityIdResponse.result)
  return _s;
}
inline const std::string& HowEntityByEntityIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void HowEntityByEntityIdResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* HowEntityByEntityIdResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* HowEntityByEntityIdResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.HowEntityByEntityIdResponse.result)
  return _impl_.result_.Release();
}
inline void HowEntityByEntityIdResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.HowEntityByEntityIdResponse.result)
}

// -------------------------------------------------------------------

// PreprocessRecordRequest

// string record_definition = 1;
inline void PreprocessRecordRequest::clear_record_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_definition_.ClearToEmpty();
}
inline const std::string& PreprocessRecordRequest::record_definition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.PreprocessRecordRequest.record_definition)
  return _internal_record_definition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreprocessRecordRequest::set_record_definition(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_definition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.PreprocessRecordRequest.record_definition)
}
inline std::string* PreprocessRecordRequest::mutable_record_definition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_definition();
  // @@protoc_insertion_point(field_mutable:szengine.PreprocessRecordRequest.record_definition)
  return _s;
}
inline const std::string& PreprocessRecordRequest::_internal_record_definition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_definition_.Get();
}
inline void PreprocessRecordRequest::_internal_set_record_definition(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_definition_.Set(value, GetArena());
}
inline std::string* PreprocessRecordRequest::_internal_mutable_record_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_definition_.Mutable( GetArena());
}
inline std::string* PreprocessRecordRequest::release_record_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.PreprocessRecordRequest.record_definition)
  return _impl_.record_definition_.Release();
}
inline void PreprocessRecordRequest::set_allocated_record_definition(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_definition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_definition_.IsDefault()) {
          _impl_.record_definition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.PreprocessRecordRequest.record_definition)
}

// int64 flags = 2;
inline void PreprocessRecordRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t PreprocessRecordRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.PreprocessRecordRequest.flags)
  return _internal_flags();
}
inline void PreprocessRecordRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.PreprocessRecordRequest.flags)
}
inline ::int64_t PreprocessRecordRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void PreprocessRecordRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// PreprocessRecordResponse

// string result = 1;
inline void PreprocessRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& PreprocessRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.PreprocessRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void PreprocessRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.PreprocessRecordResponse.result)
}
inline std::string* PreprocessRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.PreprocessRecordResponse.result)
  return _s;
}
inline const std::string& PreprocessRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void PreprocessRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* PreprocessRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* PreprocessRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.PreprocessRecordResponse.result)
  return _impl_.result_.Release();
}
inline void PreprocessRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.PreprocessRecordResponse.result)
}

// -------------------------------------------------------------------

// PrimeEngineRequest

// -------------------------------------------------------------------

// PrimeEngineResponse

// -------------------------------------------------------------------

// ProcessRedoRecordRequest

// string redo_record = 1;
inline void ProcessRedoRecordRequest::clear_redo_record() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redo_record_.ClearToEmpty();
}
inline const std::string& ProcessRedoRecordRequest::redo_record() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ProcessRedoRecordRequest.redo_record)
  return _internal_redo_record();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProcessRedoRecordRequest::set_redo_record(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redo_record_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ProcessRedoRecordRequest.redo_record)
}
inline std::string* ProcessRedoRecordRequest::mutable_redo_record() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_redo_record();
  // @@protoc_insertion_point(field_mutable:szengine.ProcessRedoRecordRequest.redo_record)
  return _s;
}
inline const std::string& ProcessRedoRecordRequest::_internal_redo_record() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.redo_record_.Get();
}
inline void ProcessRedoRecordRequest::_internal_set_redo_record(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.redo_record_.Set(value, GetArena());
}
inline std::string* ProcessRedoRecordRequest::_internal_mutable_redo_record() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.redo_record_.Mutable( GetArena());
}
inline std::string* ProcessRedoRecordRequest::release_redo_record() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ProcessRedoRecordRequest.redo_record)
  return _impl_.redo_record_.Release();
}
inline void ProcessRedoRecordRequest::set_allocated_redo_record(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.redo_record_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.redo_record_.IsDefault()) {
          _impl_.redo_record_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ProcessRedoRecordRequest.redo_record)
}

// int64 flags = 2;
inline void ProcessRedoRecordRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t ProcessRedoRecordRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.ProcessRedoRecordRequest.flags)
  return _internal_flags();
}
inline void ProcessRedoRecordRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.ProcessRedoRecordRequest.flags)
}
inline ::int64_t ProcessRedoRecordRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void ProcessRedoRecordRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// ProcessRedoRecordResponse

// string result = 1;
inline void ProcessRedoRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& ProcessRedoRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ProcessRedoRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ProcessRedoRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ProcessRedoRecordResponse.result)
}
inline std::string* ProcessRedoRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.ProcessRedoRecordResponse.result)
  return _s;
}
inline const std::string& ProcessRedoRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void ProcessRedoRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* ProcessRedoRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* ProcessRedoRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ProcessRedoRecordResponse.result)
  return _impl_.result_.Release();
}
inline void ProcessRedoRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ProcessRedoRecordResponse.result)
}

// -------------------------------------------------------------------

// ReevaluateEntityRequest

// int64 entity_id = 1;
inline void ReevaluateEntityRequest::clear_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_ = ::int64_t{0};
}
inline ::int64_t ReevaluateEntityRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateEntityRequest.entity_id)
  return _internal_entity_id();
}
inline void ReevaluateEntityRequest::set_entity_id(::int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.ReevaluateEntityRequest.entity_id)
}
inline ::int64_t ReevaluateEntityRequest::_internal_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_;
}
inline void ReevaluateEntityRequest::_internal_set_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_ = value;
}

// int64 flags = 2;
inline void ReevaluateEntityRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t ReevaluateEntityRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateEntityRequest.flags)
  return _internal_flags();
}
inline void ReevaluateEntityRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.ReevaluateEntityRequest.flags)
}
inline ::int64_t ReevaluateEntityRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void ReevaluateEntityRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// ReevaluateEntityResponse

// string result = 1;
inline void ReevaluateEntityResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& ReevaluateEntityResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateEntityResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReevaluateEntityResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ReevaluateEntityResponse.result)
}
inline std::string* ReevaluateEntityResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.ReevaluateEntityResponse.result)
  return _s;
}
inline const std::string& ReevaluateEntityResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void ReevaluateEntityResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* ReevaluateEntityResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* ReevaluateEntityResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ReevaluateEntityResponse.result)
  return _impl_.result_.Release();
}
inline void ReevaluateEntityResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ReevaluateEntityResponse.result)
}

// -------------------------------------------------------------------

// ReevaluateRecordRequest

// string data_source_code = 1;
inline void ReevaluateRecordRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& ReevaluateRecordRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateRecordRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReevaluateRecordRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ReevaluateRecordRequest.data_source_code)
}
inline std::string* ReevaluateRecordRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.ReevaluateRecordRequest.data_source_code)
  return _s;
}
inline const std::string& ReevaluateRecordRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void ReevaluateRecordRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* ReevaluateRecordRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* ReevaluateRecordRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ReevaluateRecordRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void ReevaluateRecordRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ReevaluateRecordRequest.data_source_code)
}

// string record_id = 2;
inline void ReevaluateRecordRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& ReevaluateRecordRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateRecordRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReevaluateRecordRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ReevaluateRecordRequest.record_id)
}
inline std::string* ReevaluateRecordRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.ReevaluateRecordRequest.record_id)
  return _s;
}
inline const std::string& ReevaluateRecordRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void ReevaluateRecordRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* ReevaluateRecordRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* ReevaluateRecordRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ReevaluateRecordRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void ReevaluateRecordRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ReevaluateRecordRequest.record_id)
}

// int64 flags = 3;
inline void ReevaluateRecordRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t ReevaluateRecordRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateRecordRequest.flags)
  return _internal_flags();
}
inline void ReevaluateRecordRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.ReevaluateRecordRequest.flags)
}
inline ::int64_t ReevaluateRecordRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void ReevaluateRecordRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// ReevaluateRecordResponse

// string result = 1;
inline void ReevaluateRecordResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& ReevaluateRecordResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.ReevaluateRecordResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ReevaluateRecordResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.ReevaluateRecordResponse.result)
}
inline std::string* ReevaluateRecordResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.ReevaluateRecordResponse.result)
  return _s;
}
inline const std::string& ReevaluateRecordResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void ReevaluateRecordResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* ReevaluateRecordResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* ReevaluateRecordResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.ReevaluateRecordResponse.result)
  return _impl_.result_.Release();
}
inline void ReevaluateRecordResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.ReevaluateRecordResponse.result)
}

// -------------------------------------------------------------------

// ReinitializeRequest

// int64 config_id = 1;
inline void ReinitializeRequest::clear_config_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_id_ = ::int64_t{0};
}
inline ::int64_t ReinitializeRequest::config_id() const {
  // @@protoc_insertion_point(field_get:szengine.ReinitializeRequest.config_id)
  return _internal_config_id();
}
inline void ReinitializeRequest::set_config_id(::int64_t value) {
  _internal_set_config_id(value);
  // @@protoc_insertion_point(field_set:szengine.ReinitializeRequest.config_id)
}
inline ::int64_t ReinitializeRequest::_internal_config_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_id_;
}
inline void ReinitializeRequest::_internal_set_config_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_id_ = value;
}

// -------------------------------------------------------------------

// ReinitializeResponse

// -------------------------------------------------------------------

// SearchByAttributesRequest

// string attributes = 1;
inline void SearchByAttributesRequest::clear_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attributes_.ClearToEmpty();
}
inline const std::string& SearchByAttributesRequest::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.SearchByAttributesRequest.attributes)
  return _internal_attributes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SearchByAttributesRequest::set_attributes(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.attributes_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.SearchByAttributesRequest.attributes)
}
inline std::string* SearchByAttributesRequest::mutable_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attributes();
  // @@protoc_insertion_point(field_mutable:szengine.SearchByAttributesRequest.attributes)
  return _s;
}
inline const std::string& SearchByAttributesRequest::_internal_attributes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attributes_.Get();
}
inline void SearchByAttributesRequest::_internal_set_attributes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.attributes_.Set(value, GetArena());
}
inline std::string* SearchByAttributesRequest::_internal_mutable_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.attributes_.Mutable( GetArena());
}
inline std::string* SearchByAttributesRequest::release_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.SearchByAttributesRequest.attributes)
  return _impl_.attributes_.Release();
}
inline void SearchByAttributesRequest::set_allocated_attributes(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attributes_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.attributes_.IsDefault()) {
          _impl_.attributes_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.SearchByAttributesRequest.attributes)
}

// string search_profile = 2;
inline void SearchByAttributesRequest::clear_search_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.search_profile_.ClearToEmpty();
}
inline const std::string& SearchByAttributesRequest::search_profile() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.SearchByAttributesRequest.search_profile)
  return _internal_search_profile();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SearchByAttributesRequest::set_search_profile(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.search_profile_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.SearchByAttributesRequest.search_profile)
}
inline std::string* SearchByAttributesRequest::mutable_search_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_search_profile();
  // @@protoc_insertion_point(field_mutable:szengine.SearchByAttributesRequest.search_profile)
  return _s;
}
inline const std::string& SearchByAttributesRequest::_internal_search_profile() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.search_profile_.Get();
}
inline void SearchByAttributesRequest::_internal_set_search_profile(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.search_profile_.Set(value, GetArena());
}
inline std::string* SearchByAttributesRequest::_internal_mutable_search_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.search_profile_.Mutable( GetArena());
}
inline std::string* SearchByAttributesRequest::release_search_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.SearchByAttributesRequest.search_profile)
  return _impl_.search_profile_.Release();
}
inline void SearchByAttributesRequest::set_allocated_search_profile(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.search_profile_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.search_profile_.IsDefault()) {
          _impl_.search_profile_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.SearchByAttributesRequest.search_profile)
}

// int64 flags = 3;
inline void SearchByAttributesRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t SearchByAttributesRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.SearchByAttributesRequest.flags)
  return _internal_flags();
}
inline void SearchByAttributesRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.SearchByAttributesRequest.flags)
}
inline ::int64_t SearchByAttributesRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void SearchByAttributesRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// SearchByAttributesResponse

// string result = 1;
inline void SearchByAttributesResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& SearchByAttributesResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.SearchByAttributesResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SearchByAttributesResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.SearchByAttributesResponse.result)
}
inline std::string* SearchByAttributesResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.SearchByAttributesResponse.result)
  return _s;
}
inline const std::string& SearchByAttributesResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void SearchByAttributesResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* SearchByAttributesResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* SearchByAttributesResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.SearchByAttributesResponse.result)
  return _impl_.result_.Release();
}
inline void SearchByAttributesResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.SearchByAttributesResponse.result)
}

// -------------------------------------------------------------------

// StreamExportCsvEntityReportRequest

// string csv_column_list = 1;
inline void StreamExportCsvEntityReportRequest::clear_csv_column_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.csv_column_list_.ClearToEmpty();
}
inline const std::string& StreamExportCsvEntityReportRequest::csv_column_list() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.StreamExportCsvEntityReportRequest.csv_column_list)
  return _internal_csv_column_list();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamExportCsvEntityReportRequest::set_csv_column_list(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.csv_column_list_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.StreamExportCsvEntityReportRequest.csv_column_list)
}
inline std::string* StreamExportCsvEntityReportRequest::mutable_csv_column_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_csv_column_list();
  // @@protoc_insertion_point(field_mutable:szengine.StreamExportCsvEntityReportRequest.csv_column_list)
  return _s;
}
inline const std::string& StreamExportCsvEntityReportRequest::_internal_csv_column_list() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.csv_column_list_.Get();
}
inline void StreamExportCsvEntityReportRequest::_internal_set_csv_column_list(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.csv_column_list_.Set(value, GetArena());
}
inline std::string* StreamExportCsvEntityReportRequest::_internal_mutable_csv_column_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.csv_column_list_.Mutable( GetArena());
}
inline std::string* StreamExportCsvEntityReportRequest::release_csv_column_list() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.StreamExportCsvEntityReportRequest.csv_column_list)
  return _impl_.csv_column_list_.Release();
}
inline void StreamExportCsvEntityReportRequest::set_allocated_csv_column_list(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.csv_column_list_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.csv_column_list_.IsDefault()) {
          _impl_.csv_column_list_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.StreamExportCsvEntityReportRequest.csv_column_list)
}

// int64 flags = 2;
inline void StreamExportCsvEntityReportRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t StreamExportCsvEntityReportRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.StreamExportCsvEntityReportRequest.flags)
  return _internal_flags();
}
inline void StreamExportCsvEntityReportRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.StreamExportCsvEntityReportRequest.flags)
}
inline ::int64_t StreamExportCsvEntityReportRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void StreamExportCsvEntityReportRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// StreamExportCsvEntityReportResponse

// string result = 1;
inline void StreamExportCsvEntityReportResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& StreamExportCsvEntityReportResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.StreamExportCsvEntityReportResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamExportCsvEntityReportResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.StreamExportCsvEntityReportResponse.result)
}
inline std::string* StreamExportCsvEntityReportResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.StreamExportCsvEntityReportResponse.result)
  return _s;
}
inline const std::string& StreamExportCsvEntityReportResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void StreamExportCsvEntityReportResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* StreamExportCsvEntityReportResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* StreamExportCsvEntityReportResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.StreamExportCsvEntityReportResponse.result)
  return _impl_.result_.Release();
}
inline void StreamExportCsvEntityReportResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.StreamExportCsvEntityReportResponse.result)
}

// -------------------------------------------------------------------

// StreamExportJsonEntityReportRequest

// int64 flags = 1;
inline void StreamExportJsonEntityReportRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t StreamExportJsonEntityReportRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.StreamExportJsonEntityReportRequest.flags)
  return _internal_flags();
}
inline void StreamExportJsonEntityReportRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.StreamExportJsonEntityReportRequest.flags)
}
inline ::int64_t StreamExportJsonEntityReportRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void StreamExportJsonEntityReportRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// StreamExportJsonEntityReportResponse

// string result = 1;
inline void StreamExportJsonEntityReportResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& StreamExportJsonEntityReportResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.StreamExportJsonEntityReportResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StreamExportJsonEntityReportResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.StreamExportJsonEntityReportResponse.result)
}
inline std::string* StreamExportJsonEntityReportResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.StreamExportJsonEntityReportResponse.result)
  return _s;
}
inline const std::string& StreamExportJsonEntityReportResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void StreamExportJsonEntityReportResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* StreamExportJsonEntityReportResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* StreamExportJsonEntityReportResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.StreamExportJsonEntityReportResponse.result)
  return _impl_.result_.Release();
}
inline void StreamExportJsonEntityReportResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.StreamExportJsonEntityReportResponse.result)
}

// -------------------------------------------------------------------

// WhyEntitiesRequest

// int64 entity_id_1 = 1;
inline void WhyEntitiesRequest::clear_entity_id_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_1_ = ::int64_t{0};
}
inline ::int64_t WhyEntitiesRequest::entity_id_1() const {
  // @@protoc_insertion_point(field_get:szengine.WhyEntitiesRequest.entity_id_1)
  return _internal_entity_id_1();
}
inline void WhyEntitiesRequest::set_entity_id_1(::int64_t value) {
  _internal_set_entity_id_1(value);
  // @@protoc_insertion_point(field_set:szengine.WhyEntitiesRequest.entity_id_1)
}
inline ::int64_t WhyEntitiesRequest::_internal_entity_id_1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_1_;
}
inline void WhyEntitiesRequest::_internal_set_entity_id_1(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_1_ = value;
}

// int64 entity_id_2 = 2;
inline void WhyEntitiesRequest::clear_entity_id_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_2_ = ::int64_t{0};
}
inline ::int64_t WhyEntitiesRequest::entity_id_2() const {
  // @@protoc_insertion_point(field_get:szengine.WhyEntitiesRequest.entity_id_2)
  return _internal_entity_id_2();
}
inline void WhyEntitiesRequest::set_entity_id_2(::int64_t value) {
  _internal_set_entity_id_2(value);
  // @@protoc_insertion_point(field_set:szengine.WhyEntitiesRequest.entity_id_2)
}
inline ::int64_t WhyEntitiesRequest::_internal_entity_id_2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_2_;
}
inline void WhyEntitiesRequest::_internal_set_entity_id_2(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_2_ = value;
}

// int64 flags = 3;
inline void WhyEntitiesRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t WhyEntitiesRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.WhyEntitiesRequest.flags)
  return _internal_flags();
}
inline void WhyEntitiesRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.WhyEntitiesRequest.flags)
}
inline ::int64_t WhyEntitiesRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void WhyEntitiesRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// WhyEntitiesResponse

// string result = 1;
inline void WhyEntitiesResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& WhyEntitiesResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyEntitiesResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyEntitiesResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyEntitiesResponse.result)
}
inline std::string* WhyEntitiesResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.WhyEntitiesResponse.result)
  return _s;
}
inline const std::string& WhyEntitiesResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void WhyEntitiesResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* WhyEntitiesResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* WhyEntitiesResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyEntitiesResponse.result)
  return _impl_.result_.Release();
}
inline void WhyEntitiesResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyEntitiesResponse.result)
}

// -------------------------------------------------------------------

// WhyRecordInEntityRequest

// string data_source_code = 1;
inline void WhyRecordInEntityRequest::clear_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.ClearToEmpty();
}
inline const std::string& WhyRecordInEntityRequest::data_source_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordInEntityRequest.data_source_code)
  return _internal_data_source_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordInEntityRequest::set_data_source_code(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordInEntityRequest.data_source_code)
}
inline std::string* WhyRecordInEntityRequest::mutable_data_source_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordInEntityRequest.data_source_code)
  return _s;
}
inline const std::string& WhyRecordInEntityRequest::_internal_data_source_code() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_.Get();
}
inline void WhyRecordInEntityRequest::_internal_set_data_source_code(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_.Set(value, GetArena());
}
inline std::string* WhyRecordInEntityRequest::_internal_mutable_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_.Mutable( GetArena());
}
inline std::string* WhyRecordInEntityRequest::release_data_source_code() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordInEntityRequest.data_source_code)
  return _impl_.data_source_code_.Release();
}
inline void WhyRecordInEntityRequest::set_allocated_data_source_code(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_.IsDefault()) {
          _impl_.data_source_code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordInEntityRequest.data_source_code)
}

// string record_id = 2;
inline void WhyRecordInEntityRequest::clear_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.ClearToEmpty();
}
inline const std::string& WhyRecordInEntityRequest::record_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordInEntityRequest.record_id)
  return _internal_record_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordInEntityRequest::set_record_id(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordInEntityRequest.record_id)
}
inline std::string* WhyRecordInEntityRequest::mutable_record_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordInEntityRequest.record_id)
  return _s;
}
inline const std::string& WhyRecordInEntityRequest::_internal_record_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_.Get();
}
inline void WhyRecordInEntityRequest::_internal_set_record_id(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_.Set(value, GetArena());
}
inline std::string* WhyRecordInEntityRequest::_internal_mutable_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_.Mutable( GetArena());
}
inline std::string* WhyRecordInEntityRequest::release_record_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordInEntityRequest.record_id)
  return _impl_.record_id_.Release();
}
inline void WhyRecordInEntityRequest::set_allocated_record_id(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_.IsDefault()) {
          _impl_.record_id_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordInEntityRequest.record_id)
}

// int64 flags = 3;
inline void WhyRecordInEntityRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t WhyRecordInEntityRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordInEntityRequest.flags)
  return _internal_flags();
}
inline void WhyRecordInEntityRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.WhyRecordInEntityRequest.flags)
}
inline ::int64_t WhyRecordInEntityRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void WhyRecordInEntityRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// WhyRecordInEntityResponse

// string result = 1;
inline void WhyRecordInEntityResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& WhyRecordInEntityResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordInEntityResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordInEntityResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordInEntityResponse.result)
}
inline std::string* WhyRecordInEntityResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordInEntityResponse.result)
  return _s;
}
inline const std::string& WhyRecordInEntityResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void WhyRecordInEntityResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* WhyRecordInEntityResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* WhyRecordInEntityResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordInEntityResponse.result)
  return _impl_.result_.Release();
}
inline void WhyRecordInEntityResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordInEntityResponse.result)
}

// -------------------------------------------------------------------

// WhyRecordsRequest

// string data_source_code_1 = 1;
inline void WhyRecordsRequest::clear_data_source_code_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_1_.ClearToEmpty();
}
inline const std::string& WhyRecordsRequest::data_source_code_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordsRequest.data_source_code_1)
  return _internal_data_source_code_1();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordsRequest::set_data_source_code_1(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_1_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordsRequest.data_source_code_1)
}
inline std::string* WhyRecordsRequest::mutable_data_source_code_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code_1();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordsRequest.data_source_code_1)
  return _s;
}
inline const std::string& WhyRecordsRequest::_internal_data_source_code_1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_1_.Get();
}
inline void WhyRecordsRequest::_internal_set_data_source_code_1(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_1_.Set(value, GetArena());
}
inline std::string* WhyRecordsRequest::_internal_mutable_data_source_code_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_1_.Mutable( GetArena());
}
inline std::string* WhyRecordsRequest::release_data_source_code_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordsRequest.data_source_code_1)
  return _impl_.data_source_code_1_.Release();
}
inline void WhyRecordsRequest::set_allocated_data_source_code_1(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_1_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_1_.IsDefault()) {
          _impl_.data_source_code_1_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordsRequest.data_source_code_1)
}

// string record_id_1 = 2;
inline void WhyRecordsRequest::clear_record_id_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_1_.ClearToEmpty();
}
inline const std::string& WhyRecordsRequest::record_id_1() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordsRequest.record_id_1)
  return _internal_record_id_1();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordsRequest::set_record_id_1(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_1_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordsRequest.record_id_1)
}
inline std::string* WhyRecordsRequest::mutable_record_id_1() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id_1();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordsRequest.record_id_1)
  return _s;
}
inline const std::string& WhyRecordsRequest::_internal_record_id_1() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_1_.Get();
}
inline void WhyRecordsRequest::_internal_set_record_id_1(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_1_.Set(value, GetArena());
}
inline std::string* WhyRecordsRequest::_internal_mutable_record_id_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_1_.Mutable( GetArena());
}
inline std::string* WhyRecordsRequest::release_record_id_1() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordsRequest.record_id_1)
  return _impl_.record_id_1_.Release();
}
inline void WhyRecordsRequest::set_allocated_record_id_1(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_1_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_1_.IsDefault()) {
          _impl_.record_id_1_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordsRequest.record_id_1)
}

// string data_source_code_2 = 3;
inline void WhyRecordsRequest::clear_data_source_code_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_2_.ClearToEmpty();
}
inline const std::string& WhyRecordsRequest::data_source_code_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordsRequest.data_source_code_2)
  return _internal_data_source_code_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordsRequest::set_data_source_code_2(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordsRequest.data_source_code_2)
}
inline std::string* WhyRecordsRequest::mutable_data_source_code_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data_source_code_2();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordsRequest.data_source_code_2)
  return _s;
}
inline const std::string& WhyRecordsRequest::_internal_data_source_code_2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.data_source_code_2_.Get();
}
inline void WhyRecordsRequest::_internal_set_data_source_code_2(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.data_source_code_2_.Set(value, GetArena());
}
inline std::string* WhyRecordsRequest::_internal_mutable_data_source_code_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.data_source_code_2_.Mutable( GetArena());
}
inline std::string* WhyRecordsRequest::release_data_source_code_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordsRequest.data_source_code_2)
  return _impl_.data_source_code_2_.Release();
}
inline void WhyRecordsRequest::set_allocated_data_source_code_2(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.data_source_code_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_source_code_2_.IsDefault()) {
          _impl_.data_source_code_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordsRequest.data_source_code_2)
}

// string record_id_2 = 4;
inline void WhyRecordsRequest::clear_record_id_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_2_.ClearToEmpty();
}
inline const std::string& WhyRecordsRequest::record_id_2() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordsRequest.record_id_2)
  return _internal_record_id_2();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordsRequest::set_record_id_2(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_2_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordsRequest.record_id_2)
}
inline std::string* WhyRecordsRequest::mutable_record_id_2() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_record_id_2();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordsRequest.record_id_2)
  return _s;
}
inline const std::string& WhyRecordsRequest::_internal_record_id_2() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.record_id_2_.Get();
}
inline void WhyRecordsRequest::_internal_set_record_id_2(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.record_id_2_.Set(value, GetArena());
}
inline std::string* WhyRecordsRequest::_internal_mutable_record_id_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.record_id_2_.Mutable( GetArena());
}
inline std::string* WhyRecordsRequest::release_record_id_2() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordsRequest.record_id_2)
  return _impl_.record_id_2_.Release();
}
inline void WhyRecordsRequest::set_allocated_record_id_2(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.record_id_2_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.record_id_2_.IsDefault()) {
          _impl_.record_id_2_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordsRequest.record_id_2)
}

// int64 flags = 5;
inline void WhyRecordsRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t WhyRecordsRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordsRequest.flags)
  return _internal_flags();
}
inline void WhyRecordsRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.WhyRecordsRequest.flags)
}
inline ::int64_t WhyRecordsRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void WhyRecordsRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// WhyRecordsResponse

// string result = 1;
inline void WhyRecordsResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& WhyRecordsResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhyRecordsResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhyRecordsResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhyRecordsResponse.result)
}
inline std::string* WhyRecordsResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.WhyRecordsResponse.result)
  return _s;
}
inline const std::string& WhyRecordsResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void WhyRecordsResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* WhyRecordsResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* WhyRecordsResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhyRecordsResponse.result)
  return _impl_.result_.Release();
}
inline void WhyRecordsResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhyRecordsResponse.result)
}

// -------------------------------------------------------------------

// WhySearchRequest

// string attributes = 1;
inline void WhySearchRequest::clear_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attributes_.ClearToEmpty();
}
inline const std::string& WhySearchRequest::attributes() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhySearchRequest.attributes)
  return _internal_attributes();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhySearchRequest::set_attributes(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.attributes_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhySearchRequest.attributes)
}
inline std::string* WhySearchRequest::mutable_attributes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attributes();
  // @@protoc_insertion_point(field_mutable:szengine.WhySearchRequest.attributes)
  return _s;
}
inline const std::string& WhySearchRequest::_internal_attributes() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.attributes_.Get();
}
inline void WhySearchRequest::_internal_set_attributes(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.attributes_.Set(value, GetArena());
}
inline std::string* WhySearchRequest::_internal_mutable_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.attributes_.Mutable( GetArena());
}
inline std::string* WhySearchRequest::release_attributes() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhySearchRequest.attributes)
  return _impl_.attributes_.Release();
}
inline void WhySearchRequest::set_allocated_attributes(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.attributes_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.attributes_.IsDefault()) {
          _impl_.attributes_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhySearchRequest.attributes)
}

// int64 entity_id = 2;
inline void WhySearchRequest::clear_entity_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.entity_id_ = ::int64_t{0};
}
inline ::int64_t WhySearchRequest::entity_id() const {
  // @@protoc_insertion_point(field_get:szengine.WhySearchRequest.entity_id)
  return _internal_entity_id();
}
inline void WhySearchRequest::set_entity_id(::int64_t value) {
  _internal_set_entity_id(value);
  // @@protoc_insertion_point(field_set:szengine.WhySearchRequest.entity_id)
}
inline ::int64_t WhySearchRequest::_internal_entity_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.entity_id_;
}
inline void WhySearchRequest::_internal_set_entity_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.entity_id_ = value;
}

// string search_profile = 3;
inline void WhySearchRequest::clear_search_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.search_profile_.ClearToEmpty();
}
inline const std::string& WhySearchRequest::search_profile() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhySearchRequest.search_profile)
  return _internal_search_profile();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhySearchRequest::set_search_profile(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.search_profile_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhySearchRequest.search_profile)
}
inline std::string* WhySearchRequest::mutable_search_profile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_search_profile();
  // @@protoc_insertion_point(field_mutable:szengine.WhySearchRequest.search_profile)
  return _s;
}
inline const std::string& WhySearchRequest::_internal_search_profile() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.search_profile_.Get();
}
inline void WhySearchRequest::_internal_set_search_profile(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.search_profile_.Set(value, GetArena());
}
inline std::string* WhySearchRequest::_internal_mutable_search_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.search_profile_.Mutable( GetArena());
}
inline std::string* WhySearchRequest::release_search_profile() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhySearchRequest.search_profile)
  return _impl_.search_profile_.Release();
}
inline void WhySearchRequest::set_allocated_search_profile(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.search_profile_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.search_profile_.IsDefault()) {
          _impl_.search_profile_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhySearchRequest.search_profile)
}

// int64 flags = 4;
inline void WhySearchRequest::clear_flags() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.flags_ = ::int64_t{0};
}
inline ::int64_t WhySearchRequest::flags() const {
  // @@protoc_insertion_point(field_get:szengine.WhySearchRequest.flags)
  return _internal_flags();
}
inline void WhySearchRequest::set_flags(::int64_t value) {
  _internal_set_flags(value);
  // @@protoc_insertion_point(field_set:szengine.WhySearchRequest.flags)
}
inline ::int64_t WhySearchRequest::_internal_flags() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.flags_;
}
inline void WhySearchRequest::_internal_set_flags(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.flags_ = value;
}

// -------------------------------------------------------------------

// WhySearchResponse

// string result = 1;
inline void WhySearchResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& WhySearchResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szengine.WhySearchResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void WhySearchResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szengine.WhySearchResponse.result)
}
inline std::string* WhySearchResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szengine.WhySearchResponse.result)
  return _s;
}
inline const std::string& WhySearchResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void WhySearchResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* WhySearchResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* WhySearchResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szengine.WhySearchResponse.result)
  return _impl_.result_.Release();
}
inline void WhySearchResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szengine.WhySearchResponse.result)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace szengine


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_szengine_2eproto_2epb_2eh
