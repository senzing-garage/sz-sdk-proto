// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szengine.proto

#include "szengine.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace szengine {
PROTOBUF_CONSTEXPR AddRecordRequest::AddRecordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRecordRequestDefaultTypeInternal() {}
  union {
    AddRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRecordRequestDefaultTypeInternal _AddRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR AddRecordResponse::AddRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct AddRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AddRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~AddRecordResponseDefaultTypeInternal() {}
  union {
    AddRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AddRecordResponseDefaultTypeInternal _AddRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR CloseExportRequest::CloseExportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.export_handle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CloseExportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseExportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseExportRequestDefaultTypeInternal() {}
  union {
    CloseExportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseExportRequestDefaultTypeInternal _CloseExportRequest_default_instance_;
PROTOBUF_CONSTEXPR CloseExportResponse::CloseExportResponse(
    ::_pbi::ConstantInitialized) {}
struct CloseExportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CloseExportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CloseExportResponseDefaultTypeInternal() {}
  union {
    CloseExportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CloseExportResponseDefaultTypeInternal _CloseExportResponse_default_instance_;
PROTOBUF_CONSTEXPR CountRedoRecordsRequest::CountRedoRecordsRequest(
    ::_pbi::ConstantInitialized) {}
struct CountRedoRecordsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CountRedoRecordsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CountRedoRecordsRequestDefaultTypeInternal() {}
  union {
    CountRedoRecordsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CountRedoRecordsRequestDefaultTypeInternal _CountRedoRecordsRequest_default_instance_;
PROTOBUF_CONSTEXPR CountRedoRecordsResponse::CountRedoRecordsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CountRedoRecordsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CountRedoRecordsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CountRedoRecordsResponseDefaultTypeInternal() {}
  union {
    CountRedoRecordsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CountRedoRecordsResponseDefaultTypeInternal _CountRedoRecordsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteRecordRequest::DeleteRecordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRecordRequestDefaultTypeInternal() {}
  union {
    DeleteRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRecordRequestDefaultTypeInternal _DeleteRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteRecordResponse::DeleteRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteRecordResponseDefaultTypeInternal() {}
  union {
    DeleteRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteRecordResponseDefaultTypeInternal _DeleteRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR ExportCsvEntityReportRequest::ExportCsvEntityReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.csv_column_list_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExportCsvEntityReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportCsvEntityReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportCsvEntityReportRequestDefaultTypeInternal() {}
  union {
    ExportCsvEntityReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportCsvEntityReportRequestDefaultTypeInternal _ExportCsvEntityReportRequest_default_instance_;
PROTOBUF_CONSTEXPR ExportCsvEntityReportResponse::ExportCsvEntityReportResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExportCsvEntityReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportCsvEntityReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportCsvEntityReportResponseDefaultTypeInternal() {}
  union {
    ExportCsvEntityReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportCsvEntityReportResponseDefaultTypeInternal _ExportCsvEntityReportResponse_default_instance_;
PROTOBUF_CONSTEXPR ExportJsonEntityReportRequest::ExportJsonEntityReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExportJsonEntityReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportJsonEntityReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportJsonEntityReportRequestDefaultTypeInternal() {}
  union {
    ExportJsonEntityReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportJsonEntityReportRequestDefaultTypeInternal _ExportJsonEntityReportRequest_default_instance_;
PROTOBUF_CONSTEXPR ExportJsonEntityReportResponse::ExportJsonEntityReportResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ExportJsonEntityReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportJsonEntityReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportJsonEntityReportResponseDefaultTypeInternal() {}
  union {
    ExportJsonEntityReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportJsonEntityReportResponseDefaultTypeInternal _ExportJsonEntityReportResponse_default_instance_;
PROTOBUF_CONSTEXPR FetchNextRequest::FetchNextRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.export_handle_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchNextRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchNextRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchNextRequestDefaultTypeInternal() {}
  union {
    FetchNextRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchNextRequestDefaultTypeInternal _FetchNextRequest_default_instance_;
PROTOBUF_CONSTEXPR FetchNextResponse::FetchNextResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FetchNextResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FetchNextResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FetchNextResponseDefaultTypeInternal() {}
  union {
    FetchNextResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FetchNextResponseDefaultTypeInternal _FetchNextResponse_default_instance_;
PROTOBUF_CONSTEXPR FindInterestingEntitiesByEntityIdRequest::FindInterestingEntitiesByEntityIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal() {}
  union {
    FindInterestingEntitiesByEntityIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal _FindInterestingEntitiesByEntityIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FindInterestingEntitiesByEntityIdResponse::FindInterestingEntitiesByEntityIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal() {}
  union {
    FindInterestingEntitiesByEntityIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal _FindInterestingEntitiesByEntityIdResponse_default_instance_;
PROTOBUF_CONSTEXPR FindInterestingEntitiesByRecordIdRequest::FindInterestingEntitiesByRecordIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal() {}
  union {
    FindInterestingEntitiesByRecordIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal _FindInterestingEntitiesByRecordIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FindInterestingEntitiesByRecordIdResponse::FindInterestingEntitiesByRecordIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal() {}
  union {
    FindInterestingEntitiesByRecordIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal _FindInterestingEntitiesByRecordIdResponse_default_instance_;
PROTOBUF_CONSTEXPR FindNetworkByEntityIdRequest::FindNetworkByEntityIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_ids_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.max_degrees_)*/int64_t{0}
  , /*decltype(_impl_.build_out_degrees_)*/int64_t{0}
  , /*decltype(_impl_.build_out_max_entities_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindNetworkByEntityIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNetworkByEntityIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNetworkByEntityIdRequestDefaultTypeInternal() {}
  union {
    FindNetworkByEntityIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNetworkByEntityIdRequestDefaultTypeInternal _FindNetworkByEntityIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FindNetworkByEntityIdResponse::FindNetworkByEntityIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindNetworkByEntityIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNetworkByEntityIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNetworkByEntityIdResponseDefaultTypeInternal() {}
  union {
    FindNetworkByEntityIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNetworkByEntityIdResponseDefaultTypeInternal _FindNetworkByEntityIdResponse_default_instance_;
PROTOBUF_CONSTEXPR FindNetworkByRecordIdRequest::FindNetworkByRecordIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.record_keys_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.max_degrees_)*/int64_t{0}
  , /*decltype(_impl_.build_out_degrees_)*/int64_t{0}
  , /*decltype(_impl_.build_out_max_entities_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindNetworkByRecordIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNetworkByRecordIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNetworkByRecordIdRequestDefaultTypeInternal() {}
  union {
    FindNetworkByRecordIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNetworkByRecordIdRequestDefaultTypeInternal _FindNetworkByRecordIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FindNetworkByRecordIdResponse::FindNetworkByRecordIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindNetworkByRecordIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindNetworkByRecordIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindNetworkByRecordIdResponseDefaultTypeInternal() {}
  union {
    FindNetworkByRecordIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindNetworkByRecordIdResponseDefaultTypeInternal _FindNetworkByRecordIdResponse_default_instance_;
PROTOBUF_CONSTEXPR FindPathByEntityIdRequest::FindPathByEntityIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.avoid_entity_ids_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.required_data_sources_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_entity_id_)*/int64_t{0}
  , /*decltype(_impl_.end_entity_id_)*/int64_t{0}
  , /*decltype(_impl_.max_degrees_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindPathByEntityIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindPathByEntityIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindPathByEntityIdRequestDefaultTypeInternal() {}
  union {
    FindPathByEntityIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindPathByEntityIdRequestDefaultTypeInternal _FindPathByEntityIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FindPathByEntityIdResponse::FindPathByEntityIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindPathByEntityIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindPathByEntityIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindPathByEntityIdResponseDefaultTypeInternal() {}
  union {
    FindPathByEntityIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindPathByEntityIdResponseDefaultTypeInternal _FindPathByEntityIdResponse_default_instance_;
PROTOBUF_CONSTEXPR FindPathByRecordIdRequest::FindPathByRecordIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.start_data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.start_record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.end_data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.end_record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.avoid_record_keys_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.required_data_sources_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.max_degrees_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindPathByRecordIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindPathByRecordIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindPathByRecordIdRequestDefaultTypeInternal() {}
  union {
    FindPathByRecordIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindPathByRecordIdRequestDefaultTypeInternal _FindPathByRecordIdRequest_default_instance_;
PROTOBUF_CONSTEXPR FindPathByRecordIdResponse::FindPathByRecordIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct FindPathByRecordIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FindPathByRecordIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~FindPathByRecordIdResponseDefaultTypeInternal() {}
  union {
    FindPathByRecordIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FindPathByRecordIdResponseDefaultTypeInternal _FindPathByRecordIdResponse_default_instance_;
PROTOBUF_CONSTEXPR GetActiveConfigIdRequest::GetActiveConfigIdRequest(
    ::_pbi::ConstantInitialized) {}
struct GetActiveConfigIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetActiveConfigIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetActiveConfigIdRequestDefaultTypeInternal() {}
  union {
    GetActiveConfigIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetActiveConfigIdRequestDefaultTypeInternal _GetActiveConfigIdRequest_default_instance_;
PROTOBUF_CONSTEXPR GetActiveConfigIdResponse::GetActiveConfigIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetActiveConfigIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetActiveConfigIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetActiveConfigIdResponseDefaultTypeInternal() {}
  union {
    GetActiveConfigIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetActiveConfigIdResponseDefaultTypeInternal _GetActiveConfigIdResponse_default_instance_;
PROTOBUF_CONSTEXPR GetEntityByEntityIdRequest::GetEntityByEntityIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEntityByEntityIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEntityByEntityIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEntityByEntityIdRequestDefaultTypeInternal() {}
  union {
    GetEntityByEntityIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEntityByEntityIdRequestDefaultTypeInternal _GetEntityByEntityIdRequest_default_instance_;
PROTOBUF_CONSTEXPR GetEntityByEntityIdResponse::GetEntityByEntityIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEntityByEntityIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEntityByEntityIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEntityByEntityIdResponseDefaultTypeInternal() {}
  union {
    GetEntityByEntityIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEntityByEntityIdResponseDefaultTypeInternal _GetEntityByEntityIdResponse_default_instance_;
PROTOBUF_CONSTEXPR GetEntityByRecordIdRequest::GetEntityByRecordIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEntityByRecordIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEntityByRecordIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEntityByRecordIdRequestDefaultTypeInternal() {}
  union {
    GetEntityByRecordIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEntityByRecordIdRequestDefaultTypeInternal _GetEntityByRecordIdRequest_default_instance_;
PROTOBUF_CONSTEXPR GetEntityByRecordIdResponse::GetEntityByRecordIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetEntityByRecordIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetEntityByRecordIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetEntityByRecordIdResponseDefaultTypeInternal() {}
  union {
    GetEntityByRecordIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetEntityByRecordIdResponseDefaultTypeInternal _GetEntityByRecordIdResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRecordRequest::GetRecordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordRequestDefaultTypeInternal() {}
  union {
    GetRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordRequestDefaultTypeInternal _GetRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRecordResponse::GetRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRecordResponseDefaultTypeInternal() {}
  union {
    GetRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRecordResponseDefaultTypeInternal _GetRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR GetRedoRecordRequest::GetRedoRecordRequest(
    ::_pbi::ConstantInitialized) {}
struct GetRedoRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRedoRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRedoRecordRequestDefaultTypeInternal() {}
  union {
    GetRedoRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRedoRecordRequestDefaultTypeInternal _GetRedoRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR GetRedoRecordResponse::GetRedoRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetRedoRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetRedoRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetRedoRecordResponseDefaultTypeInternal() {}
  union {
    GetRedoRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetRedoRecordResponseDefaultTypeInternal _GetRedoRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR GetStatsRequest::GetStatsRequest(
    ::_pbi::ConstantInitialized) {}
struct GetStatsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatsRequestDefaultTypeInternal() {}
  union {
    GetStatsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatsRequestDefaultTypeInternal _GetStatsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetStatsResponse::GetStatsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetStatsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetStatsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetStatsResponseDefaultTypeInternal() {}
  union {
    GetStatsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetStatsResponseDefaultTypeInternal _GetStatsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetVirtualEntityByRecordIdRequest::GetVirtualEntityByRecordIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.record_keys_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVirtualEntityByRecordIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVirtualEntityByRecordIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVirtualEntityByRecordIdRequestDefaultTypeInternal() {}
  union {
    GetVirtualEntityByRecordIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVirtualEntityByRecordIdRequestDefaultTypeInternal _GetVirtualEntityByRecordIdRequest_default_instance_;
PROTOBUF_CONSTEXPR GetVirtualEntityByRecordIdResponse::GetVirtualEntityByRecordIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetVirtualEntityByRecordIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetVirtualEntityByRecordIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetVirtualEntityByRecordIdResponseDefaultTypeInternal() {}
  union {
    GetVirtualEntityByRecordIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetVirtualEntityByRecordIdResponseDefaultTypeInternal _GetVirtualEntityByRecordIdResponse_default_instance_;
PROTOBUF_CONSTEXPR HowEntityByEntityIdRequest::HowEntityByEntityIdRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HowEntityByEntityIdRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HowEntityByEntityIdRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HowEntityByEntityIdRequestDefaultTypeInternal() {}
  union {
    HowEntityByEntityIdRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HowEntityByEntityIdRequestDefaultTypeInternal _HowEntityByEntityIdRequest_default_instance_;
PROTOBUF_CONSTEXPR HowEntityByEntityIdResponse::HowEntityByEntityIdResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct HowEntityByEntityIdResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HowEntityByEntityIdResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~HowEntityByEntityIdResponseDefaultTypeInternal() {}
  union {
    HowEntityByEntityIdResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HowEntityByEntityIdResponseDefaultTypeInternal _HowEntityByEntityIdResponse_default_instance_;
PROTOBUF_CONSTEXPR PreprocessRecordRequest::PreprocessRecordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.record_definition_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreprocessRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreprocessRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreprocessRecordRequestDefaultTypeInternal() {}
  union {
    PreprocessRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreprocessRecordRequestDefaultTypeInternal _PreprocessRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR PreprocessRecordResponse::PreprocessRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PreprocessRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PreprocessRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PreprocessRecordResponseDefaultTypeInternal() {}
  union {
    PreprocessRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PreprocessRecordResponseDefaultTypeInternal _PreprocessRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR PrimeEngineRequest::PrimeEngineRequest(
    ::_pbi::ConstantInitialized) {}
struct PrimeEngineRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrimeEngineRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrimeEngineRequestDefaultTypeInternal() {}
  union {
    PrimeEngineRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrimeEngineRequestDefaultTypeInternal _PrimeEngineRequest_default_instance_;
PROTOBUF_CONSTEXPR PrimeEngineResponse::PrimeEngineResponse(
    ::_pbi::ConstantInitialized) {}
struct PrimeEngineResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PrimeEngineResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PrimeEngineResponseDefaultTypeInternal() {}
  union {
    PrimeEngineResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PrimeEngineResponseDefaultTypeInternal _PrimeEngineResponse_default_instance_;
PROTOBUF_CONSTEXPR ProcessRedoRecordRequest::ProcessRedoRecordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.redo_record_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProcessRedoRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessRedoRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessRedoRecordRequestDefaultTypeInternal() {}
  union {
    ProcessRedoRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessRedoRecordRequestDefaultTypeInternal _ProcessRedoRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR ProcessRedoRecordResponse::ProcessRedoRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProcessRedoRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProcessRedoRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProcessRedoRecordResponseDefaultTypeInternal() {}
  union {
    ProcessRedoRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProcessRedoRecordResponseDefaultTypeInternal _ProcessRedoRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR ReevaluateEntityRequest::ReevaluateEntityRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReevaluateEntityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReevaluateEntityRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReevaluateEntityRequestDefaultTypeInternal() {}
  union {
    ReevaluateEntityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReevaluateEntityRequestDefaultTypeInternal _ReevaluateEntityRequest_default_instance_;
PROTOBUF_CONSTEXPR ReevaluateEntityResponse::ReevaluateEntityResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReevaluateEntityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReevaluateEntityResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReevaluateEntityResponseDefaultTypeInternal() {}
  union {
    ReevaluateEntityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReevaluateEntityResponseDefaultTypeInternal _ReevaluateEntityResponse_default_instance_;
PROTOBUF_CONSTEXPR ReevaluateRecordRequest::ReevaluateRecordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReevaluateRecordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReevaluateRecordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReevaluateRecordRequestDefaultTypeInternal() {}
  union {
    ReevaluateRecordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReevaluateRecordRequestDefaultTypeInternal _ReevaluateRecordRequest_default_instance_;
PROTOBUF_CONSTEXPR ReevaluateRecordResponse::ReevaluateRecordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReevaluateRecordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReevaluateRecordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReevaluateRecordResponseDefaultTypeInternal() {}
  union {
    ReevaluateRecordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReevaluateRecordResponseDefaultTypeInternal _ReevaluateRecordResponse_default_instance_;
PROTOBUF_CONSTEXPR ReinitializeRequest::ReinitializeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReinitializeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinitializeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinitializeRequestDefaultTypeInternal() {}
  union {
    ReinitializeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinitializeRequestDefaultTypeInternal _ReinitializeRequest_default_instance_;
PROTOBUF_CONSTEXPR ReinitializeResponse::ReinitializeResponse(
    ::_pbi::ConstantInitialized) {}
struct ReinitializeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinitializeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinitializeResponseDefaultTypeInternal() {}
  union {
    ReinitializeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinitializeResponseDefaultTypeInternal _ReinitializeResponse_default_instance_;
PROTOBUF_CONSTEXPR SearchByAttributesRequest::SearchByAttributesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attributes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.search_profile_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchByAttributesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchByAttributesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchByAttributesRequestDefaultTypeInternal() {}
  union {
    SearchByAttributesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchByAttributesRequestDefaultTypeInternal _SearchByAttributesRequest_default_instance_;
PROTOBUF_CONSTEXPR SearchByAttributesResponse::SearchByAttributesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SearchByAttributesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SearchByAttributesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SearchByAttributesResponseDefaultTypeInternal() {}
  union {
    SearchByAttributesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SearchByAttributesResponseDefaultTypeInternal _SearchByAttributesResponse_default_instance_;
PROTOBUF_CONSTEXPR StreamExportCsvEntityReportRequest::StreamExportCsvEntityReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.csv_column_list_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamExportCsvEntityReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamExportCsvEntityReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamExportCsvEntityReportRequestDefaultTypeInternal() {}
  union {
    StreamExportCsvEntityReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamExportCsvEntityReportRequestDefaultTypeInternal _StreamExportCsvEntityReportRequest_default_instance_;
PROTOBUF_CONSTEXPR StreamExportCsvEntityReportResponse::StreamExportCsvEntityReportResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamExportCsvEntityReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamExportCsvEntityReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamExportCsvEntityReportResponseDefaultTypeInternal() {}
  union {
    StreamExportCsvEntityReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamExportCsvEntityReportResponseDefaultTypeInternal _StreamExportCsvEntityReportResponse_default_instance_;
PROTOBUF_CONSTEXPR StreamExportJsonEntityReportRequest::StreamExportJsonEntityReportRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamExportJsonEntityReportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamExportJsonEntityReportRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamExportJsonEntityReportRequestDefaultTypeInternal() {}
  union {
    StreamExportJsonEntityReportRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamExportJsonEntityReportRequestDefaultTypeInternal _StreamExportJsonEntityReportRequest_default_instance_;
PROTOBUF_CONSTEXPR StreamExportJsonEntityReportResponse::StreamExportJsonEntityReportResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct StreamExportJsonEntityReportResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StreamExportJsonEntityReportResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~StreamExportJsonEntityReportResponseDefaultTypeInternal() {}
  union {
    StreamExportJsonEntityReportResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StreamExportJsonEntityReportResponseDefaultTypeInternal _StreamExportJsonEntityReportResponse_default_instance_;
PROTOBUF_CONSTEXPR WhyEntitiesRequest::WhyEntitiesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.entity_id_1_)*/int64_t{0}
  , /*decltype(_impl_.entity_id_2_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhyEntitiesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhyEntitiesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhyEntitiesRequestDefaultTypeInternal() {}
  union {
    WhyEntitiesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhyEntitiesRequestDefaultTypeInternal _WhyEntitiesRequest_default_instance_;
PROTOBUF_CONSTEXPR WhyEntitiesResponse::WhyEntitiesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhyEntitiesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhyEntitiesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhyEntitiesResponseDefaultTypeInternal() {}
  union {
    WhyEntitiesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhyEntitiesResponseDefaultTypeInternal _WhyEntitiesResponse_default_instance_;
PROTOBUF_CONSTEXPR WhyRecordInEntityRequest::WhyRecordInEntityRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhyRecordInEntityRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhyRecordInEntityRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhyRecordInEntityRequestDefaultTypeInternal() {}
  union {
    WhyRecordInEntityRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhyRecordInEntityRequestDefaultTypeInternal _WhyRecordInEntityRequest_default_instance_;
PROTOBUF_CONSTEXPR WhyRecordInEntityResponse::WhyRecordInEntityResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhyRecordInEntityResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhyRecordInEntityResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhyRecordInEntityResponseDefaultTypeInternal() {}
  union {
    WhyRecordInEntityResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhyRecordInEntityResponseDefaultTypeInternal _WhyRecordInEntityResponse_default_instance_;
PROTOBUF_CONSTEXPR WhyRecordsRequest::WhyRecordsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.data_source_code_1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_1_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.data_source_code_2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.record_id_2_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhyRecordsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhyRecordsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhyRecordsRequestDefaultTypeInternal() {}
  union {
    WhyRecordsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhyRecordsRequestDefaultTypeInternal _WhyRecordsRequest_default_instance_;
PROTOBUF_CONSTEXPR WhyRecordsResponse::WhyRecordsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhyRecordsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhyRecordsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhyRecordsResponseDefaultTypeInternal() {}
  union {
    WhyRecordsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhyRecordsResponseDefaultTypeInternal _WhyRecordsResponse_default_instance_;
PROTOBUF_CONSTEXPR WhySearchRequest::WhySearchRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attributes_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.search_profile_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.entity_id_)*/int64_t{0}
  , /*decltype(_impl_.flags_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhySearchRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhySearchRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhySearchRequestDefaultTypeInternal() {}
  union {
    WhySearchRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhySearchRequestDefaultTypeInternal _WhySearchRequest_default_instance_;
PROTOBUF_CONSTEXPR WhySearchResponse::WhySearchResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WhySearchResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WhySearchResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WhySearchResponseDefaultTypeInternal() {}
  union {
    WhySearchResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WhySearchResponseDefaultTypeInternal _WhySearchResponse_default_instance_;
}  // namespace szengine
static ::_pb::Metadata file_level_metadata_szengine_2eproto[68];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_szengine_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_szengine_2eproto = nullptr;

const uint32_t TableStruct_szengine_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, _impl_.record_definition_),
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CloseExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::CloseExportRequest, _impl_.export_handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CloseExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CountRedoRecordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CountRedoRecordsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::CountRedoRecordsResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportRequest, _impl_.csv_column_list_),
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextRequest, _impl_.export_handle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdRequest, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _impl_.entity_ids_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _impl_.max_degrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _impl_.build_out_degrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _impl_.build_out_max_entities_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _impl_.record_keys_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _impl_.max_degrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _impl_.build_out_degrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _impl_.build_out_max_entities_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _impl_.start_entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _impl_.end_entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _impl_.max_degrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _impl_.avoid_entity_ids_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _impl_.required_data_sources_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.start_data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.start_record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.end_data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.end_record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.max_degrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.avoid_record_keys_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.required_data_sources_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetActiveConfigIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetActiveConfigIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetActiveConfigIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdRequest, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRedoRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRedoRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRedoRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetStatsResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdRequest, _impl_.record_keys_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdRequest, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordRequest, _impl_.record_definition_),
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PrimeEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PrimeEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordRequest, _impl_.redo_record_),
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityRequest, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReinitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::ReinitializeRequest, _impl_.config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReinitializeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, _impl_.attributes_),
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, _impl_.search_profile_),
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportRequest, _impl_.csv_column_list_),
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, _impl_.entity_id_1_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, _impl_.entity_id_2_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, _impl_.data_source_code_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, _impl_.record_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _impl_.data_source_code_1_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _impl_.record_id_1_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _impl_.data_source_code_2_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _impl_.record_id_2_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchRequest, _impl_.attributes_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchRequest, _impl_.entity_id_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchRequest, _impl_.search_profile_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchRequest, _impl_.flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szengine::WhySearchResponse, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::szengine::AddRecordRequest)},
  { 10, -1, -1, sizeof(::szengine::AddRecordResponse)},
  { 17, -1, -1, sizeof(::szengine::CloseExportRequest)},
  { 24, -1, -1, sizeof(::szengine::CloseExportResponse)},
  { 30, -1, -1, sizeof(::szengine::CountRedoRecordsRequest)},
  { 36, -1, -1, sizeof(::szengine::CountRedoRecordsResponse)},
  { 43, -1, -1, sizeof(::szengine::DeleteRecordRequest)},
  { 52, -1, -1, sizeof(::szengine::DeleteRecordResponse)},
  { 59, -1, -1, sizeof(::szengine::ExportCsvEntityReportRequest)},
  { 67, -1, -1, sizeof(::szengine::ExportCsvEntityReportResponse)},
  { 74, -1, -1, sizeof(::szengine::ExportJsonEntityReportRequest)},
  { 81, -1, -1, sizeof(::szengine::ExportJsonEntityReportResponse)},
  { 88, -1, -1, sizeof(::szengine::FetchNextRequest)},
  { 95, -1, -1, sizeof(::szengine::FetchNextResponse)},
  { 102, -1, -1, sizeof(::szengine::FindInterestingEntitiesByEntityIdRequest)},
  { 110, -1, -1, sizeof(::szengine::FindInterestingEntitiesByEntityIdResponse)},
  { 117, -1, -1, sizeof(::szengine::FindInterestingEntitiesByRecordIdRequest)},
  { 126, -1, -1, sizeof(::szengine::FindInterestingEntitiesByRecordIdResponse)},
  { 133, -1, -1, sizeof(::szengine::FindNetworkByEntityIdRequest)},
  { 144, -1, -1, sizeof(::szengine::FindNetworkByEntityIdResponse)},
  { 151, -1, -1, sizeof(::szengine::FindNetworkByRecordIdRequest)},
  { 162, -1, -1, sizeof(::szengine::FindNetworkByRecordIdResponse)},
  { 169, -1, -1, sizeof(::szengine::FindPathByEntityIdRequest)},
  { 181, -1, -1, sizeof(::szengine::FindPathByEntityIdResponse)},
  { 188, -1, -1, sizeof(::szengine::FindPathByRecordIdRequest)},
  { 202, -1, -1, sizeof(::szengine::FindPathByRecordIdResponse)},
  { 209, -1, -1, sizeof(::szengine::GetActiveConfigIdRequest)},
  { 215, -1, -1, sizeof(::szengine::GetActiveConfigIdResponse)},
  { 222, -1, -1, sizeof(::szengine::GetEntityByEntityIdRequest)},
  { 230, -1, -1, sizeof(::szengine::GetEntityByEntityIdResponse)},
  { 237, -1, -1, sizeof(::szengine::GetEntityByRecordIdRequest)},
  { 246, -1, -1, sizeof(::szengine::GetEntityByRecordIdResponse)},
  { 253, -1, -1, sizeof(::szengine::GetRecordRequest)},
  { 262, -1, -1, sizeof(::szengine::GetRecordResponse)},
  { 269, -1, -1, sizeof(::szengine::GetRedoRecordRequest)},
  { 275, -1, -1, sizeof(::szengine::GetRedoRecordResponse)},
  { 282, -1, -1, sizeof(::szengine::GetStatsRequest)},
  { 288, -1, -1, sizeof(::szengine::GetStatsResponse)},
  { 295, -1, -1, sizeof(::szengine::GetVirtualEntityByRecordIdRequest)},
  { 303, -1, -1, sizeof(::szengine::GetVirtualEntityByRecordIdResponse)},
  { 310, -1, -1, sizeof(::szengine::HowEntityByEntityIdRequest)},
  { 318, -1, -1, sizeof(::szengine::HowEntityByEntityIdResponse)},
  { 325, -1, -1, sizeof(::szengine::PreprocessRecordRequest)},
  { 333, -1, -1, sizeof(::szengine::PreprocessRecordResponse)},
  { 340, -1, -1, sizeof(::szengine::PrimeEngineRequest)},
  { 346, -1, -1, sizeof(::szengine::PrimeEngineResponse)},
  { 352, -1, -1, sizeof(::szengine::ProcessRedoRecordRequest)},
  { 360, -1, -1, sizeof(::szengine::ProcessRedoRecordResponse)},
  { 367, -1, -1, sizeof(::szengine::ReevaluateEntityRequest)},
  { 375, -1, -1, sizeof(::szengine::ReevaluateEntityResponse)},
  { 382, -1, -1, sizeof(::szengine::ReevaluateRecordRequest)},
  { 391, -1, -1, sizeof(::szengine::ReevaluateRecordResponse)},
  { 398, -1, -1, sizeof(::szengine::ReinitializeRequest)},
  { 405, -1, -1, sizeof(::szengine::ReinitializeResponse)},
  { 411, -1, -1, sizeof(::szengine::SearchByAttributesRequest)},
  { 420, -1, -1, sizeof(::szengine::SearchByAttributesResponse)},
  { 427, -1, -1, sizeof(::szengine::StreamExportCsvEntityReportRequest)},
  { 435, -1, -1, sizeof(::szengine::StreamExportCsvEntityReportResponse)},
  { 442, -1, -1, sizeof(::szengine::StreamExportJsonEntityReportRequest)},
  { 449, -1, -1, sizeof(::szengine::StreamExportJsonEntityReportResponse)},
  { 456, -1, -1, sizeof(::szengine::WhyEntitiesRequest)},
  { 465, -1, -1, sizeof(::szengine::WhyEntitiesResponse)},
  { 472, -1, -1, sizeof(::szengine::WhyRecordInEntityRequest)},
  { 481, -1, -1, sizeof(::szengine::WhyRecordInEntityResponse)},
  { 488, -1, -1, sizeof(::szengine::WhyRecordsRequest)},
  { 499, -1, -1, sizeof(::szengine::WhyRecordsResponse)},
  { 506, -1, -1, sizeof(::szengine::WhySearchRequest)},
  { 516, -1, -1, sizeof(::szengine::WhySearchResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::szengine::_AddRecordRequest_default_instance_._instance,
  &::szengine::_AddRecordResponse_default_instance_._instance,
  &::szengine::_CloseExportRequest_default_instance_._instance,
  &::szengine::_CloseExportResponse_default_instance_._instance,
  &::szengine::_CountRedoRecordsRequest_default_instance_._instance,
  &::szengine::_CountRedoRecordsResponse_default_instance_._instance,
  &::szengine::_DeleteRecordRequest_default_instance_._instance,
  &::szengine::_DeleteRecordResponse_default_instance_._instance,
  &::szengine::_ExportCsvEntityReportRequest_default_instance_._instance,
  &::szengine::_ExportCsvEntityReportResponse_default_instance_._instance,
  &::szengine::_ExportJsonEntityReportRequest_default_instance_._instance,
  &::szengine::_ExportJsonEntityReportResponse_default_instance_._instance,
  &::szengine::_FetchNextRequest_default_instance_._instance,
  &::szengine::_FetchNextResponse_default_instance_._instance,
  &::szengine::_FindInterestingEntitiesByEntityIdRequest_default_instance_._instance,
  &::szengine::_FindInterestingEntitiesByEntityIdResponse_default_instance_._instance,
  &::szengine::_FindInterestingEntitiesByRecordIdRequest_default_instance_._instance,
  &::szengine::_FindInterestingEntitiesByRecordIdResponse_default_instance_._instance,
  &::szengine::_FindNetworkByEntityIdRequest_default_instance_._instance,
  &::szengine::_FindNetworkByEntityIdResponse_default_instance_._instance,
  &::szengine::_FindNetworkByRecordIdRequest_default_instance_._instance,
  &::szengine::_FindNetworkByRecordIdResponse_default_instance_._instance,
  &::szengine::_FindPathByEntityIdRequest_default_instance_._instance,
  &::szengine::_FindPathByEntityIdResponse_default_instance_._instance,
  &::szengine::_FindPathByRecordIdRequest_default_instance_._instance,
  &::szengine::_FindPathByRecordIdResponse_default_instance_._instance,
  &::szengine::_GetActiveConfigIdRequest_default_instance_._instance,
  &::szengine::_GetActiveConfigIdResponse_default_instance_._instance,
  &::szengine::_GetEntityByEntityIdRequest_default_instance_._instance,
  &::szengine::_GetEntityByEntityIdResponse_default_instance_._instance,
  &::szengine::_GetEntityByRecordIdRequest_default_instance_._instance,
  &::szengine::_GetEntityByRecordIdResponse_default_instance_._instance,
  &::szengine::_GetRecordRequest_default_instance_._instance,
  &::szengine::_GetRecordResponse_default_instance_._instance,
  &::szengine::_GetRedoRecordRequest_default_instance_._instance,
  &::szengine::_GetRedoRecordResponse_default_instance_._instance,
  &::szengine::_GetStatsRequest_default_instance_._instance,
  &::szengine::_GetStatsResponse_default_instance_._instance,
  &::szengine::_GetVirtualEntityByRecordIdRequest_default_instance_._instance,
  &::szengine::_GetVirtualEntityByRecordIdResponse_default_instance_._instance,
  &::szengine::_HowEntityByEntityIdRequest_default_instance_._instance,
  &::szengine::_HowEntityByEntityIdResponse_default_instance_._instance,
  &::szengine::_PreprocessRecordRequest_default_instance_._instance,
  &::szengine::_PreprocessRecordResponse_default_instance_._instance,
  &::szengine::_PrimeEngineRequest_default_instance_._instance,
  &::szengine::_PrimeEngineResponse_default_instance_._instance,
  &::szengine::_ProcessRedoRecordRequest_default_instance_._instance,
  &::szengine::_ProcessRedoRecordResponse_default_instance_._instance,
  &::szengine::_ReevaluateEntityRequest_default_instance_._instance,
  &::szengine::_ReevaluateEntityResponse_default_instance_._instance,
  &::szengine::_ReevaluateRecordRequest_default_instance_._instance,
  &::szengine::_ReevaluateRecordResponse_default_instance_._instance,
  &::szengine::_ReinitializeRequest_default_instance_._instance,
  &::szengine::_ReinitializeResponse_default_instance_._instance,
  &::szengine::_SearchByAttributesRequest_default_instance_._instance,
  &::szengine::_SearchByAttributesResponse_default_instance_._instance,
  &::szengine::_StreamExportCsvEntityReportRequest_default_instance_._instance,
  &::szengine::_StreamExportCsvEntityReportResponse_default_instance_._instance,
  &::szengine::_StreamExportJsonEntityReportRequest_default_instance_._instance,
  &::szengine::_StreamExportJsonEntityReportResponse_default_instance_._instance,
  &::szengine::_WhyEntitiesRequest_default_instance_._instance,
  &::szengine::_WhyEntitiesResponse_default_instance_._instance,
  &::szengine::_WhyRecordInEntityRequest_default_instance_._instance,
  &::szengine::_WhyRecordInEntityResponse_default_instance_._instance,
  &::szengine::_WhyRecordsRequest_default_instance_._instance,
  &::szengine::_WhyRecordsResponse_default_instance_._instance,
  &::szengine::_WhySearchRequest_default_instance_._instance,
  &::szengine::_WhySearchResponse_default_instance_._instance,
};

const char descriptor_table_protodef_szengine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016szengine.proto\022\010szengine\"i\n\020AddRecordR"
  "equest\022\030\n\020data_source_code\030\001 \001(\t\022\021\n\treco"
  "rd_id\030\002 \001(\t\022\031\n\021record_definition\030\003 \001(\t\022\r"
  "\n\005flags\030\004 \001(\003\"#\n\021AddRecordResponse\022\016\n\006re"
  "sult\030\001 \001(\t\"+\n\022CloseExportRequest\022\025\n\rexpo"
  "rt_handle\030\001 \001(\003\"\025\n\023CloseExportResponse\"\031"
  "\n\027CountRedoRecordsRequest\"*\n\030CountRedoRe"
  "cordsResponse\022\016\n\006result\030\001 \001(\003\"Q\n\023DeleteR"
  "ecordRequest\022\030\n\020data_source_code\030\001 \001(\t\022\021"
  "\n\trecord_id\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"&\n\024Dele"
  "teRecordResponse\022\016\n\006result\030\001 \001(\t\"F\n\034Expo"
  "rtCsvEntityReportRequest\022\027\n\017csv_column_l"
  "ist\030\001 \001(\t\022\r\n\005flags\030\002 \001(\003\"/\n\035ExportCsvEnt"
  "ityReportResponse\022\016\n\006result\030\001 \001(\003\".\n\035Exp"
  "ortJsonEntityReportRequest\022\r\n\005flags\030\001 \001("
  "\003\"0\n\036ExportJsonEntityReportResponse\022\016\n\006r"
  "esult\030\001 \001(\003\")\n\020FetchNextRequest\022\025\n\rexpor"
  "t_handle\030\001 \001(\003\"#\n\021FetchNextResponse\022\016\n\006r"
  "esult\030\001 \001(\t\"L\n(FindInterestingEntitiesBy"
  "EntityIdRequest\022\021\n\tentity_id\030\001 \001(\003\022\r\n\005fl"
  "ags\030\002 \001(\003\";\n)FindInterestingEntitiesByEn"
  "tityIdResponse\022\016\n\006result\030\001 \001(\t\"f\n(FindIn"
  "terestingEntitiesByRecordIdRequest\022\030\n\020da"
  "ta_source_code\030\001 \001(\t\022\021\n\trecord_id\030\002 \001(\t\022"
  "\r\n\005flags\030\003 \001(\003\";\n)FindInterestingEntitie"
  "sByRecordIdResponse\022\016\n\006result\030\001 \001(\t\"\221\001\n\034"
  "FindNetworkByEntityIdRequest\022\022\n\nentity_i"
  "ds\030\001 \001(\t\022\023\n\013max_degrees\030\002 \001(\003\022\031\n\021build_o"
  "ut_degrees\030\003 \001(\003\022\036\n\026build_out_max_entiti"
  "es\030\004 \001(\003\022\r\n\005flags\030\005 \001(\003\"/\n\035FindNetworkBy"
  "EntityIdResponse\022\016\n\006result\030\001 \001(\t\"\222\001\n\034Fin"
  "dNetworkByRecordIdRequest\022\023\n\013record_keys"
  "\030\001 \001(\t\022\023\n\013max_degrees\030\002 \001(\003\022\031\n\021build_out"
  "_degrees\030\003 \001(\003\022\036\n\026build_out_max_entities"
  "\030\004 \001(\003\022\r\n\005flags\030\005 \001(\003\"/\n\035FindNetworkByRe"
  "cordIdResponse\022\016\n\006result\030\001 \001(\t\"\250\001\n\031FindP"
  "athByEntityIdRequest\022\027\n\017start_entity_id\030"
  "\001 \001(\003\022\025\n\rend_entity_id\030\002 \001(\003\022\023\n\013max_degr"
  "ees\030\003 \001(\003\022\030\n\020avoid_entity_ids\030\004 \001(\t\022\035\n\025r"
  "equired_data_sources\030\005 \001(\t\022\r\n\005flags\030\006 \001("
  "\003\",\n\032FindPathByEntityIdResponse\022\016\n\006resul"
  "t\030\001 \001(\t\"\347\001\n\031FindPathByRecordIdRequest\022\036\n"
  "\026start_data_source_code\030\001 \001(\t\022\027\n\017start_r"
  "ecord_id\030\002 \001(\t\022\034\n\024end_data_source_code\030\003"
  " \001(\t\022\025\n\rend_record_id\030\004 \001(\t\022\023\n\013max_degre"
  "es\030\005 \001(\003\022\031\n\021avoid_record_keys\030\006 \001(\t\022\035\n\025r"
  "equired_data_sources\030\007 \001(\t\022\r\n\005flags\030\010 \001("
  "\003\",\n\032FindPathByRecordIdResponse\022\016\n\006resul"
  "t\030\001 \001(\t\"\032\n\030GetActiveConfigIdRequest\"+\n\031G"
  "etActiveConfigIdResponse\022\016\n\006result\030\001 \001(\003"
  "\">\n\032GetEntityByEntityIdRequest\022\021\n\tentity"
  "_id\030\001 \001(\003\022\r\n\005flags\030\002 \001(\003\"-\n\033GetEntityByE"
  "ntityIdResponse\022\016\n\006result\030\001 \001(\t\"X\n\032GetEn"
  "tityByRecordIdRequest\022\030\n\020data_source_cod"
  "e\030\001 \001(\t\022\021\n\trecord_id\030\002 \001(\t\022\r\n\005flags\030\003 \001("
  "\003\"-\n\033GetEntityByRecordIdResponse\022\016\n\006resu"
  "lt\030\001 \001(\t\"N\n\020GetRecordRequest\022\030\n\020data_sou"
  "rce_code\030\001 \001(\t\022\021\n\trecord_id\030\002 \001(\t\022\r\n\005fla"
  "gs\030\003 \001(\003\"#\n\021GetRecordResponse\022\016\n\006result\030"
  "\001 \001(\t\"\026\n\024GetRedoRecordRequest\"\'\n\025GetRedo"
  "RecordResponse\022\016\n\006result\030\001 \001(\t\"\021\n\017GetSta"
  "tsRequest\"\"\n\020GetStatsResponse\022\016\n\006result\030"
  "\001 \001(\t\"G\n!GetVirtualEntityByRecordIdReque"
  "st\022\023\n\013record_keys\030\001 \001(\t\022\r\n\005flags\030\002 \001(\003\"4"
  "\n\"GetVirtualEntityByRecordIdResponse\022\016\n\006"
  "result\030\001 \001(\t\">\n\032HowEntityByEntityIdReque"
  "st\022\021\n\tentity_id\030\001 \001(\003\022\r\n\005flags\030\002 \001(\003\"-\n\033"
  "HowEntityByEntityIdResponse\022\016\n\006result\030\001 "
  "\001(\t\"C\n\027PreprocessRecordRequest\022\031\n\021record"
  "_definition\030\001 \001(\t\022\r\n\005flags\030\002 \001(\003\"*\n\030Prep"
  "rocessRecordResponse\022\016\n\006result\030\001 \001(\t\"\024\n\022"
  "PrimeEngineRequest\"\025\n\023PrimeEngineRespons"
  "e\">\n\030ProcessRedoRecordRequest\022\023\n\013redo_re"
  "cord\030\001 \001(\t\022\r\n\005flags\030\002 \001(\003\"+\n\031ProcessRedo"
  "RecordResponse\022\016\n\006result\030\001 \001(\t\";\n\027Reeval"
  "uateEntityRequest\022\021\n\tentity_id\030\001 \001(\003\022\r\n\005"
  "flags\030\002 \001(\003\"*\n\030ReevaluateEntityResponse\022"
  "\016\n\006result\030\001 \001(\t\"U\n\027ReevaluateRecordReque"
  "st\022\030\n\020data_source_code\030\001 \001(\t\022\021\n\trecord_i"
  "d\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"*\n\030ReevaluateReco"
  "rdResponse\022\016\n\006result\030\001 \001(\t\"(\n\023Reinitiali"
  "zeRequest\022\021\n\tconfig_id\030\001 \001(\003\"\026\n\024Reinitia"
  "lizeResponse\"V\n\031SearchByAttributesReques"
  "t\022\022\n\nattributes\030\001 \001(\t\022\026\n\016search_profile\030"
  "\002 \001(\t\022\r\n\005flags\030\003 \001(\003\",\n\032SearchByAttribut"
  "esResponse\022\016\n\006result\030\001 \001(\t\"L\n\"StreamExpo"
  "rtCsvEntityReportRequest\022\027\n\017csv_column_l"
  "ist\030\001 \001(\t\022\r\n\005flags\030\002 \001(\003\"5\n#StreamExport"
  "CsvEntityReportResponse\022\016\n\006result\030\001 \001(\t\""
  "4\n#StreamExportJsonEntityReportRequest\022\r"
  "\n\005flags\030\001 \001(\003\"6\n$StreamExportJsonEntityR"
  "eportResponse\022\016\n\006result\030\001 \001(\t\"M\n\022WhyEnti"
  "tiesRequest\022\023\n\013entity_id_1\030\001 \001(\003\022\023\n\013enti"
  "ty_id_2\030\002 \001(\003\022\r\n\005flags\030\003 \001(\003\"%\n\023WhyEntit"
  "iesResponse\022\016\n\006result\030\001 \001(\t\"V\n\030WhyRecord"
  "InEntityRequest\022\030\n\020data_source_code\030\001 \001("
  "\t\022\021\n\trecord_id\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"+\n\031W"
  "hyRecordInEntityResponse\022\016\n\006result\030\001 \001(\t"
  "\"\204\001\n\021WhyRecordsRequest\022\032\n\022data_source_co"
  "de_1\030\001 \001(\t\022\023\n\013record_id_1\030\002 \001(\t\022\032\n\022data_"
  "source_code_2\030\003 \001(\t\022\023\n\013record_id_2\030\004 \001(\t"
  "\022\r\n\005flags\030\005 \001(\003\"$\n\022WhyRecordsResponse\022\016\n"
  "\006result\030\001 \001(\t\"`\n\020WhySearchRequest\022\022\n\natt"
  "ributes\030\001 \001(\t\022\021\n\tentity_id\030\002 \001(\003\022\026\n\016sear"
  "ch_profile\030\003 \001(\t\022\r\n\005flags\030\004 \001(\003\"#\n\021WhySe"
  "archResponse\022\016\n\006result\030\001 \001(\t2\335\031\n\010SzEngin"
  "e\022F\n\tAddRecord\022\032.szengine.AddRecordReque"
  "st\032\033.szengine.AddRecordResponse\"\000\022L\n\013Clo"
  "seExport\022\034.szengine.CloseExportRequest\032\035"
  ".szengine.CloseExportResponse\"\000\022[\n\020Count"
  "RedoRecords\022!.szengine.CountRedoRecordsR"
  "equest\032\".szengine.CountRedoRecordsRespon"
  "se\"\000\022O\n\014DeleteRecord\022\035.szengine.DeleteRe"
  "cordRequest\032\036.szengine.DeleteRecordRespo"
  "nse\"\000\022j\n\025ExportCsvEntityReport\022&.szengin"
  "e.ExportCsvEntityReportRequest\032\'.szengin"
  "e.ExportCsvEntityReportResponse\"\000\022m\n\026Exp"
  "ortJsonEntityReport\022\'.szengine.ExportJso"
  "nEntityReportRequest\032(.szengine.ExportJs"
  "onEntityReportResponse\"\000\022F\n\tFetchNext\022\032."
  "szengine.FetchNextRequest\032\033.szengine.Fet"
  "chNextResponse\"\000\022\216\001\n!FindInterestingEnti"
  "tiesByEntityId\0222.szengine.FindInterestin"
  "gEntitiesByEntityIdRequest\0323.szengine.Fi"
  "ndInterestingEntitiesByEntityIdResponse\""
  "\000\022\216\001\n!FindInterestingEntitiesByRecordId\022"
  "2.szengine.FindInterestingEntitiesByReco"
  "rdIdRequest\0323.szengine.FindInterestingEn"
  "titiesByRecordIdResponse\"\000\022j\n\025FindNetwor"
  "kByEntityId\022&.szengine.FindNetworkByEnti"
  "tyIdRequest\032\'.szengine.FindNetworkByEnti"
  "tyIdResponse\"\000\022j\n\025FindNetworkByRecordId\022"
  "&.szengine.FindNetworkByRecordIdRequest\032"
  "\'.szengine.FindNetworkByRecordIdResponse"
  "\"\000\022a\n\022FindPathByEntityId\022#.szengine.Find"
  "PathByEntityIdRequest\032$.szengine.FindPat"
  "hByEntityIdResponse\"\000\022a\n\022FindPathByRecor"
  "dId\022#.szengine.FindPathByRecordIdRequest"
  "\032$.szengine.FindPathByRecordIdResponse\"\000"
  "\022^\n\021GetActiveConfigId\022\".szengine.GetActi"
  "veConfigIdRequest\032#.szengine.GetActiveCo"
  "nfigIdResponse\"\000\022d\n\023GetEntityByEntityId\022"
  "$.szengine.GetEntityByEntityIdRequest\032%."
  "szengine.GetEntityByEntityIdResponse\"\000\022d"
  "\n\023GetEntityByRecordId\022$.szengine.GetEnti"
  "tyByRecordIdRequest\032%.szengine.GetEntity"
  "ByRecordIdResponse\"\000\022F\n\tGetRecord\022\032.szen"
  "gine.GetRecordRequest\032\033.szengine.GetReco"
  "rdResponse\"\000\022R\n\rGetRedoRecord\022\036.szengine"
  ".GetRedoRecordRequest\032\037.szengine.GetRedo"
  "RecordResponse\"\000\022C\n\010GetStats\022\031.szengine."
  "GetStatsRequest\032\032.szengine.GetStatsRespo"
  "nse\"\000\022y\n\032GetVirtualEntityByRecordId\022+.sz"
  "engine.GetVirtualEntityByRecordIdRequest"
  "\032,.szengine.GetVirtualEntityByRecordIdRe"
  "sponse\"\000\022d\n\023HowEntityByEntityId\022$.szengi"
  "ne.HowEntityByEntityIdRequest\032%.szengine"
  ".HowEntityByEntityIdResponse\"\000\022[\n\020Prepro"
  "cessRecord\022!.szengine.PreprocessRecordRe"
  "quest\032\".szengine.PreprocessRecordRespons"
  "e\"\000\022L\n\013PrimeEngine\022\034.szengine.PrimeEngin"
  "eRequest\032\035.szengine.PrimeEngineResponse\""
  "\000\022^\n\021ProcessRedoRecord\022\".szengine.Proces"
  "sRedoRecordRequest\032#.szengine.ProcessRed"
  "oRecordResponse\"\000\022[\n\020ReevaluateEntity\022!."
  "szengine.ReevaluateEntityRequest\032\".szeng"
  "ine.ReevaluateEntityResponse\"\000\022[\n\020Reeval"
  "uateRecord\022!.szengine.ReevaluateRecordRe"
  "quest\032\".szengine.ReevaluateRecordRespons"
  "e\"\000\022O\n\014Reinitialize\022\035.szengine.Reinitial"
  "izeRequest\032\036.szengine.ReinitializeRespon"
  "se\"\000\022a\n\022SearchByAttributes\022#.szengine.Se"
  "archByAttributesRequest\032$.szengine.Searc"
  "hByAttributesResponse\"\000\022~\n\033StreamExportC"
  "svEntityReport\022,.szengine.StreamExportCs"
  "vEntityReportRequest\032-.szengine.StreamEx"
  "portCsvEntityReportResponse\"\0000\001\022\201\001\n\034Stre"
  "amExportJsonEntityReport\022-.szengine.Stre"
  "amExportJsonEntityReportRequest\032..szengi"
  "ne.StreamExportJsonEntityReportResponse\""
  "\0000\001\022L\n\013WhyEntities\022\034.szengine.WhyEntitie"
  "sRequest\032\035.szengine.WhyEntitiesResponse\""
  "\000\022^\n\021WhyRecordInEntity\022\".szengine.WhyRec"
  "ordInEntityRequest\032#.szengine.WhyRecordI"
  "nEntityResponse\"\000\022I\n\nWhyRecords\022\033.szengi"
  "ne.WhyRecordsRequest\032\034.szengine.WhyRecor"
  "dsResponse\"\000\022F\n\tWhySearch\022\032.szengine.Why"
  "SearchRequest\032\033.szengine.WhySearchRespon"
  "se\"\000BX\n\024com.senzing.sdk.grpcB\rSzEnginePr"
  "otoZ1github.com/senzing-garage/sz-sdk-go"
  "-grpc/szengineb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_szengine_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_szengine_2eproto = {
    false, false, 7622, descriptor_table_protodef_szengine_2eproto,
    "szengine.proto",
    &descriptor_table_szengine_2eproto_once, nullptr, 0, 68,
    schemas, file_default_instances, TableStruct_szengine_2eproto::offsets,
    file_level_metadata_szengine_2eproto, file_level_enum_descriptors_szengine_2eproto,
    file_level_service_descriptors_szengine_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_szengine_2eproto_getter() {
  return &descriptor_table_szengine_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_szengine_2eproto(&descriptor_table_szengine_2eproto);
namespace szengine {

// ===================================================================

class AddRecordRequest::_Internal {
 public:
};

AddRecordRequest::AddRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.AddRecordRequest)
}
AddRecordRequest::AddRecordRequest(const AddRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddRecordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.record_definition_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_definition().empty()) {
    _this->_impl_.record_definition_.Set(from._internal_record_definition(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.AddRecordRequest)
}

inline void AddRecordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.record_definition_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddRecordRequest::~AddRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.AddRecordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
  _impl_.record_definition_.Destroy();
}

void AddRecordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.AddRecordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.record_definition_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRecordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.AddRecordRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.AddRecordRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // string record_definition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_record_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.AddRecordRequest.record_definition"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddRecordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.AddRecordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // string record_definition = 3;
  if (!this->_internal_record_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_definition().data(), static_cast<int>(this->_internal_record_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordRequest.record_definition");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_record_definition(), target);
  }

  // int64 flags = 4;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.AddRecordRequest)
  return target;
}

size_t AddRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.AddRecordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // string record_definition = 3;
  if (!this->_internal_record_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_definition());
  }

  // int64 flags = 4;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddRecordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddRecordRequest::GetClassData() const { return &_class_data_; }


void AddRecordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddRecordRequest*>(&to_msg);
  auto& from = static_cast<const AddRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.AddRecordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (!from._internal_record_definition().empty()) {
    _this->_internal_set_record_definition(from._internal_record_definition());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddRecordRequest::CopyFrom(const AddRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.AddRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRecordRequest::IsInitialized() const {
  return true;
}

void AddRecordRequest::InternalSwap(AddRecordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_definition_, lhs_arena,
      &other->_impl_.record_definition_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[0]);
}

// ===================================================================

class AddRecordResponse::_Internal {
 public:
};

AddRecordResponse::AddRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.AddRecordResponse)
}
AddRecordResponse::AddRecordResponse(const AddRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  AddRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.AddRecordResponse)
}

inline void AddRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

AddRecordResponse::~AddRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.AddRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void AddRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void AddRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void AddRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.AddRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.AddRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* AddRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.AddRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.AddRecordResponse)
  return target;
}

size_t AddRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.AddRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData AddRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    AddRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*AddRecordResponse::GetClassData() const { return &_class_data_; }


void AddRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<AddRecordResponse*>(&to_msg);
  auto& from = static_cast<const AddRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.AddRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void AddRecordResponse::CopyFrom(const AddRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.AddRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRecordResponse::IsInitialized() const {
  return true;
}

void AddRecordResponse::InternalSwap(AddRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[1]);
}

// ===================================================================

class CloseExportRequest::_Internal {
 public:
};

CloseExportRequest::CloseExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.CloseExportRequest)
}
CloseExportRequest::CloseExportRequest(const CloseExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CloseExportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.export_handle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.export_handle_ = from._impl_.export_handle_;
  // @@protoc_insertion_point(copy_constructor:szengine.CloseExportRequest)
}

inline void CloseExportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.export_handle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CloseExportRequest::~CloseExportRequest() {
  // @@protoc_insertion_point(destructor:szengine.CloseExportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CloseExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CloseExportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CloseExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.CloseExportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.export_handle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloseExportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 export_handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.export_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CloseExportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.CloseExportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 export_handle = 1;
  if (this->_internal_export_handle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_export_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.CloseExportRequest)
  return target;
}

size_t CloseExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.CloseExportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 export_handle = 1;
  if (this->_internal_export_handle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_export_handle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseExportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CloseExportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseExportRequest::GetClassData() const { return &_class_data_; }


void CloseExportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CloseExportRequest*>(&to_msg);
  auto& from = static_cast<const CloseExportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.CloseExportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_export_handle() != 0) {
    _this->_internal_set_export_handle(from._internal_export_handle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CloseExportRequest::CopyFrom(const CloseExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.CloseExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseExportRequest::IsInitialized() const {
  return true;
}

void CloseExportRequest::InternalSwap(CloseExportRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.export_handle_, other->_impl_.export_handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseExportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[2]);
}

// ===================================================================

class CloseExportResponse::_Internal {
 public:
};

CloseExportResponse::CloseExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.CloseExportResponse)
}
CloseExportResponse::CloseExportResponse(const CloseExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CloseExportResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.CloseExportResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CloseExportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CloseExportResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CloseExportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[3]);
}

// ===================================================================

class CountRedoRecordsRequest::_Internal {
 public:
};

CountRedoRecordsRequest::CountRedoRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.CountRedoRecordsRequest)
}
CountRedoRecordsRequest::CountRedoRecordsRequest(const CountRedoRecordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  CountRedoRecordsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.CountRedoRecordsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CountRedoRecordsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CountRedoRecordsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata CountRedoRecordsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[4]);
}

// ===================================================================

class CountRedoRecordsResponse::_Internal {
 public:
};

CountRedoRecordsResponse::CountRedoRecordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.CountRedoRecordsResponse)
}
CountRedoRecordsResponse::CountRedoRecordsResponse(const CountRedoRecordsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CountRedoRecordsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.CountRedoRecordsResponse)
}

inline void CountRedoRecordsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CountRedoRecordsResponse::~CountRedoRecordsResponse() {
  // @@protoc_insertion_point(destructor:szengine.CountRedoRecordsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CountRedoRecordsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CountRedoRecordsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CountRedoRecordsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.CountRedoRecordsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CountRedoRecordsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CountRedoRecordsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.CountRedoRecordsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.CountRedoRecordsResponse)
  return target;
}

size_t CountRedoRecordsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.CountRedoRecordsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CountRedoRecordsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CountRedoRecordsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CountRedoRecordsResponse::GetClassData() const { return &_class_data_; }


void CountRedoRecordsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CountRedoRecordsResponse*>(&to_msg);
  auto& from = static_cast<const CountRedoRecordsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.CountRedoRecordsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CountRedoRecordsResponse::CopyFrom(const CountRedoRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.CountRedoRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountRedoRecordsResponse::IsInitialized() const {
  return true;
}

void CountRedoRecordsResponse::InternalSwap(CountRedoRecordsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CountRedoRecordsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[5]);
}

// ===================================================================

class DeleteRecordRequest::_Internal {
 public:
};

DeleteRecordRequest::DeleteRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.DeleteRecordRequest)
}
DeleteRecordRequest::DeleteRecordRequest(const DeleteRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteRecordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.DeleteRecordRequest)
}

inline void DeleteRecordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRecordRequest::~DeleteRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.DeleteRecordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
}

void DeleteRecordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.DeleteRecordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRecordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.DeleteRecordRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.DeleteRecordRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRecordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.DeleteRecordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.DeleteRecordRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.DeleteRecordRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.DeleteRecordRequest)
  return target;
}

size_t DeleteRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.DeleteRecordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteRecordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRecordRequest::GetClassData() const { return &_class_data_; }


void DeleteRecordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteRecordRequest*>(&to_msg);
  auto& from = static_cast<const DeleteRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.DeleteRecordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRecordRequest::CopyFrom(const DeleteRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.DeleteRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRecordRequest::IsInitialized() const {
  return true;
}

void DeleteRecordRequest::InternalSwap(DeleteRecordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[6]);
}

// ===================================================================

class DeleteRecordResponse::_Internal {
 public:
};

DeleteRecordResponse::DeleteRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.DeleteRecordResponse)
}
DeleteRecordResponse::DeleteRecordResponse(const DeleteRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.DeleteRecordResponse)
}

inline void DeleteRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteRecordResponse::~DeleteRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.DeleteRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void DeleteRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.DeleteRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.DeleteRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.DeleteRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.DeleteRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.DeleteRecordResponse)
  return target;
}

size_t DeleteRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.DeleteRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteRecordResponse::GetClassData() const { return &_class_data_; }


void DeleteRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteRecordResponse*>(&to_msg);
  auto& from = static_cast<const DeleteRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.DeleteRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteRecordResponse::CopyFrom(const DeleteRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.DeleteRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRecordResponse::IsInitialized() const {
  return true;
}

void DeleteRecordResponse::InternalSwap(DeleteRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[7]);
}

// ===================================================================

class ExportCsvEntityReportRequest::_Internal {
 public:
};

ExportCsvEntityReportRequest::ExportCsvEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportCsvEntityReportRequest)
}
ExportCsvEntityReportRequest::ExportCsvEntityReportRequest(const ExportCsvEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExportCsvEntityReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.csv_column_list_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.csv_column_list_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.csv_column_list_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_csv_column_list().empty()) {
    _this->_impl_.csv_column_list_.Set(from._internal_csv_column_list(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportCsvEntityReportRequest)
}

inline void ExportCsvEntityReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.csv_column_list_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.csv_column_list_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.csv_column_list_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ExportCsvEntityReportRequest::~ExportCsvEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.ExportCsvEntityReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExportCsvEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.csv_column_list_.Destroy();
}

void ExportCsvEntityReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExportCsvEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportCsvEntityReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.csv_column_list_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportCsvEntityReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string csv_column_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_csv_column_list();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ExportCsvEntityReportRequest.csv_column_list"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExportCsvEntityReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportCsvEntityReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string csv_column_list = 1;
  if (!this->_internal_csv_column_list().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_csv_column_list().data(), static_cast<int>(this->_internal_csv_column_list().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ExportCsvEntityReportRequest.csv_column_list");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_csv_column_list(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportCsvEntityReportRequest)
  return target;
}

size_t ExportCsvEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportCsvEntityReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string csv_column_list = 1;
  if (!this->_internal_csv_column_list().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_csv_column_list());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExportCsvEntityReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExportCsvEntityReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExportCsvEntityReportRequest::GetClassData() const { return &_class_data_; }


void ExportCsvEntityReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExportCsvEntityReportRequest*>(&to_msg);
  auto& from = static_cast<const ExportCsvEntityReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportCsvEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_csv_column_list().empty()) {
    _this->_internal_set_csv_column_list(from._internal_csv_column_list());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExportCsvEntityReportRequest::CopyFrom(const ExportCsvEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportCsvEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportCsvEntityReportRequest::IsInitialized() const {
  return true;
}

void ExportCsvEntityReportRequest::InternalSwap(ExportCsvEntityReportRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.csv_column_list_, lhs_arena,
      &other->_impl_.csv_column_list_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportCsvEntityReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[8]);
}

// ===================================================================

class ExportCsvEntityReportResponse::_Internal {
 public:
};

ExportCsvEntityReportResponse::ExportCsvEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportCsvEntityReportResponse)
}
ExportCsvEntityReportResponse::ExportCsvEntityReportResponse(const ExportCsvEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExportCsvEntityReportResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportCsvEntityReportResponse)
}

inline void ExportCsvEntityReportResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExportCsvEntityReportResponse::~ExportCsvEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.ExportCsvEntityReportResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExportCsvEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExportCsvEntityReportResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExportCsvEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportCsvEntityReportResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportCsvEntityReportResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExportCsvEntityReportResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportCsvEntityReportResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportCsvEntityReportResponse)
  return target;
}

size_t ExportCsvEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportCsvEntityReportResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExportCsvEntityReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExportCsvEntityReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExportCsvEntityReportResponse::GetClassData() const { return &_class_data_; }


void ExportCsvEntityReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExportCsvEntityReportResponse*>(&to_msg);
  auto& from = static_cast<const ExportCsvEntityReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportCsvEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExportCsvEntityReportResponse::CopyFrom(const ExportCsvEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportCsvEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportCsvEntityReportResponse::IsInitialized() const {
  return true;
}

void ExportCsvEntityReportResponse::InternalSwap(ExportCsvEntityReportResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportCsvEntityReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[9]);
}

// ===================================================================

class ExportJsonEntityReportRequest::_Internal {
 public:
};

ExportJsonEntityReportRequest::ExportJsonEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportJsonEntityReportRequest)
}
ExportJsonEntityReportRequest::ExportJsonEntityReportRequest(const ExportJsonEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExportJsonEntityReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportJsonEntityReportRequest)
}

inline void ExportJsonEntityReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExportJsonEntityReportRequest::~ExportJsonEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.ExportJsonEntityReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExportJsonEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExportJsonEntityReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExportJsonEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportJsonEntityReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportJsonEntityReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExportJsonEntityReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportJsonEntityReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportJsonEntityReportRequest)
  return target;
}

size_t ExportJsonEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportJsonEntityReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExportJsonEntityReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExportJsonEntityReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExportJsonEntityReportRequest::GetClassData() const { return &_class_data_; }


void ExportJsonEntityReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExportJsonEntityReportRequest*>(&to_msg);
  auto& from = static_cast<const ExportJsonEntityReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportJsonEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExportJsonEntityReportRequest::CopyFrom(const ExportJsonEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportJsonEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportJsonEntityReportRequest::IsInitialized() const {
  return true;
}

void ExportJsonEntityReportRequest::InternalSwap(ExportJsonEntityReportRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportJsonEntityReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[10]);
}

// ===================================================================

class ExportJsonEntityReportResponse::_Internal {
 public:
};

ExportJsonEntityReportResponse::ExportJsonEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportJsonEntityReportResponse)
}
ExportJsonEntityReportResponse::ExportJsonEntityReportResponse(const ExportJsonEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ExportJsonEntityReportResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportJsonEntityReportResponse)
}

inline void ExportJsonEntityReportResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ExportJsonEntityReportResponse::~ExportJsonEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.ExportJsonEntityReportResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ExportJsonEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ExportJsonEntityReportResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ExportJsonEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportJsonEntityReportResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportJsonEntityReportResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ExportJsonEntityReportResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportJsonEntityReportResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportJsonEntityReportResponse)
  return target;
}

size_t ExportJsonEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportJsonEntityReportResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ExportJsonEntityReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ExportJsonEntityReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ExportJsonEntityReportResponse::GetClassData() const { return &_class_data_; }


void ExportJsonEntityReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ExportJsonEntityReportResponse*>(&to_msg);
  auto& from = static_cast<const ExportJsonEntityReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportJsonEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ExportJsonEntityReportResponse::CopyFrom(const ExportJsonEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportJsonEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportJsonEntityReportResponse::IsInitialized() const {
  return true;
}

void ExportJsonEntityReportResponse::InternalSwap(ExportJsonEntityReportResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportJsonEntityReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[11]);
}

// ===================================================================

class FetchNextRequest::_Internal {
 public:
};

FetchNextRequest::FetchNextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FetchNextRequest)
}
FetchNextRequest::FetchNextRequest(const FetchNextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchNextRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.export_handle_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.export_handle_ = from._impl_.export_handle_;
  // @@protoc_insertion_point(copy_constructor:szengine.FetchNextRequest)
}

inline void FetchNextRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.export_handle_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FetchNextRequest::~FetchNextRequest() {
  // @@protoc_insertion_point(destructor:szengine.FetchNextRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchNextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FetchNextRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchNextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FetchNextRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.export_handle_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchNextRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 export_handle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.export_handle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchNextRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FetchNextRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 export_handle = 1;
  if (this->_internal_export_handle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_export_handle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FetchNextRequest)
  return target;
}

size_t FetchNextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FetchNextRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 export_handle = 1;
  if (this->_internal_export_handle() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_export_handle());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchNextRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchNextRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchNextRequest::GetClassData() const { return &_class_data_; }


void FetchNextRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchNextRequest*>(&to_msg);
  auto& from = static_cast<const FetchNextRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FetchNextRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_export_handle() != 0) {
    _this->_internal_set_export_handle(from._internal_export_handle());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchNextRequest::CopyFrom(const FetchNextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FetchNextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchNextRequest::IsInitialized() const {
  return true;
}

void FetchNextRequest::InternalSwap(FetchNextRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.export_handle_, other->_impl_.export_handle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchNextRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[12]);
}

// ===================================================================

class FetchNextResponse::_Internal {
 public:
};

FetchNextResponse::FetchNextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FetchNextResponse)
}
FetchNextResponse::FetchNextResponse(const FetchNextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FetchNextResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FetchNextResponse)
}

inline void FetchNextResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FetchNextResponse::~FetchNextResponse() {
  // @@protoc_insertion_point(destructor:szengine.FetchNextResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FetchNextResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FetchNextResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FetchNextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FetchNextResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchNextResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FetchNextResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FetchNextResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FetchNextResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FetchNextResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FetchNextResponse)
  return target;
}

size_t FetchNextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FetchNextResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FetchNextResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FetchNextResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FetchNextResponse::GetClassData() const { return &_class_data_; }


void FetchNextResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FetchNextResponse*>(&to_msg);
  auto& from = static_cast<const FetchNextResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FetchNextResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FetchNextResponse::CopyFrom(const FetchNextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FetchNextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchNextResponse::IsInitialized() const {
  return true;
}

void FetchNextResponse::InternalSwap(FetchNextResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchNextResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[13]);
}

// ===================================================================

class FindInterestingEntitiesByEntityIdRequest::_Internal {
 public:
};

FindInterestingEntitiesByEntityIdRequest::FindInterestingEntitiesByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByEntityIdRequest)
}
FindInterestingEntitiesByEntityIdRequest::FindInterestingEntitiesByEntityIdRequest(const FindInterestingEntitiesByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindInterestingEntitiesByEntityIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByEntityIdRequest)
}

inline void FindInterestingEntitiesByEntityIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

FindInterestingEntitiesByEntityIdRequest::~FindInterestingEntitiesByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByEntityIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindInterestingEntitiesByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void FindInterestingEntitiesByEntityIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindInterestingEntitiesByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByEntityIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindInterestingEntitiesByEntityIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByEntityIdRequest)
  return target;
}

size_t FindInterestingEntitiesByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindInterestingEntitiesByEntityIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindInterestingEntitiesByEntityIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindInterestingEntitiesByEntityIdRequest::GetClassData() const { return &_class_data_; }


void FindInterestingEntitiesByEntityIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindInterestingEntitiesByEntityIdRequest*>(&to_msg);
  auto& from = static_cast<const FindInterestingEntitiesByEntityIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindInterestingEntitiesByEntityIdRequest::CopyFrom(const FindInterestingEntitiesByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByEntityIdRequest::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByEntityIdRequest::InternalSwap(FindInterestingEntitiesByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindInterestingEntitiesByEntityIdRequest, _impl_.flags_)
      + sizeof(FindInterestingEntitiesByEntityIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(FindInterestingEntitiesByEntityIdRequest, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByEntityIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[14]);
}

// ===================================================================

class FindInterestingEntitiesByEntityIdResponse::_Internal {
 public:
};

FindInterestingEntitiesByEntityIdResponse::FindInterestingEntitiesByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByEntityIdResponse)
}
FindInterestingEntitiesByEntityIdResponse::FindInterestingEntitiesByEntityIdResponse(const FindInterestingEntitiesByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindInterestingEntitiesByEntityIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByEntityIdResponse)
}

inline void FindInterestingEntitiesByEntityIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindInterestingEntitiesByEntityIdResponse::~FindInterestingEntitiesByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByEntityIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindInterestingEntitiesByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FindInterestingEntitiesByEntityIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindInterestingEntitiesByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByEntityIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindInterestingEntitiesByEntityIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindInterestingEntitiesByEntityIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByEntityIdResponse)
  return target;
}

size_t FindInterestingEntitiesByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindInterestingEntitiesByEntityIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindInterestingEntitiesByEntityIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindInterestingEntitiesByEntityIdResponse::GetClassData() const { return &_class_data_; }


void FindInterestingEntitiesByEntityIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindInterestingEntitiesByEntityIdResponse*>(&to_msg);
  auto& from = static_cast<const FindInterestingEntitiesByEntityIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindInterestingEntitiesByEntityIdResponse::CopyFrom(const FindInterestingEntitiesByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByEntityIdResponse::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByEntityIdResponse::InternalSwap(FindInterestingEntitiesByEntityIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByEntityIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[15]);
}

// ===================================================================

class FindInterestingEntitiesByRecordIdRequest::_Internal {
 public:
};

FindInterestingEntitiesByRecordIdRequest::FindInterestingEntitiesByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByRecordIdRequest)
}
FindInterestingEntitiesByRecordIdRequest::FindInterestingEntitiesByRecordIdRequest(const FindInterestingEntitiesByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindInterestingEntitiesByRecordIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByRecordIdRequest)
}

inline void FindInterestingEntitiesByRecordIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindInterestingEntitiesByRecordIdRequest::~FindInterestingEntitiesByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByRecordIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindInterestingEntitiesByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
}

void FindInterestingEntitiesByRecordIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindInterestingEntitiesByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByRecordIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindInterestingEntitiesByRecordIdRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindInterestingEntitiesByRecordIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByRecordIdRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByRecordIdRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByRecordIdRequest)
  return target;
}

size_t FindInterestingEntitiesByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindInterestingEntitiesByRecordIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindInterestingEntitiesByRecordIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindInterestingEntitiesByRecordIdRequest::GetClassData() const { return &_class_data_; }


void FindInterestingEntitiesByRecordIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindInterestingEntitiesByRecordIdRequest*>(&to_msg);
  auto& from = static_cast<const FindInterestingEntitiesByRecordIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindInterestingEntitiesByRecordIdRequest::CopyFrom(const FindInterestingEntitiesByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByRecordIdRequest::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByRecordIdRequest::InternalSwap(FindInterestingEntitiesByRecordIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByRecordIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[16]);
}

// ===================================================================

class FindInterestingEntitiesByRecordIdResponse::_Internal {
 public:
};

FindInterestingEntitiesByRecordIdResponse::FindInterestingEntitiesByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByRecordIdResponse)
}
FindInterestingEntitiesByRecordIdResponse::FindInterestingEntitiesByRecordIdResponse(const FindInterestingEntitiesByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindInterestingEntitiesByRecordIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByRecordIdResponse)
}

inline void FindInterestingEntitiesByRecordIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindInterestingEntitiesByRecordIdResponse::~FindInterestingEntitiesByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByRecordIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindInterestingEntitiesByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FindInterestingEntitiesByRecordIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindInterestingEntitiesByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByRecordIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindInterestingEntitiesByRecordIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindInterestingEntitiesByRecordIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByRecordIdResponse)
  return target;
}

size_t FindInterestingEntitiesByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindInterestingEntitiesByRecordIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindInterestingEntitiesByRecordIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindInterestingEntitiesByRecordIdResponse::GetClassData() const { return &_class_data_; }


void FindInterestingEntitiesByRecordIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindInterestingEntitiesByRecordIdResponse*>(&to_msg);
  auto& from = static_cast<const FindInterestingEntitiesByRecordIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindInterestingEntitiesByRecordIdResponse::CopyFrom(const FindInterestingEntitiesByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByRecordIdResponse::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByRecordIdResponse::InternalSwap(FindInterestingEntitiesByRecordIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByRecordIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[17]);
}

// ===================================================================

class FindNetworkByEntityIdRequest::_Internal {
 public:
};

FindNetworkByEntityIdRequest::FindNetworkByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByEntityIdRequest)
}
FindNetworkByEntityIdRequest::FindNetworkByEntityIdRequest(const FindNetworkByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNetworkByEntityIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_ids_){}
    , decltype(_impl_.max_degrees_){}
    , decltype(_impl_.build_out_degrees_){}
    , decltype(_impl_.build_out_max_entities_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.entity_ids_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_ids_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_entity_ids().empty()) {
    _this->_impl_.entity_ids_.Set(from._internal_entity_ids(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.max_degrees_, &from._impl_.max_degrees_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.max_degrees_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByEntityIdRequest)
}

inline void FindNetworkByEntityIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_ids_){}
    , decltype(_impl_.max_degrees_){int64_t{0}}
    , decltype(_impl_.build_out_degrees_){int64_t{0}}
    , decltype(_impl_.build_out_max_entities_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.entity_ids_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.entity_ids_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindNetworkByEntityIdRequest::~FindNetworkByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByEntityIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNetworkByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.entity_ids_.Destroy();
}

void FindNetworkByEntityIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNetworkByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.entity_ids_.ClearToEmpty();
  ::memset(&_impl_.max_degrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.max_degrees_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByEntityIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string entity_ids = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_entity_ids();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindNetworkByEntityIdRequest.entity_ids"));
        } else
          goto handle_unusual;
        continue;
      // int64 max_degrees = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.max_degrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 build_out_degrees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.build_out_degrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 build_out_max_entities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.build_out_max_entities_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNetworkByEntityIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string entity_ids = 1;
  if (!this->_internal_entity_ids().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entity_ids().data(), static_cast<int>(this->_internal_entity_ids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByEntityIdRequest.entity_ids");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entity_ids(), target);
  }

  // int64 max_degrees = 2;
  if (this->_internal_max_degrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_max_degrees(), target);
  }

  // int64 build_out_degrees = 3;
  if (this->_internal_build_out_degrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_build_out_degrees(), target);
  }

  // int64 build_out_max_entities = 4;
  if (this->_internal_build_out_max_entities() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_build_out_max_entities(), target);
  }

  // int64 flags = 5;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByEntityIdRequest)
  return target;
}

size_t FindNetworkByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByEntityIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entity_ids = 1;
  if (!this->_internal_entity_ids().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entity_ids());
  }

  // int64 max_degrees = 2;
  if (this->_internal_max_degrees() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_max_degrees());
  }

  // int64 build_out_degrees = 3;
  if (this->_internal_build_out_degrees() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_build_out_degrees());
  }

  // int64 build_out_max_entities = 4;
  if (this->_internal_build_out_max_entities() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_build_out_max_entities());
  }

  // int64 flags = 5;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNetworkByEntityIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNetworkByEntityIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNetworkByEntityIdRequest::GetClassData() const { return &_class_data_; }


void FindNetworkByEntityIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNetworkByEntityIdRequest*>(&to_msg);
  auto& from = static_cast<const FindNetworkByEntityIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_entity_ids().empty()) {
    _this->_internal_set_entity_ids(from._internal_entity_ids());
  }
  if (from._internal_max_degrees() != 0) {
    _this->_internal_set_max_degrees(from._internal_max_degrees());
  }
  if (from._internal_build_out_degrees() != 0) {
    _this->_internal_set_build_out_degrees(from._internal_build_out_degrees());
  }
  if (from._internal_build_out_max_entities() != 0) {
    _this->_internal_set_build_out_max_entities(from._internal_build_out_max_entities());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNetworkByEntityIdRequest::CopyFrom(const FindNetworkByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByEntityIdRequest::IsInitialized() const {
  return true;
}

void FindNetworkByEntityIdRequest::InternalSwap(FindNetworkByEntityIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.entity_ids_, lhs_arena,
      &other->_impl_.entity_ids_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindNetworkByEntityIdRequest, _impl_.flags_)
      + sizeof(FindNetworkByEntityIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(FindNetworkByEntityIdRequest, _impl_.max_degrees_)>(
          reinterpret_cast<char*>(&_impl_.max_degrees_),
          reinterpret_cast<char*>(&other->_impl_.max_degrees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByEntityIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[18]);
}

// ===================================================================

class FindNetworkByEntityIdResponse::_Internal {
 public:
};

FindNetworkByEntityIdResponse::FindNetworkByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByEntityIdResponse)
}
FindNetworkByEntityIdResponse::FindNetworkByEntityIdResponse(const FindNetworkByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNetworkByEntityIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByEntityIdResponse)
}

inline void FindNetworkByEntityIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindNetworkByEntityIdResponse::~FindNetworkByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByEntityIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNetworkByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FindNetworkByEntityIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNetworkByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByEntityIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindNetworkByEntityIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNetworkByEntityIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByEntityIdResponse)
  return target;
}

size_t FindNetworkByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByEntityIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNetworkByEntityIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNetworkByEntityIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNetworkByEntityIdResponse::GetClassData() const { return &_class_data_; }


void FindNetworkByEntityIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNetworkByEntityIdResponse*>(&to_msg);
  auto& from = static_cast<const FindNetworkByEntityIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNetworkByEntityIdResponse::CopyFrom(const FindNetworkByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByEntityIdResponse::IsInitialized() const {
  return true;
}

void FindNetworkByEntityIdResponse::InternalSwap(FindNetworkByEntityIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByEntityIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[19]);
}

// ===================================================================

class FindNetworkByRecordIdRequest::_Internal {
 public:
};

FindNetworkByRecordIdRequest::FindNetworkByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByRecordIdRequest)
}
FindNetworkByRecordIdRequest::FindNetworkByRecordIdRequest(const FindNetworkByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNetworkByRecordIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.record_keys_){}
    , decltype(_impl_.max_degrees_){}
    , decltype(_impl_.build_out_degrees_){}
    , decltype(_impl_.build_out_max_entities_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.record_keys_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_keys_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_keys().empty()) {
    _this->_impl_.record_keys_.Set(from._internal_record_keys(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.max_degrees_, &from._impl_.max_degrees_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.max_degrees_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByRecordIdRequest)
}

inline void FindNetworkByRecordIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.record_keys_){}
    , decltype(_impl_.max_degrees_){int64_t{0}}
    , decltype(_impl_.build_out_degrees_){int64_t{0}}
    , decltype(_impl_.build_out_max_entities_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.record_keys_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_keys_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindNetworkByRecordIdRequest::~FindNetworkByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByRecordIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNetworkByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.record_keys_.Destroy();
}

void FindNetworkByRecordIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNetworkByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.record_keys_.ClearToEmpty();
  ::memset(&_impl_.max_degrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.max_degrees_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByRecordIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string record_keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_record_keys();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindNetworkByRecordIdRequest.record_keys"));
        } else
          goto handle_unusual;
        continue;
      // int64 max_degrees = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.max_degrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 build_out_degrees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.build_out_degrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 build_out_max_entities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.build_out_max_entities_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNetworkByRecordIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_keys = 1;
  if (!this->_internal_record_keys().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_keys().data(), static_cast<int>(this->_internal_record_keys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByRecordIdRequest.record_keys");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_record_keys(), target);
  }

  // int64 max_degrees = 2;
  if (this->_internal_max_degrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_max_degrees(), target);
  }

  // int64 build_out_degrees = 3;
  if (this->_internal_build_out_degrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_build_out_degrees(), target);
  }

  // int64 build_out_max_entities = 4;
  if (this->_internal_build_out_max_entities() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_build_out_max_entities(), target);
  }

  // int64 flags = 5;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByRecordIdRequest)
  return target;
}

size_t FindNetworkByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByRecordIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string record_keys = 1;
  if (!this->_internal_record_keys().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_keys());
  }

  // int64 max_degrees = 2;
  if (this->_internal_max_degrees() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_max_degrees());
  }

  // int64 build_out_degrees = 3;
  if (this->_internal_build_out_degrees() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_build_out_degrees());
  }

  // int64 build_out_max_entities = 4;
  if (this->_internal_build_out_max_entities() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_build_out_max_entities());
  }

  // int64 flags = 5;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNetworkByRecordIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNetworkByRecordIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNetworkByRecordIdRequest::GetClassData() const { return &_class_data_; }


void FindNetworkByRecordIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNetworkByRecordIdRequest*>(&to_msg);
  auto& from = static_cast<const FindNetworkByRecordIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_record_keys().empty()) {
    _this->_internal_set_record_keys(from._internal_record_keys());
  }
  if (from._internal_max_degrees() != 0) {
    _this->_internal_set_max_degrees(from._internal_max_degrees());
  }
  if (from._internal_build_out_degrees() != 0) {
    _this->_internal_set_build_out_degrees(from._internal_build_out_degrees());
  }
  if (from._internal_build_out_max_entities() != 0) {
    _this->_internal_set_build_out_max_entities(from._internal_build_out_max_entities());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNetworkByRecordIdRequest::CopyFrom(const FindNetworkByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByRecordIdRequest::IsInitialized() const {
  return true;
}

void FindNetworkByRecordIdRequest::InternalSwap(FindNetworkByRecordIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_keys_, lhs_arena,
      &other->_impl_.record_keys_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindNetworkByRecordIdRequest, _impl_.flags_)
      + sizeof(FindNetworkByRecordIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(FindNetworkByRecordIdRequest, _impl_.max_degrees_)>(
          reinterpret_cast<char*>(&_impl_.max_degrees_),
          reinterpret_cast<char*>(&other->_impl_.max_degrees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByRecordIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[20]);
}

// ===================================================================

class FindNetworkByRecordIdResponse::_Internal {
 public:
};

FindNetworkByRecordIdResponse::FindNetworkByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByRecordIdResponse)
}
FindNetworkByRecordIdResponse::FindNetworkByRecordIdResponse(const FindNetworkByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindNetworkByRecordIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByRecordIdResponse)
}

inline void FindNetworkByRecordIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindNetworkByRecordIdResponse::~FindNetworkByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByRecordIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindNetworkByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FindNetworkByRecordIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindNetworkByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByRecordIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindNetworkByRecordIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindNetworkByRecordIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByRecordIdResponse)
  return target;
}

size_t FindNetworkByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByRecordIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindNetworkByRecordIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindNetworkByRecordIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindNetworkByRecordIdResponse::GetClassData() const { return &_class_data_; }


void FindNetworkByRecordIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindNetworkByRecordIdResponse*>(&to_msg);
  auto& from = static_cast<const FindNetworkByRecordIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindNetworkByRecordIdResponse::CopyFrom(const FindNetworkByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByRecordIdResponse::IsInitialized() const {
  return true;
}

void FindNetworkByRecordIdResponse::InternalSwap(FindNetworkByRecordIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByRecordIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[21]);
}

// ===================================================================

class FindPathByEntityIdRequest::_Internal {
 public:
};

FindPathByEntityIdRequest::FindPathByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByEntityIdRequest)
}
FindPathByEntityIdRequest::FindPathByEntityIdRequest(const FindPathByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindPathByEntityIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.avoid_entity_ids_){}
    , decltype(_impl_.required_data_sources_){}
    , decltype(_impl_.start_entity_id_){}
    , decltype(_impl_.end_entity_id_){}
    , decltype(_impl_.max_degrees_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.avoid_entity_ids_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avoid_entity_ids_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avoid_entity_ids().empty()) {
    _this->_impl_.avoid_entity_ids_.Set(from._internal_avoid_entity_ids(), 
      _this->GetArenaForAllocation());
  }
  _impl_.required_data_sources_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.required_data_sources_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_required_data_sources().empty()) {
    _this->_impl_.required_data_sources_.Set(from._internal_required_data_sources(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.start_entity_id_, &from._impl_.start_entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.start_entity_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByEntityIdRequest)
}

inline void FindPathByEntityIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.avoid_entity_ids_){}
    , decltype(_impl_.required_data_sources_){}
    , decltype(_impl_.start_entity_id_){int64_t{0}}
    , decltype(_impl_.end_entity_id_){int64_t{0}}
    , decltype(_impl_.max_degrees_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.avoid_entity_ids_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avoid_entity_ids_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.required_data_sources_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.required_data_sources_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindPathByEntityIdRequest::~FindPathByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByEntityIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindPathByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.avoid_entity_ids_.Destroy();
  _impl_.required_data_sources_.Destroy();
}

void FindPathByEntityIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindPathByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.avoid_entity_ids_.ClearToEmpty();
  _impl_.required_data_sources_.ClearToEmpty();
  ::memset(&_impl_.start_entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.start_entity_id_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByEntityIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 start_entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.start_entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 end_entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.end_entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 max_degrees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.max_degrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string avoid_entity_ids = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_avoid_entity_ids();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByEntityIdRequest.avoid_entity_ids"));
        } else
          goto handle_unusual;
        continue;
      // string required_data_sources = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_required_data_sources();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByEntityIdRequest.required_data_sources"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindPathByEntityIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 start_entity_id = 1;
  if (this->_internal_start_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_start_entity_id(), target);
  }

  // int64 end_entity_id = 2;
  if (this->_internal_end_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_end_entity_id(), target);
  }

  // int64 max_degrees = 3;
  if (this->_internal_max_degrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_max_degrees(), target);
  }

  // string avoid_entity_ids = 4;
  if (!this->_internal_avoid_entity_ids().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avoid_entity_ids().data(), static_cast<int>(this->_internal_avoid_entity_ids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByEntityIdRequest.avoid_entity_ids");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_avoid_entity_ids(), target);
  }

  // string required_data_sources = 5;
  if (!this->_internal_required_data_sources().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_required_data_sources().data(), static_cast<int>(this->_internal_required_data_sources().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByEntityIdRequest.required_data_sources");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_required_data_sources(), target);
  }

  // int64 flags = 6;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(6, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByEntityIdRequest)
  return target;
}

size_t FindPathByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByEntityIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string avoid_entity_ids = 4;
  if (!this->_internal_avoid_entity_ids().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avoid_entity_ids());
  }

  // string required_data_sources = 5;
  if (!this->_internal_required_data_sources().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_required_data_sources());
  }

  // int64 start_entity_id = 1;
  if (this->_internal_start_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_start_entity_id());
  }

  // int64 end_entity_id = 2;
  if (this->_internal_end_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_end_entity_id());
  }

  // int64 max_degrees = 3;
  if (this->_internal_max_degrees() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_max_degrees());
  }

  // int64 flags = 6;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindPathByEntityIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindPathByEntityIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindPathByEntityIdRequest::GetClassData() const { return &_class_data_; }


void FindPathByEntityIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindPathByEntityIdRequest*>(&to_msg);
  auto& from = static_cast<const FindPathByEntityIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_avoid_entity_ids().empty()) {
    _this->_internal_set_avoid_entity_ids(from._internal_avoid_entity_ids());
  }
  if (!from._internal_required_data_sources().empty()) {
    _this->_internal_set_required_data_sources(from._internal_required_data_sources());
  }
  if (from._internal_start_entity_id() != 0) {
    _this->_internal_set_start_entity_id(from._internal_start_entity_id());
  }
  if (from._internal_end_entity_id() != 0) {
    _this->_internal_set_end_entity_id(from._internal_end_entity_id());
  }
  if (from._internal_max_degrees() != 0) {
    _this->_internal_set_max_degrees(from._internal_max_degrees());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindPathByEntityIdRequest::CopyFrom(const FindPathByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByEntityIdRequest::IsInitialized() const {
  return true;
}

void FindPathByEntityIdRequest::InternalSwap(FindPathByEntityIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avoid_entity_ids_, lhs_arena,
      &other->_impl_.avoid_entity_ids_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.required_data_sources_, lhs_arena,
      &other->_impl_.required_data_sources_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindPathByEntityIdRequest, _impl_.flags_)
      + sizeof(FindPathByEntityIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(FindPathByEntityIdRequest, _impl_.start_entity_id_)>(
          reinterpret_cast<char*>(&_impl_.start_entity_id_),
          reinterpret_cast<char*>(&other->_impl_.start_entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByEntityIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[22]);
}

// ===================================================================

class FindPathByEntityIdResponse::_Internal {
 public:
};

FindPathByEntityIdResponse::FindPathByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByEntityIdResponse)
}
FindPathByEntityIdResponse::FindPathByEntityIdResponse(const FindPathByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindPathByEntityIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByEntityIdResponse)
}

inline void FindPathByEntityIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindPathByEntityIdResponse::~FindPathByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByEntityIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindPathByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FindPathByEntityIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindPathByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByEntityIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByEntityIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindPathByEntityIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByEntityIdResponse)
  return target;
}

size_t FindPathByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByEntityIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindPathByEntityIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindPathByEntityIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindPathByEntityIdResponse::GetClassData() const { return &_class_data_; }


void FindPathByEntityIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindPathByEntityIdResponse*>(&to_msg);
  auto& from = static_cast<const FindPathByEntityIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindPathByEntityIdResponse::CopyFrom(const FindPathByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByEntityIdResponse::IsInitialized() const {
  return true;
}

void FindPathByEntityIdResponse::InternalSwap(FindPathByEntityIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByEntityIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[23]);
}

// ===================================================================

class FindPathByRecordIdRequest::_Internal {
 public:
};

FindPathByRecordIdRequest::FindPathByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByRecordIdRequest)
}
FindPathByRecordIdRequest::FindPathByRecordIdRequest(const FindPathByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindPathByRecordIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.start_data_source_code_){}
    , decltype(_impl_.start_record_id_){}
    , decltype(_impl_.end_data_source_code_){}
    , decltype(_impl_.end_record_id_){}
    , decltype(_impl_.avoid_record_keys_){}
    , decltype(_impl_.required_data_sources_){}
    , decltype(_impl_.max_degrees_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.start_data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.start_data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_start_data_source_code().empty()) {
    _this->_impl_.start_data_source_code_.Set(from._internal_start_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.start_record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.start_record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_start_record_id().empty()) {
    _this->_impl_.start_record_id_.Set(from._internal_start_record_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.end_data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end_data_source_code().empty()) {
    _this->_impl_.end_data_source_code_.Set(from._internal_end_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.end_record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_end_record_id().empty()) {
    _this->_impl_.end_record_id_.Set(from._internal_end_record_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.avoid_record_keys_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avoid_record_keys_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_avoid_record_keys().empty()) {
    _this->_impl_.avoid_record_keys_.Set(from._internal_avoid_record_keys(), 
      _this->GetArenaForAllocation());
  }
  _impl_.required_data_sources_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.required_data_sources_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_required_data_sources().empty()) {
    _this->_impl_.required_data_sources_.Set(from._internal_required_data_sources(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.max_degrees_, &from._impl_.max_degrees_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.max_degrees_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByRecordIdRequest)
}

inline void FindPathByRecordIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.start_data_source_code_){}
    , decltype(_impl_.start_record_id_){}
    , decltype(_impl_.end_data_source_code_){}
    , decltype(_impl_.end_record_id_){}
    , decltype(_impl_.avoid_record_keys_){}
    , decltype(_impl_.required_data_sources_){}
    , decltype(_impl_.max_degrees_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.start_data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.start_data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.start_record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.start_record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.end_record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.end_record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.avoid_record_keys_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.avoid_record_keys_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.required_data_sources_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.required_data_sources_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindPathByRecordIdRequest::~FindPathByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByRecordIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindPathByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.start_data_source_code_.Destroy();
  _impl_.start_record_id_.Destroy();
  _impl_.end_data_source_code_.Destroy();
  _impl_.end_record_id_.Destroy();
  _impl_.avoid_record_keys_.Destroy();
  _impl_.required_data_sources_.Destroy();
}

void FindPathByRecordIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindPathByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.start_data_source_code_.ClearToEmpty();
  _impl_.start_record_id_.ClearToEmpty();
  _impl_.end_data_source_code_.ClearToEmpty();
  _impl_.end_record_id_.ClearToEmpty();
  _impl_.avoid_record_keys_.ClearToEmpty();
  _impl_.required_data_sources_.ClearToEmpty();
  ::memset(&_impl_.max_degrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.max_degrees_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByRecordIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string start_data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_start_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.start_data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string start_record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_start_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.start_record_id"));
        } else
          goto handle_unusual;
        continue;
      // string end_data_source_code = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_end_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.end_data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string end_record_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_end_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.end_record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 max_degrees = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.max_degrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string avoid_record_keys = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_avoid_record_keys();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.avoid_record_keys"));
        } else
          goto handle_unusual;
        continue;
      // string required_data_sources = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_required_data_sources();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.required_data_sources"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindPathByRecordIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string start_data_source_code = 1;
  if (!this->_internal_start_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_start_data_source_code().data(), static_cast<int>(this->_internal_start_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.start_data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_start_data_source_code(), target);
  }

  // string start_record_id = 2;
  if (!this->_internal_start_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_start_record_id().data(), static_cast<int>(this->_internal_start_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.start_record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_start_record_id(), target);
  }

  // string end_data_source_code = 3;
  if (!this->_internal_end_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_end_data_source_code().data(), static_cast<int>(this->_internal_end_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.end_data_source_code");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_end_data_source_code(), target);
  }

  // string end_record_id = 4;
  if (!this->_internal_end_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_end_record_id().data(), static_cast<int>(this->_internal_end_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.end_record_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_end_record_id(), target);
  }

  // int64 max_degrees = 5;
  if (this->_internal_max_degrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_max_degrees(), target);
  }

  // string avoid_record_keys = 6;
  if (!this->_internal_avoid_record_keys().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avoid_record_keys().data(), static_cast<int>(this->_internal_avoid_record_keys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.avoid_record_keys");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_avoid_record_keys(), target);
  }

  // string required_data_sources = 7;
  if (!this->_internal_required_data_sources().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_required_data_sources().data(), static_cast<int>(this->_internal_required_data_sources().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.required_data_sources");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_required_data_sources(), target);
  }

  // int64 flags = 8;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(8, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByRecordIdRequest)
  return target;
}

size_t FindPathByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByRecordIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string start_data_source_code = 1;
  if (!this->_internal_start_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_start_data_source_code());
  }

  // string start_record_id = 2;
  if (!this->_internal_start_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_start_record_id());
  }

  // string end_data_source_code = 3;
  if (!this->_internal_end_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_end_data_source_code());
  }

  // string end_record_id = 4;
  if (!this->_internal_end_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_end_record_id());
  }

  // string avoid_record_keys = 6;
  if (!this->_internal_avoid_record_keys().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avoid_record_keys());
  }

  // string required_data_sources = 7;
  if (!this->_internal_required_data_sources().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_required_data_sources());
  }

  // int64 max_degrees = 5;
  if (this->_internal_max_degrees() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_max_degrees());
  }

  // int64 flags = 8;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindPathByRecordIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindPathByRecordIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindPathByRecordIdRequest::GetClassData() const { return &_class_data_; }


void FindPathByRecordIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindPathByRecordIdRequest*>(&to_msg);
  auto& from = static_cast<const FindPathByRecordIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_start_data_source_code().empty()) {
    _this->_internal_set_start_data_source_code(from._internal_start_data_source_code());
  }
  if (!from._internal_start_record_id().empty()) {
    _this->_internal_set_start_record_id(from._internal_start_record_id());
  }
  if (!from._internal_end_data_source_code().empty()) {
    _this->_internal_set_end_data_source_code(from._internal_end_data_source_code());
  }
  if (!from._internal_end_record_id().empty()) {
    _this->_internal_set_end_record_id(from._internal_end_record_id());
  }
  if (!from._internal_avoid_record_keys().empty()) {
    _this->_internal_set_avoid_record_keys(from._internal_avoid_record_keys());
  }
  if (!from._internal_required_data_sources().empty()) {
    _this->_internal_set_required_data_sources(from._internal_required_data_sources());
  }
  if (from._internal_max_degrees() != 0) {
    _this->_internal_set_max_degrees(from._internal_max_degrees());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindPathByRecordIdRequest::CopyFrom(const FindPathByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByRecordIdRequest::IsInitialized() const {
  return true;
}

void FindPathByRecordIdRequest::InternalSwap(FindPathByRecordIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.start_data_source_code_, lhs_arena,
      &other->_impl_.start_data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.start_record_id_, lhs_arena,
      &other->_impl_.start_record_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.end_data_source_code_, lhs_arena,
      &other->_impl_.end_data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.end_record_id_, lhs_arena,
      &other->_impl_.end_record_id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.avoid_record_keys_, lhs_arena,
      &other->_impl_.avoid_record_keys_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.required_data_sources_, lhs_arena,
      &other->_impl_.required_data_sources_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindPathByRecordIdRequest, _impl_.flags_)
      + sizeof(FindPathByRecordIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(FindPathByRecordIdRequest, _impl_.max_degrees_)>(
          reinterpret_cast<char*>(&_impl_.max_degrees_),
          reinterpret_cast<char*>(&other->_impl_.max_degrees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByRecordIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[24]);
}

// ===================================================================

class FindPathByRecordIdResponse::_Internal {
 public:
};

FindPathByRecordIdResponse::FindPathByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByRecordIdResponse)
}
FindPathByRecordIdResponse::FindPathByRecordIdResponse(const FindPathByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  FindPathByRecordIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByRecordIdResponse)
}

inline void FindPathByRecordIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

FindPathByRecordIdResponse::~FindPathByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByRecordIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void FindPathByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void FindPathByRecordIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void FindPathByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByRecordIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.FindPathByRecordIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* FindPathByRecordIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByRecordIdResponse)
  return target;
}

size_t FindPathByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByRecordIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData FindPathByRecordIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    FindPathByRecordIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*FindPathByRecordIdResponse::GetClassData() const { return &_class_data_; }


void FindPathByRecordIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<FindPathByRecordIdResponse*>(&to_msg);
  auto& from = static_cast<const FindPathByRecordIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void FindPathByRecordIdResponse::CopyFrom(const FindPathByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByRecordIdResponse::IsInitialized() const {
  return true;
}

void FindPathByRecordIdResponse::InternalSwap(FindPathByRecordIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByRecordIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[25]);
}

// ===================================================================

class GetActiveConfigIdRequest::_Internal {
 public:
};

GetActiveConfigIdRequest::GetActiveConfigIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.GetActiveConfigIdRequest)
}
GetActiveConfigIdRequest::GetActiveConfigIdRequest(const GetActiveConfigIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetActiveConfigIdRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.GetActiveConfigIdRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetActiveConfigIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetActiveConfigIdRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetActiveConfigIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[26]);
}

// ===================================================================

class GetActiveConfigIdResponse::_Internal {
 public:
};

GetActiveConfigIdResponse::GetActiveConfigIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetActiveConfigIdResponse)
}
GetActiveConfigIdResponse::GetActiveConfigIdResponse(const GetActiveConfigIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetActiveConfigIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.result_ = from._impl_.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetActiveConfigIdResponse)
}

inline void GetActiveConfigIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetActiveConfigIdResponse::~GetActiveConfigIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetActiveConfigIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetActiveConfigIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetActiveConfigIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetActiveConfigIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetActiveConfigIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActiveConfigIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetActiveConfigIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetActiveConfigIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetActiveConfigIdResponse)
  return target;
}

size_t GetActiveConfigIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetActiveConfigIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->_internal_result() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetActiveConfigIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetActiveConfigIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetActiveConfigIdResponse::GetClassData() const { return &_class_data_; }


void GetActiveConfigIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetActiveConfigIdResponse*>(&to_msg);
  auto& from = static_cast<const GetActiveConfigIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetActiveConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_result() != 0) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetActiveConfigIdResponse::CopyFrom(const GetActiveConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetActiveConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActiveConfigIdResponse::IsInitialized() const {
  return true;
}

void GetActiveConfigIdResponse::InternalSwap(GetActiveConfigIdResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActiveConfigIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[27]);
}

// ===================================================================

class GetEntityByEntityIdRequest::_Internal {
 public:
};

GetEntityByEntityIdRequest::GetEntityByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByEntityIdRequest)
}
GetEntityByEntityIdRequest::GetEntityByEntityIdRequest(const GetEntityByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEntityByEntityIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByEntityIdRequest)
}

inline void GetEntityByEntityIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetEntityByEntityIdRequest::~GetEntityByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByEntityIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEntityByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetEntityByEntityIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEntityByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByEntityIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEntityByEntityIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByEntityIdRequest)
  return target;
}

size_t GetEntityByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByEntityIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEntityByEntityIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEntityByEntityIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEntityByEntityIdRequest::GetClassData() const { return &_class_data_; }


void GetEntityByEntityIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEntityByEntityIdRequest*>(&to_msg);
  auto& from = static_cast<const GetEntityByEntityIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEntityByEntityIdRequest::CopyFrom(const GetEntityByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByEntityIdRequest::IsInitialized() const {
  return true;
}

void GetEntityByEntityIdRequest::InternalSwap(GetEntityByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEntityByEntityIdRequest, _impl_.flags_)
      + sizeof(GetEntityByEntityIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(GetEntityByEntityIdRequest, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByEntityIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[28]);
}

// ===================================================================

class GetEntityByEntityIdResponse::_Internal {
 public:
};

GetEntityByEntityIdResponse::GetEntityByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByEntityIdResponse)
}
GetEntityByEntityIdResponse::GetEntityByEntityIdResponse(const GetEntityByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEntityByEntityIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByEntityIdResponse)
}

inline void GetEntityByEntityIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetEntityByEntityIdResponse::~GetEntityByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByEntityIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEntityByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetEntityByEntityIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEntityByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByEntityIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetEntityByEntityIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEntityByEntityIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByEntityIdResponse)
  return target;
}

size_t GetEntityByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByEntityIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEntityByEntityIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEntityByEntityIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEntityByEntityIdResponse::GetClassData() const { return &_class_data_; }


void GetEntityByEntityIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEntityByEntityIdResponse*>(&to_msg);
  auto& from = static_cast<const GetEntityByEntityIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEntityByEntityIdResponse::CopyFrom(const GetEntityByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByEntityIdResponse::IsInitialized() const {
  return true;
}

void GetEntityByEntityIdResponse::InternalSwap(GetEntityByEntityIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByEntityIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[29]);
}

// ===================================================================

class GetEntityByRecordIdRequest::_Internal {
 public:
};

GetEntityByRecordIdRequest::GetEntityByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByRecordIdRequest)
}
GetEntityByRecordIdRequest::GetEntityByRecordIdRequest(const GetEntityByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEntityByRecordIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByRecordIdRequest)
}

inline void GetEntityByRecordIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetEntityByRecordIdRequest::~GetEntityByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByRecordIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEntityByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
}

void GetEntityByRecordIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEntityByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByRecordIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetEntityByRecordIdRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetEntityByRecordIdRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEntityByRecordIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByRecordIdRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByRecordIdRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByRecordIdRequest)
  return target;
}

size_t GetEntityByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByRecordIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEntityByRecordIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEntityByRecordIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEntityByRecordIdRequest::GetClassData() const { return &_class_data_; }


void GetEntityByRecordIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEntityByRecordIdRequest*>(&to_msg);
  auto& from = static_cast<const GetEntityByRecordIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEntityByRecordIdRequest::CopyFrom(const GetEntityByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByRecordIdRequest::IsInitialized() const {
  return true;
}

void GetEntityByRecordIdRequest::InternalSwap(GetEntityByRecordIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByRecordIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[30]);
}

// ===================================================================

class GetEntityByRecordIdResponse::_Internal {
 public:
};

GetEntityByRecordIdResponse::GetEntityByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByRecordIdResponse)
}
GetEntityByRecordIdResponse::GetEntityByRecordIdResponse(const GetEntityByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetEntityByRecordIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByRecordIdResponse)
}

inline void GetEntityByRecordIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetEntityByRecordIdResponse::~GetEntityByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByRecordIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetEntityByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetEntityByRecordIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetEntityByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByRecordIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetEntityByRecordIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetEntityByRecordIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByRecordIdResponse)
  return target;
}

size_t GetEntityByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByRecordIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetEntityByRecordIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetEntityByRecordIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetEntityByRecordIdResponse::GetClassData() const { return &_class_data_; }


void GetEntityByRecordIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetEntityByRecordIdResponse*>(&to_msg);
  auto& from = static_cast<const GetEntityByRecordIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetEntityByRecordIdResponse::CopyFrom(const GetEntityByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByRecordIdResponse::IsInitialized() const {
  return true;
}

void GetEntityByRecordIdResponse::InternalSwap(GetEntityByRecordIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByRecordIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[31]);
}

// ===================================================================

class GetRecordRequest::_Internal {
 public:
};

GetRecordRequest::GetRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRecordRequest)
}
GetRecordRequest::GetRecordRequest(const GetRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRecordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetRecordRequest)
}

inline void GetRecordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRecordRequest::~GetRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetRecordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
}

void GetRecordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRecordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetRecordRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetRecordRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRecordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRecordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRecordRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRecordRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRecordRequest)
  return target;
}

size_t GetRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRecordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRecordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRecordRequest::GetClassData() const { return &_class_data_; }


void GetRecordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRecordRequest*>(&to_msg);
  auto& from = static_cast<const GetRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRecordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRecordRequest::CopyFrom(const GetRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordRequest::IsInitialized() const {
  return true;
}

void GetRecordRequest::InternalSwap(GetRecordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[32]);
}

// ===================================================================

class GetRecordResponse::_Internal {
 public:
};

GetRecordResponse::GetRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRecordResponse)
}
GetRecordResponse::GetRecordResponse(const GetRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetRecordResponse)
}

inline void GetRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRecordResponse::~GetRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRecordResponse)
  return target;
}

size_t GetRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRecordResponse::GetClassData() const { return &_class_data_; }


void GetRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRecordResponse*>(&to_msg);
  auto& from = static_cast<const GetRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRecordResponse::CopyFrom(const GetRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordResponse::IsInitialized() const {
  return true;
}

void GetRecordResponse::InternalSwap(GetRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[33]);
}

// ===================================================================

class GetRedoRecordRequest::_Internal {
 public:
};

GetRedoRecordRequest::GetRedoRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.GetRedoRecordRequest)
}
GetRedoRecordRequest::GetRedoRecordRequest(const GetRedoRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetRedoRecordRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.GetRedoRecordRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRedoRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRedoRecordRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetRedoRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[34]);
}

// ===================================================================

class GetRedoRecordResponse::_Internal {
 public:
};

GetRedoRecordResponse::GetRedoRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRedoRecordResponse)
}
GetRedoRecordResponse::GetRedoRecordResponse(const GetRedoRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetRedoRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetRedoRecordResponse)
}

inline void GetRedoRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetRedoRecordResponse::~GetRedoRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetRedoRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetRedoRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetRedoRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetRedoRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRedoRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRedoRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetRedoRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetRedoRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRedoRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRedoRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRedoRecordResponse)
  return target;
}

size_t GetRedoRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRedoRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetRedoRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetRedoRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetRedoRecordResponse::GetClassData() const { return &_class_data_; }


void GetRedoRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetRedoRecordResponse*>(&to_msg);
  auto& from = static_cast<const GetRedoRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRedoRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetRedoRecordResponse::CopyFrom(const GetRedoRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRedoRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedoRecordResponse::IsInitialized() const {
  return true;
}

void GetRedoRecordResponse::InternalSwap(GetRedoRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRedoRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[35]);
}

// ===================================================================

class GetStatsRequest::_Internal {
 public:
};

GetStatsRequest::GetStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.GetStatsRequest)
}
GetStatsRequest::GetStatsRequest(const GetStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetStatsRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.GetStatsRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatsRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetStatsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[36]);
}

// ===================================================================

class GetStatsResponse::_Internal {
 public:
};

GetStatsResponse::GetStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetStatsResponse)
}
GetStatsResponse::GetStatsResponse(const GetStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetStatsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetStatsResponse)
}

inline void GetStatsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetStatsResponse::~GetStatsResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetStatsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetStatsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetStatsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetStatsResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetStatsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetStatsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetStatsResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetStatsResponse)
  return target;
}

size_t GetStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetStatsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetStatsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetStatsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetStatsResponse::GetClassData() const { return &_class_data_; }


void GetStatsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetStatsResponse*>(&to_msg);
  auto& from = static_cast<const GetStatsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetStatsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetStatsResponse::CopyFrom(const GetStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsResponse::IsInitialized() const {
  return true;
}

void GetStatsResponse::InternalSwap(GetStatsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[37]);
}

// ===================================================================

class GetVirtualEntityByRecordIdRequest::_Internal {
 public:
};

GetVirtualEntityByRecordIdRequest::GetVirtualEntityByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetVirtualEntityByRecordIdRequest)
}
GetVirtualEntityByRecordIdRequest::GetVirtualEntityByRecordIdRequest(const GetVirtualEntityByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVirtualEntityByRecordIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.record_keys_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.record_keys_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_keys_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_keys().empty()) {
    _this->_impl_.record_keys_.Set(from._internal_record_keys(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetVirtualEntityByRecordIdRequest)
}

inline void GetVirtualEntityByRecordIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.record_keys_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.record_keys_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_keys_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVirtualEntityByRecordIdRequest::~GetVirtualEntityByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetVirtualEntityByRecordIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVirtualEntityByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.record_keys_.Destroy();
}

void GetVirtualEntityByRecordIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVirtualEntityByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetVirtualEntityByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.record_keys_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualEntityByRecordIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string record_keys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_record_keys();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetVirtualEntityByRecordIdRequest.record_keys"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtualEntityByRecordIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetVirtualEntityByRecordIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_keys = 1;
  if (!this->_internal_record_keys().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_keys().data(), static_cast<int>(this->_internal_record_keys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetVirtualEntityByRecordIdRequest.record_keys");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_record_keys(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetVirtualEntityByRecordIdRequest)
  return target;
}

size_t GetVirtualEntityByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetVirtualEntityByRecordIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string record_keys = 1;
  if (!this->_internal_record_keys().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_keys());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtualEntityByRecordIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVirtualEntityByRecordIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtualEntityByRecordIdRequest::GetClassData() const { return &_class_data_; }


void GetVirtualEntityByRecordIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVirtualEntityByRecordIdRequest*>(&to_msg);
  auto& from = static_cast<const GetVirtualEntityByRecordIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetVirtualEntityByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_record_keys().empty()) {
    _this->_internal_set_record_keys(from._internal_record_keys());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtualEntityByRecordIdRequest::CopyFrom(const GetVirtualEntityByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetVirtualEntityByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualEntityByRecordIdRequest::IsInitialized() const {
  return true;
}

void GetVirtualEntityByRecordIdRequest::InternalSwap(GetVirtualEntityByRecordIdRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_keys_, lhs_arena,
      &other->_impl_.record_keys_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualEntityByRecordIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[38]);
}

// ===================================================================

class GetVirtualEntityByRecordIdResponse::_Internal {
 public:
};

GetVirtualEntityByRecordIdResponse::GetVirtualEntityByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.GetVirtualEntityByRecordIdResponse)
}
GetVirtualEntityByRecordIdResponse::GetVirtualEntityByRecordIdResponse(const GetVirtualEntityByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetVirtualEntityByRecordIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetVirtualEntityByRecordIdResponse)
}

inline void GetVirtualEntityByRecordIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetVirtualEntityByRecordIdResponse::~GetVirtualEntityByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetVirtualEntityByRecordIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetVirtualEntityByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetVirtualEntityByRecordIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetVirtualEntityByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetVirtualEntityByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualEntityByRecordIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.GetVirtualEntityByRecordIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetVirtualEntityByRecordIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetVirtualEntityByRecordIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetVirtualEntityByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetVirtualEntityByRecordIdResponse)
  return target;
}

size_t GetVirtualEntityByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetVirtualEntityByRecordIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetVirtualEntityByRecordIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetVirtualEntityByRecordIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetVirtualEntityByRecordIdResponse::GetClassData() const { return &_class_data_; }


void GetVirtualEntityByRecordIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetVirtualEntityByRecordIdResponse*>(&to_msg);
  auto& from = static_cast<const GetVirtualEntityByRecordIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetVirtualEntityByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetVirtualEntityByRecordIdResponse::CopyFrom(const GetVirtualEntityByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetVirtualEntityByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualEntityByRecordIdResponse::IsInitialized() const {
  return true;
}

void GetVirtualEntityByRecordIdResponse::InternalSwap(GetVirtualEntityByRecordIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualEntityByRecordIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[39]);
}

// ===================================================================

class HowEntityByEntityIdRequest::_Internal {
 public:
};

HowEntityByEntityIdRequest::HowEntityByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.HowEntityByEntityIdRequest)
}
HowEntityByEntityIdRequest::HowEntityByEntityIdRequest(const HowEntityByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HowEntityByEntityIdRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.HowEntityByEntityIdRequest)
}

inline void HowEntityByEntityIdRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

HowEntityByEntityIdRequest::~HowEntityByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.HowEntityByEntityIdRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HowEntityByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void HowEntityByEntityIdRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HowEntityByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.HowEntityByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HowEntityByEntityIdRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HowEntityByEntityIdRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.HowEntityByEntityIdRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.HowEntityByEntityIdRequest)
  return target;
}

size_t HowEntityByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.HowEntityByEntityIdRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HowEntityByEntityIdRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HowEntityByEntityIdRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HowEntityByEntityIdRequest::GetClassData() const { return &_class_data_; }


void HowEntityByEntityIdRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HowEntityByEntityIdRequest*>(&to_msg);
  auto& from = static_cast<const HowEntityByEntityIdRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.HowEntityByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HowEntityByEntityIdRequest::CopyFrom(const HowEntityByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.HowEntityByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HowEntityByEntityIdRequest::IsInitialized() const {
  return true;
}

void HowEntityByEntityIdRequest::InternalSwap(HowEntityByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HowEntityByEntityIdRequest, _impl_.flags_)
      + sizeof(HowEntityByEntityIdRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(HowEntityByEntityIdRequest, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HowEntityByEntityIdRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[40]);
}

// ===================================================================

class HowEntityByEntityIdResponse::_Internal {
 public:
};

HowEntityByEntityIdResponse::HowEntityByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.HowEntityByEntityIdResponse)
}
HowEntityByEntityIdResponse::HowEntityByEntityIdResponse(const HowEntityByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  HowEntityByEntityIdResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.HowEntityByEntityIdResponse)
}

inline void HowEntityByEntityIdResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

HowEntityByEntityIdResponse::~HowEntityByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.HowEntityByEntityIdResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void HowEntityByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void HowEntityByEntityIdResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void HowEntityByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.HowEntityByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HowEntityByEntityIdResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.HowEntityByEntityIdResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* HowEntityByEntityIdResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.HowEntityByEntityIdResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.HowEntityByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.HowEntityByEntityIdResponse)
  return target;
}

size_t HowEntityByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.HowEntityByEntityIdResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData HowEntityByEntityIdResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    HowEntityByEntityIdResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*HowEntityByEntityIdResponse::GetClassData() const { return &_class_data_; }


void HowEntityByEntityIdResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<HowEntityByEntityIdResponse*>(&to_msg);
  auto& from = static_cast<const HowEntityByEntityIdResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.HowEntityByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void HowEntityByEntityIdResponse::CopyFrom(const HowEntityByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.HowEntityByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HowEntityByEntityIdResponse::IsInitialized() const {
  return true;
}

void HowEntityByEntityIdResponse::InternalSwap(HowEntityByEntityIdResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata HowEntityByEntityIdResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[41]);
}

// ===================================================================

class PreprocessRecordRequest::_Internal {
 public:
};

PreprocessRecordRequest::PreprocessRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.PreprocessRecordRequest)
}
PreprocessRecordRequest::PreprocessRecordRequest(const PreprocessRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreprocessRecordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.record_definition_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.record_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_definition().empty()) {
    _this->_impl_.record_definition_.Set(from._internal_record_definition(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.PreprocessRecordRequest)
}

inline void PreprocessRecordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.record_definition_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.record_definition_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_definition_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreprocessRecordRequest::~PreprocessRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.PreprocessRecordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreprocessRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.record_definition_.Destroy();
}

void PreprocessRecordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreprocessRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.PreprocessRecordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.record_definition_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreprocessRecordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string record_definition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_record_definition();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.PreprocessRecordRequest.record_definition"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreprocessRecordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.PreprocessRecordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string record_definition = 1;
  if (!this->_internal_record_definition().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_definition().data(), static_cast<int>(this->_internal_record_definition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.PreprocessRecordRequest.record_definition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_record_definition(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.PreprocessRecordRequest)
  return target;
}

size_t PreprocessRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.PreprocessRecordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string record_definition = 1;
  if (!this->_internal_record_definition().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_definition());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreprocessRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreprocessRecordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreprocessRecordRequest::GetClassData() const { return &_class_data_; }


void PreprocessRecordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreprocessRecordRequest*>(&to_msg);
  auto& from = static_cast<const PreprocessRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.PreprocessRecordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_record_definition().empty()) {
    _this->_internal_set_record_definition(from._internal_record_definition());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreprocessRecordRequest::CopyFrom(const PreprocessRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.PreprocessRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreprocessRecordRequest::IsInitialized() const {
  return true;
}

void PreprocessRecordRequest::InternalSwap(PreprocessRecordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_definition_, lhs_arena,
      &other->_impl_.record_definition_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreprocessRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[42]);
}

// ===================================================================

class PreprocessRecordResponse::_Internal {
 public:
};

PreprocessRecordResponse::PreprocessRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.PreprocessRecordResponse)
}
PreprocessRecordResponse::PreprocessRecordResponse(const PreprocessRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PreprocessRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.PreprocessRecordResponse)
}

inline void PreprocessRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PreprocessRecordResponse::~PreprocessRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.PreprocessRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PreprocessRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void PreprocessRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PreprocessRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.PreprocessRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreprocessRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.PreprocessRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PreprocessRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.PreprocessRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.PreprocessRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.PreprocessRecordResponse)
  return target;
}

size_t PreprocessRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.PreprocessRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PreprocessRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PreprocessRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PreprocessRecordResponse::GetClassData() const { return &_class_data_; }


void PreprocessRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PreprocessRecordResponse*>(&to_msg);
  auto& from = static_cast<const PreprocessRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.PreprocessRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PreprocessRecordResponse::CopyFrom(const PreprocessRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.PreprocessRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreprocessRecordResponse::IsInitialized() const {
  return true;
}

void PreprocessRecordResponse::InternalSwap(PreprocessRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata PreprocessRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[43]);
}

// ===================================================================

class PrimeEngineRequest::_Internal {
 public:
};

PrimeEngineRequest::PrimeEngineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.PrimeEngineRequest)
}
PrimeEngineRequest::PrimeEngineRequest(const PrimeEngineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PrimeEngineRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.PrimeEngineRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PrimeEngineRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PrimeEngineRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PrimeEngineRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[44]);
}

// ===================================================================

class PrimeEngineResponse::_Internal {
 public:
};

PrimeEngineResponse::PrimeEngineResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.PrimeEngineResponse)
}
PrimeEngineResponse::PrimeEngineResponse(const PrimeEngineResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PrimeEngineResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.PrimeEngineResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PrimeEngineResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PrimeEngineResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PrimeEngineResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[45]);
}

// ===================================================================

class ProcessRedoRecordRequest::_Internal {
 public:
};

ProcessRedoRecordRequest::ProcessRedoRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ProcessRedoRecordRequest)
}
ProcessRedoRecordRequest::ProcessRedoRecordRequest(const ProcessRedoRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProcessRedoRecordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.redo_record_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.redo_record_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.redo_record_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_redo_record().empty()) {
    _this->_impl_.redo_record_.Set(from._internal_redo_record(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ProcessRedoRecordRequest)
}

inline void ProcessRedoRecordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.redo_record_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.redo_record_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.redo_record_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProcessRedoRecordRequest::~ProcessRedoRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.ProcessRedoRecordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProcessRedoRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.redo_record_.Destroy();
}

void ProcessRedoRecordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProcessRedoRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ProcessRedoRecordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.redo_record_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessRedoRecordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string redo_record = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_redo_record();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ProcessRedoRecordRequest.redo_record"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProcessRedoRecordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ProcessRedoRecordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string redo_record = 1;
  if (!this->_internal_redo_record().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redo_record().data(), static_cast<int>(this->_internal_redo_record().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ProcessRedoRecordRequest.redo_record");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_redo_record(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ProcessRedoRecordRequest)
  return target;
}

size_t ProcessRedoRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ProcessRedoRecordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string redo_record = 1;
  if (!this->_internal_redo_record().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redo_record());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessRedoRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProcessRedoRecordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessRedoRecordRequest::GetClassData() const { return &_class_data_; }


void ProcessRedoRecordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProcessRedoRecordRequest*>(&to_msg);
  auto& from = static_cast<const ProcessRedoRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ProcessRedoRecordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_redo_record().empty()) {
    _this->_internal_set_redo_record(from._internal_redo_record());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessRedoRecordRequest::CopyFrom(const ProcessRedoRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ProcessRedoRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessRedoRecordRequest::IsInitialized() const {
  return true;
}

void ProcessRedoRecordRequest::InternalSwap(ProcessRedoRecordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.redo_record_, lhs_arena,
      &other->_impl_.redo_record_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessRedoRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[46]);
}

// ===================================================================

class ProcessRedoRecordResponse::_Internal {
 public:
};

ProcessRedoRecordResponse::ProcessRedoRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ProcessRedoRecordResponse)
}
ProcessRedoRecordResponse::ProcessRedoRecordResponse(const ProcessRedoRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProcessRedoRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.ProcessRedoRecordResponse)
}

inline void ProcessRedoRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProcessRedoRecordResponse::~ProcessRedoRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.ProcessRedoRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProcessRedoRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void ProcessRedoRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProcessRedoRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ProcessRedoRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessRedoRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ProcessRedoRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProcessRedoRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ProcessRedoRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ProcessRedoRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ProcessRedoRecordResponse)
  return target;
}

size_t ProcessRedoRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ProcessRedoRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProcessRedoRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProcessRedoRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProcessRedoRecordResponse::GetClassData() const { return &_class_data_; }


void ProcessRedoRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProcessRedoRecordResponse*>(&to_msg);
  auto& from = static_cast<const ProcessRedoRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ProcessRedoRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProcessRedoRecordResponse::CopyFrom(const ProcessRedoRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ProcessRedoRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessRedoRecordResponse::IsInitialized() const {
  return true;
}

void ProcessRedoRecordResponse::InternalSwap(ProcessRedoRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessRedoRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[47]);
}

// ===================================================================

class ReevaluateEntityRequest::_Internal {
 public:
};

ReevaluateEntityRequest::ReevaluateEntityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateEntityRequest)
}
ReevaluateEntityRequest::ReevaluateEntityRequest(const ReevaluateEntityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReevaluateEntityRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateEntityRequest)
}

inline void ReevaluateEntityRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReevaluateEntityRequest::~ReevaluateEntityRequest() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateEntityRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReevaluateEntityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReevaluateEntityRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReevaluateEntityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateEntityRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateEntityRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 entity_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReevaluateEntityRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateEntityRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateEntityRequest)
  return target;
}

size_t ReevaluateEntityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateEntityRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id = 1;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReevaluateEntityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReevaluateEntityRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReevaluateEntityRequest::GetClassData() const { return &_class_data_; }


void ReevaluateEntityRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReevaluateEntityRequest*>(&to_msg);
  auto& from = static_cast<const ReevaluateEntityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateEntityRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReevaluateEntityRequest::CopyFrom(const ReevaluateEntityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateEntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateEntityRequest::IsInitialized() const {
  return true;
}

void ReevaluateEntityRequest::InternalSwap(ReevaluateEntityRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReevaluateEntityRequest, _impl_.flags_)
      + sizeof(ReevaluateEntityRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(ReevaluateEntityRequest, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateEntityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[48]);
}

// ===================================================================

class ReevaluateEntityResponse::_Internal {
 public:
};

ReevaluateEntityResponse::ReevaluateEntityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateEntityResponse)
}
ReevaluateEntityResponse::ReevaluateEntityResponse(const ReevaluateEntityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReevaluateEntityResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateEntityResponse)
}

inline void ReevaluateEntityResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReevaluateEntityResponse::~ReevaluateEntityResponse() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateEntityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReevaluateEntityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void ReevaluateEntityResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReevaluateEntityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateEntityResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateEntityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ReevaluateEntityResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReevaluateEntityResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateEntityResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateEntityResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateEntityResponse)
  return target;
}

size_t ReevaluateEntityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateEntityResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReevaluateEntityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReevaluateEntityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReevaluateEntityResponse::GetClassData() const { return &_class_data_; }


void ReevaluateEntityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReevaluateEntityResponse*>(&to_msg);
  auto& from = static_cast<const ReevaluateEntityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateEntityResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReevaluateEntityResponse::CopyFrom(const ReevaluateEntityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateEntityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateEntityResponse::IsInitialized() const {
  return true;
}

void ReevaluateEntityResponse::InternalSwap(ReevaluateEntityResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateEntityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[49]);
}

// ===================================================================

class ReevaluateRecordRequest::_Internal {
 public:
};

ReevaluateRecordRequest::ReevaluateRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateRecordRequest)
}
ReevaluateRecordRequest::ReevaluateRecordRequest(const ReevaluateRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReevaluateRecordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateRecordRequest)
}

inline void ReevaluateRecordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReevaluateRecordRequest::~ReevaluateRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateRecordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReevaluateRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
}

void ReevaluateRecordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReevaluateRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateRecordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateRecordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ReevaluateRecordRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ReevaluateRecordRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReevaluateRecordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateRecordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateRecordRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateRecordRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateRecordRequest)
  return target;
}

size_t ReevaluateRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateRecordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReevaluateRecordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReevaluateRecordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReevaluateRecordRequest::GetClassData() const { return &_class_data_; }


void ReevaluateRecordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReevaluateRecordRequest*>(&to_msg);
  auto& from = static_cast<const ReevaluateRecordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateRecordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReevaluateRecordRequest::CopyFrom(const ReevaluateRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateRecordRequest::IsInitialized() const {
  return true;
}

void ReevaluateRecordRequest::InternalSwap(ReevaluateRecordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateRecordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[50]);
}

// ===================================================================

class ReevaluateRecordResponse::_Internal {
 public:
};

ReevaluateRecordResponse::ReevaluateRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateRecordResponse)
}
ReevaluateRecordResponse::ReevaluateRecordResponse(const ReevaluateRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReevaluateRecordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateRecordResponse)
}

inline void ReevaluateRecordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ReevaluateRecordResponse::~ReevaluateRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateRecordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReevaluateRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void ReevaluateRecordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReevaluateRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateRecordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateRecordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.ReevaluateRecordResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReevaluateRecordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateRecordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateRecordResponse)
  return target;
}

size_t ReevaluateRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateRecordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReevaluateRecordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReevaluateRecordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReevaluateRecordResponse::GetClassData() const { return &_class_data_; }


void ReevaluateRecordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReevaluateRecordResponse*>(&to_msg);
  auto& from = static_cast<const ReevaluateRecordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateRecordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReevaluateRecordResponse::CopyFrom(const ReevaluateRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateRecordResponse::IsInitialized() const {
  return true;
}

void ReevaluateRecordResponse::InternalSwap(ReevaluateRecordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateRecordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[51]);
}

// ===================================================================

class ReinitializeRequest::_Internal {
 public:
};

ReinitializeRequest::ReinitializeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.ReinitializeRequest)
}
ReinitializeRequest::ReinitializeRequest(const ReinitializeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReinitializeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.config_id_ = from._impl_.config_id_;
  // @@protoc_insertion_point(copy_constructor:szengine.ReinitializeRequest)
}

inline void ReinitializeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReinitializeRequest::~ReinitializeRequest() {
  // @@protoc_insertion_point(destructor:szengine.ReinitializeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReinitializeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReinitializeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReinitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReinitializeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitializeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 config_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.config_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReinitializeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReinitializeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 config_id = 1;
  if (this->_internal_config_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReinitializeRequest)
  return target;
}

size_t ReinitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReinitializeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 config_id = 1;
  if (this->_internal_config_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_config_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinitializeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReinitializeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinitializeRequest::GetClassData() const { return &_class_data_; }


void ReinitializeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReinitializeRequest*>(&to_msg);
  auto& from = static_cast<const ReinitializeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReinitializeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_config_id() != 0) {
    _this->_internal_set_config_id(from._internal_config_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReinitializeRequest::CopyFrom(const ReinitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReinitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitializeRequest::IsInitialized() const {
  return true;
}

void ReinitializeRequest::InternalSwap(ReinitializeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.config_id_, other->_impl_.config_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[52]);
}

// ===================================================================

class ReinitializeResponse::_Internal {
 public:
};

ReinitializeResponse::ReinitializeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szengine.ReinitializeResponse)
}
ReinitializeResponse::ReinitializeResponse(const ReinitializeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReinitializeResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.ReinitializeResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinitializeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinitializeResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[53]);
}

// ===================================================================

class SearchByAttributesRequest::_Internal {
 public:
};

SearchByAttributesRequest::SearchByAttributesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.SearchByAttributesRequest)
}
SearchByAttributesRequest::SearchByAttributesRequest(const SearchByAttributesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchByAttributesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attributes_){}
    , decltype(_impl_.search_profile_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.attributes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attributes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_attributes().empty()) {
    _this->_impl_.attributes_.Set(from._internal_attributes(), 
      _this->GetArenaForAllocation());
  }
  _impl_.search_profile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.search_profile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_search_profile().empty()) {
    _this->_impl_.search_profile_.Set(from._internal_search_profile(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.SearchByAttributesRequest)
}

inline void SearchByAttributesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attributes_){}
    , decltype(_impl_.search_profile_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.attributes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attributes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.search_profile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.search_profile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchByAttributesRequest::~SearchByAttributesRequest() {
  // @@protoc_insertion_point(destructor:szengine.SearchByAttributesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchByAttributesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.Destroy();
  _impl_.search_profile_.Destroy();
}

void SearchByAttributesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchByAttributesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.SearchByAttributesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.ClearToEmpty();
  _impl_.search_profile_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchByAttributesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string attributes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_attributes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.SearchByAttributesRequest.attributes"));
        } else
          goto handle_unusual;
        continue;
      // string search_profile = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_search_profile();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.SearchByAttributesRequest.search_profile"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchByAttributesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.SearchByAttributesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string attributes = 1;
  if (!this->_internal_attributes().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attributes().data(), static_cast<int>(this->_internal_attributes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.SearchByAttributesRequest.attributes");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attributes(), target);
  }

  // string search_profile = 2;
  if (!this->_internal_search_profile().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_search_profile().data(), static_cast<int>(this->_internal_search_profile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.SearchByAttributesRequest.search_profile");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_search_profile(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.SearchByAttributesRequest)
  return target;
}

size_t SearchByAttributesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.SearchByAttributesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string attributes = 1;
  if (!this->_internal_attributes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attributes());
  }

  // string search_profile = 2;
  if (!this->_internal_search_profile().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_search_profile());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchByAttributesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchByAttributesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchByAttributesRequest::GetClassData() const { return &_class_data_; }


void SearchByAttributesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchByAttributesRequest*>(&to_msg);
  auto& from = static_cast<const SearchByAttributesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.SearchByAttributesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_attributes().empty()) {
    _this->_internal_set_attributes(from._internal_attributes());
  }
  if (!from._internal_search_profile().empty()) {
    _this->_internal_set_search_profile(from._internal_search_profile());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchByAttributesRequest::CopyFrom(const SearchByAttributesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.SearchByAttributesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchByAttributesRequest::IsInitialized() const {
  return true;
}

void SearchByAttributesRequest::InternalSwap(SearchByAttributesRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.attributes_, lhs_arena,
      &other->_impl_.attributes_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.search_profile_, lhs_arena,
      &other->_impl_.search_profile_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchByAttributesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[54]);
}

// ===================================================================

class SearchByAttributesResponse::_Internal {
 public:
};

SearchByAttributesResponse::SearchByAttributesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.SearchByAttributesResponse)
}
SearchByAttributesResponse::SearchByAttributesResponse(const SearchByAttributesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SearchByAttributesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.SearchByAttributesResponse)
}

inline void SearchByAttributesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SearchByAttributesResponse::~SearchByAttributesResponse() {
  // @@protoc_insertion_point(destructor:szengine.SearchByAttributesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SearchByAttributesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void SearchByAttributesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SearchByAttributesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.SearchByAttributesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchByAttributesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.SearchByAttributesResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SearchByAttributesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.SearchByAttributesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.SearchByAttributesResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.SearchByAttributesResponse)
  return target;
}

size_t SearchByAttributesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.SearchByAttributesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SearchByAttributesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SearchByAttributesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SearchByAttributesResponse::GetClassData() const { return &_class_data_; }


void SearchByAttributesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SearchByAttributesResponse*>(&to_msg);
  auto& from = static_cast<const SearchByAttributesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.SearchByAttributesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SearchByAttributesResponse::CopyFrom(const SearchByAttributesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.SearchByAttributesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchByAttributesResponse::IsInitialized() const {
  return true;
}

void SearchByAttributesResponse::InternalSwap(SearchByAttributesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchByAttributesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[55]);
}

// ===================================================================

class StreamExportCsvEntityReportRequest::_Internal {
 public:
};

StreamExportCsvEntityReportRequest::StreamExportCsvEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportCsvEntityReportRequest)
}
StreamExportCsvEntityReportRequest::StreamExportCsvEntityReportRequest(const StreamExportCsvEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamExportCsvEntityReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.csv_column_list_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.csv_column_list_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.csv_column_list_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_csv_column_list().empty()) {
    _this->_impl_.csv_column_list_.Set(from._internal_csv_column_list(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportCsvEntityReportRequest)
}

inline void StreamExportCsvEntityReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.csv_column_list_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.csv_column_list_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.csv_column_list_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamExportCsvEntityReportRequest::~StreamExportCsvEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportCsvEntityReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamExportCsvEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.csv_column_list_.Destroy();
}

void StreamExportCsvEntityReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamExportCsvEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportCsvEntityReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.csv_column_list_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportCsvEntityReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string csv_column_list = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_csv_column_list();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.StreamExportCsvEntityReportRequest.csv_column_list"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamExportCsvEntityReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportCsvEntityReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string csv_column_list = 1;
  if (!this->_internal_csv_column_list().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_csv_column_list().data(), static_cast<int>(this->_internal_csv_column_list().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.StreamExportCsvEntityReportRequest.csv_column_list");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_csv_column_list(), target);
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportCsvEntityReportRequest)
  return target;
}

size_t StreamExportCsvEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportCsvEntityReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string csv_column_list = 1;
  if (!this->_internal_csv_column_list().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_csv_column_list());
  }

  // int64 flags = 2;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamExportCsvEntityReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamExportCsvEntityReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamExportCsvEntityReportRequest::GetClassData() const { return &_class_data_; }


void StreamExportCsvEntityReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamExportCsvEntityReportRequest*>(&to_msg);
  auto& from = static_cast<const StreamExportCsvEntityReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportCsvEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_csv_column_list().empty()) {
    _this->_internal_set_csv_column_list(from._internal_csv_column_list());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamExportCsvEntityReportRequest::CopyFrom(const StreamExportCsvEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportCsvEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportCsvEntityReportRequest::IsInitialized() const {
  return true;
}

void StreamExportCsvEntityReportRequest::InternalSwap(StreamExportCsvEntityReportRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.csv_column_list_, lhs_arena,
      &other->_impl_.csv_column_list_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportCsvEntityReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[56]);
}

// ===================================================================

class StreamExportCsvEntityReportResponse::_Internal {
 public:
};

StreamExportCsvEntityReportResponse::StreamExportCsvEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportCsvEntityReportResponse)
}
StreamExportCsvEntityReportResponse::StreamExportCsvEntityReportResponse(const StreamExportCsvEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamExportCsvEntityReportResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportCsvEntityReportResponse)
}

inline void StreamExportCsvEntityReportResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamExportCsvEntityReportResponse::~StreamExportCsvEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportCsvEntityReportResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamExportCsvEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void StreamExportCsvEntityReportResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamExportCsvEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportCsvEntityReportResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportCsvEntityReportResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.StreamExportCsvEntityReportResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamExportCsvEntityReportResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportCsvEntityReportResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.StreamExportCsvEntityReportResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportCsvEntityReportResponse)
  return target;
}

size_t StreamExportCsvEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportCsvEntityReportResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamExportCsvEntityReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamExportCsvEntityReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamExportCsvEntityReportResponse::GetClassData() const { return &_class_data_; }


void StreamExportCsvEntityReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamExportCsvEntityReportResponse*>(&to_msg);
  auto& from = static_cast<const StreamExportCsvEntityReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportCsvEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamExportCsvEntityReportResponse::CopyFrom(const StreamExportCsvEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportCsvEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportCsvEntityReportResponse::IsInitialized() const {
  return true;
}

void StreamExportCsvEntityReportResponse::InternalSwap(StreamExportCsvEntityReportResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportCsvEntityReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[57]);
}

// ===================================================================

class StreamExportJsonEntityReportRequest::_Internal {
 public:
};

StreamExportJsonEntityReportRequest::StreamExportJsonEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportJsonEntityReportRequest)
}
StreamExportJsonEntityReportRequest::StreamExportJsonEntityReportRequest(const StreamExportJsonEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamExportJsonEntityReportRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportJsonEntityReportRequest)
}

inline void StreamExportJsonEntityReportRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

StreamExportJsonEntityReportRequest::~StreamExportJsonEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportJsonEntityReportRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamExportJsonEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void StreamExportJsonEntityReportRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamExportJsonEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportJsonEntityReportRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportJsonEntityReportRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamExportJsonEntityReportRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportJsonEntityReportRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportJsonEntityReportRequest)
  return target;
}

size_t StreamExportJsonEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportJsonEntityReportRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamExportJsonEntityReportRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamExportJsonEntityReportRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamExportJsonEntityReportRequest::GetClassData() const { return &_class_data_; }


void StreamExportJsonEntityReportRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamExportJsonEntityReportRequest*>(&to_msg);
  auto& from = static_cast<const StreamExportJsonEntityReportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportJsonEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamExportJsonEntityReportRequest::CopyFrom(const StreamExportJsonEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportJsonEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportJsonEntityReportRequest::IsInitialized() const {
  return true;
}

void StreamExportJsonEntityReportRequest::InternalSwap(StreamExportJsonEntityReportRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportJsonEntityReportRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[58]);
}

// ===================================================================

class StreamExportJsonEntityReportResponse::_Internal {
 public:
};

StreamExportJsonEntityReportResponse::StreamExportJsonEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportJsonEntityReportResponse)
}
StreamExportJsonEntityReportResponse::StreamExportJsonEntityReportResponse(const StreamExportJsonEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  StreamExportJsonEntityReportResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportJsonEntityReportResponse)
}

inline void StreamExportJsonEntityReportResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

StreamExportJsonEntityReportResponse::~StreamExportJsonEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportJsonEntityReportResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void StreamExportJsonEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void StreamExportJsonEntityReportResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void StreamExportJsonEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportJsonEntityReportResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportJsonEntityReportResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.StreamExportJsonEntityReportResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* StreamExportJsonEntityReportResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportJsonEntityReportResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.StreamExportJsonEntityReportResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportJsonEntityReportResponse)
  return target;
}

size_t StreamExportJsonEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportJsonEntityReportResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData StreamExportJsonEntityReportResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    StreamExportJsonEntityReportResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*StreamExportJsonEntityReportResponse::GetClassData() const { return &_class_data_; }


void StreamExportJsonEntityReportResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<StreamExportJsonEntityReportResponse*>(&to_msg);
  auto& from = static_cast<const StreamExportJsonEntityReportResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportJsonEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void StreamExportJsonEntityReportResponse::CopyFrom(const StreamExportJsonEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportJsonEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportJsonEntityReportResponse::IsInitialized() const {
  return true;
}

void StreamExportJsonEntityReportResponse::InternalSwap(StreamExportJsonEntityReportResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportJsonEntityReportResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[59]);
}

// ===================================================================

class WhyEntitiesRequest::_Internal {
 public:
};

WhyEntitiesRequest::WhyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyEntitiesRequest)
}
WhyEntitiesRequest::WhyEntitiesRequest(const WhyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhyEntitiesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_1_){}
    , decltype(_impl_.entity_id_2_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.entity_id_1_, &from._impl_.entity_id_1_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.entity_id_1_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.WhyEntitiesRequest)
}

inline void WhyEntitiesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.entity_id_1_){int64_t{0}}
    , decltype(_impl_.entity_id_2_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

WhyEntitiesRequest::~WhyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhyEntitiesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void WhyEntitiesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.entity_id_1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.entity_id_1_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyEntitiesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 entity_id_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.entity_id_1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 entity_id_2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.entity_id_2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhyEntitiesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyEntitiesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entity_id_1 = 1;
  if (this->_internal_entity_id_1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_entity_id_1(), target);
  }

  // int64 entity_id_2 = 2;
  if (this->_internal_entity_id_2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_entity_id_2(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyEntitiesRequest)
  return target;
}

size_t WhyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyEntitiesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entity_id_1 = 1;
  if (this->_internal_entity_id_1() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id_1());
  }

  // int64 entity_id_2 = 2;
  if (this->_internal_entity_id_2() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id_2());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhyEntitiesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhyEntitiesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhyEntitiesRequest::GetClassData() const { return &_class_data_; }


void WhyEntitiesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhyEntitiesRequest*>(&to_msg);
  auto& from = static_cast<const WhyEntitiesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_entity_id_1() != 0) {
    _this->_internal_set_entity_id_1(from._internal_entity_id_1());
  }
  if (from._internal_entity_id_2() != 0) {
    _this->_internal_set_entity_id_2(from._internal_entity_id_2());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhyEntitiesRequest::CopyFrom(const WhyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyEntitiesRequest::IsInitialized() const {
  return true;
}

void WhyEntitiesRequest::InternalSwap(WhyEntitiesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WhyEntitiesRequest, _impl_.flags_)
      + sizeof(WhyEntitiesRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(WhyEntitiesRequest, _impl_.entity_id_1_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_1_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyEntitiesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[60]);
}

// ===================================================================

class WhyEntitiesResponse::_Internal {
 public:
};

WhyEntitiesResponse::WhyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyEntitiesResponse)
}
WhyEntitiesResponse::WhyEntitiesResponse(const WhyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhyEntitiesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhyEntitiesResponse)
}

inline void WhyEntitiesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhyEntitiesResponse::~WhyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhyEntitiesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void WhyEntitiesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyEntitiesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyEntitiesResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhyEntitiesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyEntitiesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyEntitiesResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyEntitiesResponse)
  return target;
}

size_t WhyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyEntitiesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhyEntitiesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhyEntitiesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhyEntitiesResponse::GetClassData() const { return &_class_data_; }


void WhyEntitiesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhyEntitiesResponse*>(&to_msg);
  auto& from = static_cast<const WhyEntitiesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhyEntitiesResponse::CopyFrom(const WhyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyEntitiesResponse::IsInitialized() const {
  return true;
}

void WhyEntitiesResponse::InternalSwap(WhyEntitiesResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyEntitiesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[61]);
}

// ===================================================================

class WhyRecordInEntityRequest::_Internal {
 public:
};

WhyRecordInEntityRequest::WhyRecordInEntityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordInEntityRequest)
}
WhyRecordInEntityRequest::WhyRecordInEntityRequest(const WhyRecordInEntityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhyRecordInEntityRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code().empty()) {
    _this->_impl_.data_source_code_.Set(from._internal_data_source_code(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id().empty()) {
    _this->_impl_.record_id_.Set(from._internal_record_id(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordInEntityRequest)
}

inline void WhyRecordInEntityRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_){}
    , decltype(_impl_.record_id_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhyRecordInEntityRequest::~WhyRecordInEntityRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordInEntityRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhyRecordInEntityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_.Destroy();
  _impl_.record_id_.Destroy();
}

void WhyRecordInEntityRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhyRecordInEntityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordInEntityRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_.ClearToEmpty();
  _impl_.record_id_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordInEntityRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordInEntityRequest.data_source_code"));
        } else
          goto handle_unusual;
        continue;
      // string record_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordInEntityRequest.record_id"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhyRecordInEntityRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordInEntityRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code().data(), static_cast<int>(this->_internal_data_source_code().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordInEntityRequest.data_source_code");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code(), target);
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id().data(), static_cast<int>(this->_internal_record_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordInEntityRequest.record_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id(), target);
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordInEntityRequest)
  return target;
}

size_t WhyRecordInEntityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordInEntityRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code = 1;
  if (!this->_internal_data_source_code().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code());
  }

  // string record_id = 2;
  if (!this->_internal_record_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id());
  }

  // int64 flags = 3;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhyRecordInEntityRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhyRecordInEntityRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhyRecordInEntityRequest::GetClassData() const { return &_class_data_; }


void WhyRecordInEntityRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhyRecordInEntityRequest*>(&to_msg);
  auto& from = static_cast<const WhyRecordInEntityRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordInEntityRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code().empty()) {
    _this->_internal_set_data_source_code(from._internal_data_source_code());
  }
  if (!from._internal_record_id().empty()) {
    _this->_internal_set_record_id(from._internal_record_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhyRecordInEntityRequest::CopyFrom(const WhyRecordInEntityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordInEntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordInEntityRequest::IsInitialized() const {
  return true;
}

void WhyRecordInEntityRequest::InternalSwap(WhyRecordInEntityRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_, lhs_arena,
      &other->_impl_.data_source_code_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_, lhs_arena,
      &other->_impl_.record_id_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordInEntityRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[62]);
}

// ===================================================================

class WhyRecordInEntityResponse::_Internal {
 public:
};

WhyRecordInEntityResponse::WhyRecordInEntityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordInEntityResponse)
}
WhyRecordInEntityResponse::WhyRecordInEntityResponse(const WhyRecordInEntityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhyRecordInEntityResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordInEntityResponse)
}

inline void WhyRecordInEntityResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhyRecordInEntityResponse::~WhyRecordInEntityResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordInEntityResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhyRecordInEntityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void WhyRecordInEntityResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhyRecordInEntityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordInEntityResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordInEntityResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordInEntityResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhyRecordInEntityResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordInEntityResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordInEntityResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordInEntityResponse)
  return target;
}

size_t WhyRecordInEntityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordInEntityResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhyRecordInEntityResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhyRecordInEntityResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhyRecordInEntityResponse::GetClassData() const { return &_class_data_; }


void WhyRecordInEntityResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhyRecordInEntityResponse*>(&to_msg);
  auto& from = static_cast<const WhyRecordInEntityResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordInEntityResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhyRecordInEntityResponse::CopyFrom(const WhyRecordInEntityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordInEntityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordInEntityResponse::IsInitialized() const {
  return true;
}

void WhyRecordInEntityResponse::InternalSwap(WhyRecordInEntityResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordInEntityResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[63]);
}

// ===================================================================

class WhyRecordsRequest::_Internal {
 public:
};

WhyRecordsRequest::WhyRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordsRequest)
}
WhyRecordsRequest::WhyRecordsRequest(const WhyRecordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhyRecordsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_1_){}
    , decltype(_impl_.record_id_1_){}
    , decltype(_impl_.data_source_code_2_){}
    , decltype(_impl_.record_id_2_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.data_source_code_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code_1().empty()) {
    _this->_impl_.data_source_code_1_.Set(from._internal_data_source_code_1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id_1().empty()) {
    _this->_impl_.record_id_1_.Set(from._internal_record_id_1(), 
      _this->GetArenaForAllocation());
  }
  _impl_.data_source_code_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_data_source_code_2().empty()) {
    _this->_impl_.data_source_code_2_.Set(from._internal_data_source_code_2(), 
      _this->GetArenaForAllocation());
  }
  _impl_.record_id_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_record_id_2().empty()) {
    _this->_impl_.record_id_2_.Set(from._internal_record_id_2(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.flags_ = from._impl_.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordsRequest)
}

inline void WhyRecordsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.data_source_code_1_){}
    , decltype(_impl_.record_id_1_){}
    , decltype(_impl_.data_source_code_2_){}
    , decltype(_impl_.record_id_2_){}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.data_source_code_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_1_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_1_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.data_source_code_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.data_source_code_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.record_id_2_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.record_id_2_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhyRecordsRequest::~WhyRecordsRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhyRecordsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.data_source_code_1_.Destroy();
  _impl_.record_id_1_.Destroy();
  _impl_.data_source_code_2_.Destroy();
  _impl_.record_id_2_.Destroy();
}

void WhyRecordsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhyRecordsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.data_source_code_1_.ClearToEmpty();
  _impl_.record_id_1_.ClearToEmpty();
  _impl_.data_source_code_2_.ClearToEmpty();
  _impl_.record_id_2_.ClearToEmpty();
  _impl_.flags_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string data_source_code_1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_data_source_code_1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordsRequest.data_source_code_1"));
        } else
          goto handle_unusual;
        continue;
      // string record_id_1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_record_id_1();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordsRequest.record_id_1"));
        } else
          goto handle_unusual;
        continue;
      // string data_source_code_2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_data_source_code_2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordsRequest.data_source_code_2"));
        } else
          goto handle_unusual;
        continue;
      // string record_id_2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_record_id_2();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordsRequest.record_id_2"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhyRecordsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string data_source_code_1 = 1;
  if (!this->_internal_data_source_code_1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code_1().data(), static_cast<int>(this->_internal_data_source_code_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.data_source_code_1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_data_source_code_1(), target);
  }

  // string record_id_1 = 2;
  if (!this->_internal_record_id_1().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id_1().data(), static_cast<int>(this->_internal_record_id_1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.record_id_1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_record_id_1(), target);
  }

  // string data_source_code_2 = 3;
  if (!this->_internal_data_source_code_2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_data_source_code_2().data(), static_cast<int>(this->_internal_data_source_code_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.data_source_code_2");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_data_source_code_2(), target);
  }

  // string record_id_2 = 4;
  if (!this->_internal_record_id_2().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_record_id_2().data(), static_cast<int>(this->_internal_record_id_2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.record_id_2");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_record_id_2(), target);
  }

  // int64 flags = 5;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordsRequest)
  return target;
}

size_t WhyRecordsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string data_source_code_1 = 1;
  if (!this->_internal_data_source_code_1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code_1());
  }

  // string record_id_1 = 2;
  if (!this->_internal_record_id_1().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id_1());
  }

  // string data_source_code_2 = 3;
  if (!this->_internal_data_source_code_2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_data_source_code_2());
  }

  // string record_id_2 = 4;
  if (!this->_internal_record_id_2().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_record_id_2());
  }

  // int64 flags = 5;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhyRecordsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhyRecordsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhyRecordsRequest::GetClassData() const { return &_class_data_; }


void WhyRecordsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhyRecordsRequest*>(&to_msg);
  auto& from = static_cast<const WhyRecordsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_data_source_code_1().empty()) {
    _this->_internal_set_data_source_code_1(from._internal_data_source_code_1());
  }
  if (!from._internal_record_id_1().empty()) {
    _this->_internal_set_record_id_1(from._internal_record_id_1());
  }
  if (!from._internal_data_source_code_2().empty()) {
    _this->_internal_set_data_source_code_2(from._internal_data_source_code_2());
  }
  if (!from._internal_record_id_2().empty()) {
    _this->_internal_set_record_id_2(from._internal_record_id_2());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhyRecordsRequest::CopyFrom(const WhyRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordsRequest::IsInitialized() const {
  return true;
}

void WhyRecordsRequest::InternalSwap(WhyRecordsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_1_, lhs_arena,
      &other->_impl_.data_source_code_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_1_, lhs_arena,
      &other->_impl_.record_id_1_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.data_source_code_2_, lhs_arena,
      &other->_impl_.data_source_code_2_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.record_id_2_, lhs_arena,
      &other->_impl_.record_id_2_, rhs_arena
  );
  swap(_impl_.flags_, other->_impl_.flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[64]);
}

// ===================================================================

class WhyRecordsResponse::_Internal {
 public:
};

WhyRecordsResponse::WhyRecordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordsResponse)
}
WhyRecordsResponse::WhyRecordsResponse(const WhyRecordsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhyRecordsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordsResponse)
}

inline void WhyRecordsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhyRecordsResponse::~WhyRecordsResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhyRecordsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void WhyRecordsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhyRecordsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhyRecordsResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhyRecordsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordsResponse)
  return target;
}

size_t WhyRecordsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhyRecordsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhyRecordsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhyRecordsResponse::GetClassData() const { return &_class_data_; }


void WhyRecordsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhyRecordsResponse*>(&to_msg);
  auto& from = static_cast<const WhyRecordsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhyRecordsResponse::CopyFrom(const WhyRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordsResponse::IsInitialized() const {
  return true;
}

void WhyRecordsResponse::InternalSwap(WhyRecordsResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[65]);
}

// ===================================================================

class WhySearchRequest::_Internal {
 public:
};

WhySearchRequest::WhySearchRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhySearchRequest)
}
WhySearchRequest::WhySearchRequest(const WhySearchRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhySearchRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attributes_){}
    , decltype(_impl_.search_profile_){}
    , decltype(_impl_.entity_id_){}
    , decltype(_impl_.flags_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.attributes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attributes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_attributes().empty()) {
    _this->_impl_.attributes_.Set(from._internal_attributes(), 
      _this->GetArenaForAllocation());
  }
  _impl_.search_profile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.search_profile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_search_profile().empty()) {
    _this->_impl_.search_profile_.Set(from._internal_search_profile(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.entity_id_, &from._impl_.entity_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.flags_) -
    reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.WhySearchRequest)
}

inline void WhySearchRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attributes_){}
    , decltype(_impl_.search_profile_){}
    , decltype(_impl_.entity_id_){int64_t{0}}
    , decltype(_impl_.flags_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.attributes_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attributes_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.search_profile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.search_profile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhySearchRequest::~WhySearchRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhySearchRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhySearchRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attributes_.Destroy();
  _impl_.search_profile_.Destroy();
}

void WhySearchRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhySearchRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhySearchRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attributes_.ClearToEmpty();
  _impl_.search_profile_.ClearToEmpty();
  ::memset(&_impl_.entity_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.flags_) -
      reinterpret_cast<char*>(&_impl_.entity_id_)) + sizeof(_impl_.flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhySearchRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string attributes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_attributes();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhySearchRequest.attributes"));
        } else
          goto handle_unusual;
        continue;
      // int64 entity_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.entity_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string search_profile = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_search_profile();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhySearchRequest.search_profile"));
        } else
          goto handle_unusual;
        continue;
      // int64 flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhySearchRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhySearchRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string attributes = 1;
  if (!this->_internal_attributes().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attributes().data(), static_cast<int>(this->_internal_attributes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhySearchRequest.attributes");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attributes(), target);
  }

  // int64 entity_id = 2;
  if (this->_internal_entity_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(2, this->_internal_entity_id(), target);
  }

  // string search_profile = 3;
  if (!this->_internal_search_profile().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_search_profile().data(), static_cast<int>(this->_internal_search_profile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhySearchRequest.search_profile");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_search_profile(), target);
  }

  // int64 flags = 4;
  if (this->_internal_flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(4, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhySearchRequest)
  return target;
}

size_t WhySearchRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhySearchRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string attributes = 1;
  if (!this->_internal_attributes().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attributes());
  }

  // string search_profile = 3;
  if (!this->_internal_search_profile().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_search_profile());
  }

  // int64 entity_id = 2;
  if (this->_internal_entity_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_entity_id());
  }

  // int64 flags = 4;
  if (this->_internal_flags() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_flags());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhySearchRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhySearchRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhySearchRequest::GetClassData() const { return &_class_data_; }


void WhySearchRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhySearchRequest*>(&to_msg);
  auto& from = static_cast<const WhySearchRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhySearchRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_attributes().empty()) {
    _this->_internal_set_attributes(from._internal_attributes());
  }
  if (!from._internal_search_profile().empty()) {
    _this->_internal_set_search_profile(from._internal_search_profile());
  }
  if (from._internal_entity_id() != 0) {
    _this->_internal_set_entity_id(from._internal_entity_id());
  }
  if (from._internal_flags() != 0) {
    _this->_internal_set_flags(from._internal_flags());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhySearchRequest::CopyFrom(const WhySearchRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhySearchRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhySearchRequest::IsInitialized() const {
  return true;
}

void WhySearchRequest::InternalSwap(WhySearchRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.attributes_, lhs_arena,
      &other->_impl_.attributes_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.search_profile_, lhs_arena,
      &other->_impl_.search_profile_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WhySearchRequest, _impl_.flags_)
      + sizeof(WhySearchRequest::_impl_.flags_)
      - PROTOBUF_FIELD_OFFSET(WhySearchRequest, _impl_.entity_id_)>(
          reinterpret_cast<char*>(&_impl_.entity_id_),
          reinterpret_cast<char*>(&other->_impl_.entity_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WhySearchRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[66]);
}

// ===================================================================

class WhySearchResponse::_Internal {
 public:
};

WhySearchResponse::WhySearchResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szengine.WhySearchResponse)
}
WhySearchResponse::WhySearchResponse(const WhySearchResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WhySearchResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhySearchResponse)
}

inline void WhySearchResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WhySearchResponse::~WhySearchResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhySearchResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WhySearchResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void WhySearchResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WhySearchResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhySearchResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhySearchResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szengine.WhySearchResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WhySearchResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhySearchResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhySearchResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhySearchResponse)
  return target;
}

size_t WhySearchResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhySearchResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WhySearchResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WhySearchResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WhySearchResponse::GetClassData() const { return &_class_data_; }


void WhySearchResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WhySearchResponse*>(&to_msg);
  auto& from = static_cast<const WhySearchResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhySearchResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WhySearchResponse::CopyFrom(const WhySearchResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhySearchResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhySearchResponse::IsInitialized() const {
  return true;
}

void WhySearchResponse::InternalSwap(WhySearchResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WhySearchResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szengine_2eproto_getter, &descriptor_table_szengine_2eproto_once,
      file_level_metadata_szengine_2eproto[67]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace szengine
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::szengine::AddRecordRequest*
Arena::CreateMaybeMessage< ::szengine::AddRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::AddRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::AddRecordResponse*
Arena::CreateMaybeMessage< ::szengine::AddRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::AddRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CloseExportRequest*
Arena::CreateMaybeMessage< ::szengine::CloseExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CloseExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CloseExportResponse*
Arena::CreateMaybeMessage< ::szengine::CloseExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CloseExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CountRedoRecordsRequest*
Arena::CreateMaybeMessage< ::szengine::CountRedoRecordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CountRedoRecordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CountRedoRecordsResponse*
Arena::CreateMaybeMessage< ::szengine::CountRedoRecordsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CountRedoRecordsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::DeleteRecordRequest*
Arena::CreateMaybeMessage< ::szengine::DeleteRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::DeleteRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::DeleteRecordResponse*
Arena::CreateMaybeMessage< ::szengine::DeleteRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::DeleteRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportCsvEntityReportRequest*
Arena::CreateMaybeMessage< ::szengine::ExportCsvEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportCsvEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportCsvEntityReportResponse*
Arena::CreateMaybeMessage< ::szengine::ExportCsvEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportCsvEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportJsonEntityReportRequest*
Arena::CreateMaybeMessage< ::szengine::ExportJsonEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportJsonEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportJsonEntityReportResponse*
Arena::CreateMaybeMessage< ::szengine::ExportJsonEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportJsonEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FetchNextRequest*
Arena::CreateMaybeMessage< ::szengine::FetchNextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FetchNextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FetchNextResponse*
Arena::CreateMaybeMessage< ::szengine::FetchNextResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FetchNextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByEntityIdRequest*
Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByEntityIdResponse*
Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByRecordIdRequest*
Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByRecordIdResponse*
Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByEntityIdRequest*
Arena::CreateMaybeMessage< ::szengine::FindNetworkByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByEntityIdResponse*
Arena::CreateMaybeMessage< ::szengine::FindNetworkByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByRecordIdRequest*
Arena::CreateMaybeMessage< ::szengine::FindNetworkByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByRecordIdResponse*
Arena::CreateMaybeMessage< ::szengine::FindNetworkByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByEntityIdRequest*
Arena::CreateMaybeMessage< ::szengine::FindPathByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByEntityIdResponse*
Arena::CreateMaybeMessage< ::szengine::FindPathByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByRecordIdRequest*
Arena::CreateMaybeMessage< ::szengine::FindPathByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByRecordIdResponse*
Arena::CreateMaybeMessage< ::szengine::FindPathByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetActiveConfigIdRequest*
Arena::CreateMaybeMessage< ::szengine::GetActiveConfigIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetActiveConfigIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetActiveConfigIdResponse*
Arena::CreateMaybeMessage< ::szengine::GetActiveConfigIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetActiveConfigIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByEntityIdRequest*
Arena::CreateMaybeMessage< ::szengine::GetEntityByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByEntityIdResponse*
Arena::CreateMaybeMessage< ::szengine::GetEntityByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByRecordIdRequest*
Arena::CreateMaybeMessage< ::szengine::GetEntityByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByRecordIdResponse*
Arena::CreateMaybeMessage< ::szengine::GetEntityByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRecordRequest*
Arena::CreateMaybeMessage< ::szengine::GetRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRecordResponse*
Arena::CreateMaybeMessage< ::szengine::GetRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRedoRecordRequest*
Arena::CreateMaybeMessage< ::szengine::GetRedoRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRedoRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRedoRecordResponse*
Arena::CreateMaybeMessage< ::szengine::GetRedoRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRedoRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetStatsRequest*
Arena::CreateMaybeMessage< ::szengine::GetStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetStatsResponse*
Arena::CreateMaybeMessage< ::szengine::GetStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetVirtualEntityByRecordIdRequest*
Arena::CreateMaybeMessage< ::szengine::GetVirtualEntityByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetVirtualEntityByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetVirtualEntityByRecordIdResponse*
Arena::CreateMaybeMessage< ::szengine::GetVirtualEntityByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetVirtualEntityByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::HowEntityByEntityIdRequest*
Arena::CreateMaybeMessage< ::szengine::HowEntityByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::HowEntityByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::HowEntityByEntityIdResponse*
Arena::CreateMaybeMessage< ::szengine::HowEntityByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::HowEntityByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PreprocessRecordRequest*
Arena::CreateMaybeMessage< ::szengine::PreprocessRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PreprocessRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PreprocessRecordResponse*
Arena::CreateMaybeMessage< ::szengine::PreprocessRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PreprocessRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PrimeEngineRequest*
Arena::CreateMaybeMessage< ::szengine::PrimeEngineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PrimeEngineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PrimeEngineResponse*
Arena::CreateMaybeMessage< ::szengine::PrimeEngineResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PrimeEngineResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ProcessRedoRecordRequest*
Arena::CreateMaybeMessage< ::szengine::ProcessRedoRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ProcessRedoRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ProcessRedoRecordResponse*
Arena::CreateMaybeMessage< ::szengine::ProcessRedoRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ProcessRedoRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateEntityRequest*
Arena::CreateMaybeMessage< ::szengine::ReevaluateEntityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateEntityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateEntityResponse*
Arena::CreateMaybeMessage< ::szengine::ReevaluateEntityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateEntityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateRecordRequest*
Arena::CreateMaybeMessage< ::szengine::ReevaluateRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateRecordResponse*
Arena::CreateMaybeMessage< ::szengine::ReevaluateRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReinitializeRequest*
Arena::CreateMaybeMessage< ::szengine::ReinitializeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReinitializeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReinitializeResponse*
Arena::CreateMaybeMessage< ::szengine::ReinitializeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReinitializeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::SearchByAttributesRequest*
Arena::CreateMaybeMessage< ::szengine::SearchByAttributesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::SearchByAttributesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::SearchByAttributesResponse*
Arena::CreateMaybeMessage< ::szengine::SearchByAttributesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::SearchByAttributesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportCsvEntityReportRequest*
Arena::CreateMaybeMessage< ::szengine::StreamExportCsvEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportCsvEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportCsvEntityReportResponse*
Arena::CreateMaybeMessage< ::szengine::StreamExportCsvEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportCsvEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportJsonEntityReportRequest*
Arena::CreateMaybeMessage< ::szengine::StreamExportJsonEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportJsonEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportJsonEntityReportResponse*
Arena::CreateMaybeMessage< ::szengine::StreamExportJsonEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportJsonEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyEntitiesRequest*
Arena::CreateMaybeMessage< ::szengine::WhyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyEntitiesResponse*
Arena::CreateMaybeMessage< ::szengine::WhyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordInEntityRequest*
Arena::CreateMaybeMessage< ::szengine::WhyRecordInEntityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordInEntityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordInEntityResponse*
Arena::CreateMaybeMessage< ::szengine::WhyRecordInEntityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordInEntityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordsRequest*
Arena::CreateMaybeMessage< ::szengine::WhyRecordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordsResponse*
Arena::CreateMaybeMessage< ::szengine::WhyRecordsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhySearchRequest*
Arena::CreateMaybeMessage< ::szengine::WhySearchRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhySearchRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhySearchResponse*
Arena::CreateMaybeMessage< ::szengine::WhySearchResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhySearchResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
