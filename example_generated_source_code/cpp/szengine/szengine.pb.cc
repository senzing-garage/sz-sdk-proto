// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szengine.proto

#include "szengine.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace szengine {
class AddRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRecordRequest> _instance;
} _AddRecordRequest_default_instance_;
class AddRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRecordResponse> _instance;
} _AddRecordResponse_default_instance_;
class CloseExportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloseExportRequest> _instance;
} _CloseExportRequest_default_instance_;
class CloseExportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CloseExportResponse> _instance;
} _CloseExportResponse_default_instance_;
class CountRedoRecordsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CountRedoRecordsRequest> _instance;
} _CountRedoRecordsRequest_default_instance_;
class CountRedoRecordsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CountRedoRecordsResponse> _instance;
} _CountRedoRecordsResponse_default_instance_;
class DeleteRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRecordRequest> _instance;
} _DeleteRecordRequest_default_instance_;
class DeleteRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DeleteRecordResponse> _instance;
} _DeleteRecordResponse_default_instance_;
class ExportCsvEntityReportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExportCsvEntityReportRequest> _instance;
} _ExportCsvEntityReportRequest_default_instance_;
class ExportCsvEntityReportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExportCsvEntityReportResponse> _instance;
} _ExportCsvEntityReportResponse_default_instance_;
class ExportJsonEntityReportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExportJsonEntityReportRequest> _instance;
} _ExportJsonEntityReportRequest_default_instance_;
class ExportJsonEntityReportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExportJsonEntityReportResponse> _instance;
} _ExportJsonEntityReportResponse_default_instance_;
class FetchNextRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchNextRequest> _instance;
} _FetchNextRequest_default_instance_;
class FetchNextResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FetchNextResponse> _instance;
} _FetchNextResponse_default_instance_;
class FindInterestingEntitiesByEntityIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindInterestingEntitiesByEntityIdRequest> _instance;
} _FindInterestingEntitiesByEntityIdRequest_default_instance_;
class FindInterestingEntitiesByEntityIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindInterestingEntitiesByEntityIdResponse> _instance;
} _FindInterestingEntitiesByEntityIdResponse_default_instance_;
class FindInterestingEntitiesByRecordIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindInterestingEntitiesByRecordIdRequest> _instance;
} _FindInterestingEntitiesByRecordIdRequest_default_instance_;
class FindInterestingEntitiesByRecordIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindInterestingEntitiesByRecordIdResponse> _instance;
} _FindInterestingEntitiesByRecordIdResponse_default_instance_;
class FindNetworkByEntityIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindNetworkByEntityIdRequest> _instance;
} _FindNetworkByEntityIdRequest_default_instance_;
class FindNetworkByEntityIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindNetworkByEntityIdResponse> _instance;
} _FindNetworkByEntityIdResponse_default_instance_;
class FindNetworkByRecordIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindNetworkByRecordIdRequest> _instance;
} _FindNetworkByRecordIdRequest_default_instance_;
class FindNetworkByRecordIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindNetworkByRecordIdResponse> _instance;
} _FindNetworkByRecordIdResponse_default_instance_;
class FindPathByEntityIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindPathByEntityIdRequest> _instance;
} _FindPathByEntityIdRequest_default_instance_;
class FindPathByEntityIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindPathByEntityIdResponse> _instance;
} _FindPathByEntityIdResponse_default_instance_;
class FindPathByRecordIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindPathByRecordIdRequest> _instance;
} _FindPathByRecordIdRequest_default_instance_;
class FindPathByRecordIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FindPathByRecordIdResponse> _instance;
} _FindPathByRecordIdResponse_default_instance_;
class GetActiveConfigIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActiveConfigIdRequest> _instance;
} _GetActiveConfigIdRequest_default_instance_;
class GetActiveConfigIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetActiveConfigIdResponse> _instance;
} _GetActiveConfigIdResponse_default_instance_;
class GetEntityByEntityIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityByEntityIdRequest> _instance;
} _GetEntityByEntityIdRequest_default_instance_;
class GetEntityByEntityIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityByEntityIdResponse> _instance;
} _GetEntityByEntityIdResponse_default_instance_;
class GetEntityByRecordIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityByRecordIdRequest> _instance;
} _GetEntityByRecordIdRequest_default_instance_;
class GetEntityByRecordIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetEntityByRecordIdResponse> _instance;
} _GetEntityByRecordIdResponse_default_instance_;
class GetRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRecordRequest> _instance;
} _GetRecordRequest_default_instance_;
class GetRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRecordResponse> _instance;
} _GetRecordResponse_default_instance_;
class GetRedoRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRedoRecordRequest> _instance;
} _GetRedoRecordRequest_default_instance_;
class GetRedoRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetRedoRecordResponse> _instance;
} _GetRedoRecordResponse_default_instance_;
class GetStatsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatsRequest> _instance;
} _GetStatsRequest_default_instance_;
class GetStatsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetStatsResponse> _instance;
} _GetStatsResponse_default_instance_;
class GetVirtualEntityByRecordIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVirtualEntityByRecordIdRequest> _instance;
} _GetVirtualEntityByRecordIdRequest_default_instance_;
class GetVirtualEntityByRecordIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetVirtualEntityByRecordIdResponse> _instance;
} _GetVirtualEntityByRecordIdResponse_default_instance_;
class HowEntityByEntityIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HowEntityByEntityIdRequest> _instance;
} _HowEntityByEntityIdRequest_default_instance_;
class HowEntityByEntityIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HowEntityByEntityIdResponse> _instance;
} _HowEntityByEntityIdResponse_default_instance_;
class PreprocessRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreprocessRecordRequest> _instance;
} _PreprocessRecordRequest_default_instance_;
class PreprocessRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PreprocessRecordResponse> _instance;
} _PreprocessRecordResponse_default_instance_;
class PrimeEngineRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrimeEngineRequest> _instance;
} _PrimeEngineRequest_default_instance_;
class PrimeEngineResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PrimeEngineResponse> _instance;
} _PrimeEngineResponse_default_instance_;
class ProcessRedoRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessRedoRecordRequest> _instance;
} _ProcessRedoRecordRequest_default_instance_;
class ProcessRedoRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ProcessRedoRecordResponse> _instance;
} _ProcessRedoRecordResponse_default_instance_;
class ReevaluateEntityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReevaluateEntityRequest> _instance;
} _ReevaluateEntityRequest_default_instance_;
class ReevaluateEntityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReevaluateEntityResponse> _instance;
} _ReevaluateEntityResponse_default_instance_;
class ReevaluateRecordRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReevaluateRecordRequest> _instance;
} _ReevaluateRecordRequest_default_instance_;
class ReevaluateRecordResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReevaluateRecordResponse> _instance;
} _ReevaluateRecordResponse_default_instance_;
class ReinitializeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReinitializeRequest> _instance;
} _ReinitializeRequest_default_instance_;
class ReinitializeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReinitializeResponse> _instance;
} _ReinitializeResponse_default_instance_;
class SearchByAttributesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchByAttributesRequest> _instance;
} _SearchByAttributesRequest_default_instance_;
class SearchByAttributesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SearchByAttributesResponse> _instance;
} _SearchByAttributesResponse_default_instance_;
class StreamExportCsvEntityReportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamExportCsvEntityReportRequest> _instance;
} _StreamExportCsvEntityReportRequest_default_instance_;
class StreamExportCsvEntityReportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamExportCsvEntityReportResponse> _instance;
} _StreamExportCsvEntityReportResponse_default_instance_;
class StreamExportJsonEntityReportRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamExportJsonEntityReportRequest> _instance;
} _StreamExportJsonEntityReportRequest_default_instance_;
class StreamExportJsonEntityReportResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<StreamExportJsonEntityReportResponse> _instance;
} _StreamExportJsonEntityReportResponse_default_instance_;
class WhyEntitiesRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WhyEntitiesRequest> _instance;
} _WhyEntitiesRequest_default_instance_;
class WhyEntitiesResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WhyEntitiesResponse> _instance;
} _WhyEntitiesResponse_default_instance_;
class WhyRecordInEntityRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WhyRecordInEntityRequest> _instance;
} _WhyRecordInEntityRequest_default_instance_;
class WhyRecordInEntityResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WhyRecordInEntityResponse> _instance;
} _WhyRecordInEntityResponse_default_instance_;
class WhyRecordsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WhyRecordsRequest> _instance;
} _WhyRecordsRequest_default_instance_;
class WhyRecordsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WhyRecordsResponse> _instance;
} _WhyRecordsResponse_default_instance_;
}  // namespace szengine
static void InitDefaultsscc_info_AddRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_AddRecordRequest_default_instance_;
    new (ptr) ::szengine::AddRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::AddRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_AddRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_AddRecordResponse_default_instance_;
    new (ptr) ::szengine::AddRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::AddRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_CloseExportRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_CloseExportRequest_default_instance_;
    new (ptr) ::szengine::CloseExportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::CloseExportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloseExportRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CloseExportRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_CloseExportResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_CloseExportResponse_default_instance_;
    new (ptr) ::szengine::CloseExportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::CloseExportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CloseExportResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CloseExportResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_CountRedoRecordsRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_CountRedoRecordsRequest_default_instance_;
    new (ptr) ::szengine::CountRedoRecordsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::CountRedoRecordsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CountRedoRecordsRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CountRedoRecordsRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_CountRedoRecordsResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_CountRedoRecordsResponse_default_instance_;
    new (ptr) ::szengine::CountRedoRecordsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::CountRedoRecordsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CountRedoRecordsResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CountRedoRecordsResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_DeleteRecordRequest_default_instance_;
    new (ptr) ::szengine::DeleteRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::DeleteRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_DeleteRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_DeleteRecordResponse_default_instance_;
    new (ptr) ::szengine::DeleteRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::DeleteRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DeleteRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DeleteRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ExportCsvEntityReportRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ExportCsvEntityReportRequest_default_instance_;
    new (ptr) ::szengine::ExportCsvEntityReportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ExportCsvEntityReportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExportCsvEntityReportRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExportCsvEntityReportRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ExportCsvEntityReportResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ExportCsvEntityReportResponse_default_instance_;
    new (ptr) ::szengine::ExportCsvEntityReportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ExportCsvEntityReportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExportCsvEntityReportResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExportCsvEntityReportResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ExportJsonEntityReportRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ExportJsonEntityReportRequest_default_instance_;
    new (ptr) ::szengine::ExportJsonEntityReportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ExportJsonEntityReportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExportJsonEntityReportRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExportJsonEntityReportRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ExportJsonEntityReportResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ExportJsonEntityReportResponse_default_instance_;
    new (ptr) ::szengine::ExportJsonEntityReportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ExportJsonEntityReportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExportJsonEntityReportResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExportJsonEntityReportResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FetchNextRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FetchNextRequest_default_instance_;
    new (ptr) ::szengine::FetchNextRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FetchNextRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FetchNextRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FetchNextRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FetchNextResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FetchNextResponse_default_instance_;
    new (ptr) ::szengine::FetchNextResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FetchNextResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FetchNextResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FetchNextResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindInterestingEntitiesByEntityIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindInterestingEntitiesByEntityIdRequest_default_instance_;
    new (ptr) ::szengine::FindInterestingEntitiesByEntityIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindInterestingEntitiesByEntityIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindInterestingEntitiesByEntityIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindInterestingEntitiesByEntityIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindInterestingEntitiesByEntityIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindInterestingEntitiesByEntityIdResponse_default_instance_;
    new (ptr) ::szengine::FindInterestingEntitiesByEntityIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindInterestingEntitiesByEntityIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindInterestingEntitiesByEntityIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindInterestingEntitiesByEntityIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindInterestingEntitiesByRecordIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindInterestingEntitiesByRecordIdRequest_default_instance_;
    new (ptr) ::szengine::FindInterestingEntitiesByRecordIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindInterestingEntitiesByRecordIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindInterestingEntitiesByRecordIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindInterestingEntitiesByRecordIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindInterestingEntitiesByRecordIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindInterestingEntitiesByRecordIdResponse_default_instance_;
    new (ptr) ::szengine::FindInterestingEntitiesByRecordIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindInterestingEntitiesByRecordIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindInterestingEntitiesByRecordIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindInterestingEntitiesByRecordIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindNetworkByEntityIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindNetworkByEntityIdRequest_default_instance_;
    new (ptr) ::szengine::FindNetworkByEntityIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindNetworkByEntityIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindNetworkByEntityIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindNetworkByEntityIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindNetworkByEntityIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindNetworkByEntityIdResponse_default_instance_;
    new (ptr) ::szengine::FindNetworkByEntityIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindNetworkByEntityIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindNetworkByEntityIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindNetworkByEntityIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindNetworkByRecordIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindNetworkByRecordIdRequest_default_instance_;
    new (ptr) ::szengine::FindNetworkByRecordIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindNetworkByRecordIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindNetworkByRecordIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindNetworkByRecordIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindNetworkByRecordIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindNetworkByRecordIdResponse_default_instance_;
    new (ptr) ::szengine::FindNetworkByRecordIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindNetworkByRecordIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindNetworkByRecordIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindNetworkByRecordIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindPathByEntityIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindPathByEntityIdRequest_default_instance_;
    new (ptr) ::szengine::FindPathByEntityIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindPathByEntityIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindPathByEntityIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindPathByEntityIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindPathByEntityIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindPathByEntityIdResponse_default_instance_;
    new (ptr) ::szengine::FindPathByEntityIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindPathByEntityIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindPathByEntityIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindPathByEntityIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindPathByRecordIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindPathByRecordIdRequest_default_instance_;
    new (ptr) ::szengine::FindPathByRecordIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindPathByRecordIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindPathByRecordIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindPathByRecordIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_FindPathByRecordIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_FindPathByRecordIdResponse_default_instance_;
    new (ptr) ::szengine::FindPathByRecordIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::FindPathByRecordIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FindPathByRecordIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FindPathByRecordIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetActiveConfigIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetActiveConfigIdRequest_default_instance_;
    new (ptr) ::szengine::GetActiveConfigIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetActiveConfigIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActiveConfigIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetActiveConfigIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetActiveConfigIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetActiveConfigIdResponse_default_instance_;
    new (ptr) ::szengine::GetActiveConfigIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetActiveConfigIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetActiveConfigIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetActiveConfigIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetEntityByEntityIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetEntityByEntityIdRequest_default_instance_;
    new (ptr) ::szengine::GetEntityByEntityIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetEntityByEntityIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEntityByEntityIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEntityByEntityIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetEntityByEntityIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetEntityByEntityIdResponse_default_instance_;
    new (ptr) ::szengine::GetEntityByEntityIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetEntityByEntityIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEntityByEntityIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEntityByEntityIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetEntityByRecordIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetEntityByRecordIdRequest_default_instance_;
    new (ptr) ::szengine::GetEntityByRecordIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetEntityByRecordIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEntityByRecordIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEntityByRecordIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetEntityByRecordIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetEntityByRecordIdResponse_default_instance_;
    new (ptr) ::szengine::GetEntityByRecordIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetEntityByRecordIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetEntityByRecordIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetEntityByRecordIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetRecordRequest_default_instance_;
    new (ptr) ::szengine::GetRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetRecordResponse_default_instance_;
    new (ptr) ::szengine::GetRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetRedoRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetRedoRecordRequest_default_instance_;
    new (ptr) ::szengine::GetRedoRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetRedoRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRedoRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRedoRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetRedoRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetRedoRecordResponse_default_instance_;
    new (ptr) ::szengine::GetRedoRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetRedoRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetRedoRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetRedoRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetStatsRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetStatsRequest_default_instance_;
    new (ptr) ::szengine::GetStatsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetStatsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatsRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStatsRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetStatsResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetStatsResponse_default_instance_;
    new (ptr) ::szengine::GetStatsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetStatsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetStatsResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetStatsResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetVirtualEntityByRecordIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetVirtualEntityByRecordIdRequest_default_instance_;
    new (ptr) ::szengine::GetVirtualEntityByRecordIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetVirtualEntityByRecordIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVirtualEntityByRecordIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVirtualEntityByRecordIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_GetVirtualEntityByRecordIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_GetVirtualEntityByRecordIdResponse_default_instance_;
    new (ptr) ::szengine::GetVirtualEntityByRecordIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::GetVirtualEntityByRecordIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetVirtualEntityByRecordIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetVirtualEntityByRecordIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_HowEntityByEntityIdRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_HowEntityByEntityIdRequest_default_instance_;
    new (ptr) ::szengine::HowEntityByEntityIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::HowEntityByEntityIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HowEntityByEntityIdRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HowEntityByEntityIdRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_HowEntityByEntityIdResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_HowEntityByEntityIdResponse_default_instance_;
    new (ptr) ::szengine::HowEntityByEntityIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::HowEntityByEntityIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HowEntityByEntityIdResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HowEntityByEntityIdResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_PreprocessRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_PreprocessRecordRequest_default_instance_;
    new (ptr) ::szengine::PreprocessRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::PreprocessRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreprocessRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreprocessRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_PreprocessRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_PreprocessRecordResponse_default_instance_;
    new (ptr) ::szengine::PreprocessRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::PreprocessRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PreprocessRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PreprocessRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_PrimeEngineRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_PrimeEngineRequest_default_instance_;
    new (ptr) ::szengine::PrimeEngineRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::PrimeEngineRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrimeEngineRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrimeEngineRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_PrimeEngineResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_PrimeEngineResponse_default_instance_;
    new (ptr) ::szengine::PrimeEngineResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::PrimeEngineResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PrimeEngineResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PrimeEngineResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ProcessRedoRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ProcessRedoRecordRequest_default_instance_;
    new (ptr) ::szengine::ProcessRedoRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ProcessRedoRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessRedoRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProcessRedoRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ProcessRedoRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ProcessRedoRecordResponse_default_instance_;
    new (ptr) ::szengine::ProcessRedoRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ProcessRedoRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ProcessRedoRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ProcessRedoRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ReevaluateEntityRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ReevaluateEntityRequest_default_instance_;
    new (ptr) ::szengine::ReevaluateEntityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ReevaluateEntityRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReevaluateEntityRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReevaluateEntityRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ReevaluateEntityResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ReevaluateEntityResponse_default_instance_;
    new (ptr) ::szengine::ReevaluateEntityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ReevaluateEntityResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReevaluateEntityResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReevaluateEntityResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ReevaluateRecordRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ReevaluateRecordRequest_default_instance_;
    new (ptr) ::szengine::ReevaluateRecordRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ReevaluateRecordRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReevaluateRecordRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReevaluateRecordRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ReevaluateRecordResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ReevaluateRecordResponse_default_instance_;
    new (ptr) ::szengine::ReevaluateRecordResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ReevaluateRecordResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReevaluateRecordResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReevaluateRecordResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ReinitializeRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ReinitializeRequest_default_instance_;
    new (ptr) ::szengine::ReinitializeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ReinitializeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReinitializeRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReinitializeRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_ReinitializeResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_ReinitializeResponse_default_instance_;
    new (ptr) ::szengine::ReinitializeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::ReinitializeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReinitializeResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReinitializeResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_SearchByAttributesRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_SearchByAttributesRequest_default_instance_;
    new (ptr) ::szengine::SearchByAttributesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::SearchByAttributesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SearchByAttributesRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SearchByAttributesRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_SearchByAttributesResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_SearchByAttributesResponse_default_instance_;
    new (ptr) ::szengine::SearchByAttributesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::SearchByAttributesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SearchByAttributesResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SearchByAttributesResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_StreamExportCsvEntityReportRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_StreamExportCsvEntityReportRequest_default_instance_;
    new (ptr) ::szengine::StreamExportCsvEntityReportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::StreamExportCsvEntityReportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamExportCsvEntityReportRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamExportCsvEntityReportRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_StreamExportCsvEntityReportResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_StreamExportCsvEntityReportResponse_default_instance_;
    new (ptr) ::szengine::StreamExportCsvEntityReportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::StreamExportCsvEntityReportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamExportCsvEntityReportResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamExportCsvEntityReportResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_StreamExportJsonEntityReportRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_StreamExportJsonEntityReportRequest_default_instance_;
    new (ptr) ::szengine::StreamExportJsonEntityReportRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::StreamExportJsonEntityReportRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamExportJsonEntityReportRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamExportJsonEntityReportRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_StreamExportJsonEntityReportResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_StreamExportJsonEntityReportResponse_default_instance_;
    new (ptr) ::szengine::StreamExportJsonEntityReportResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::StreamExportJsonEntityReportResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_StreamExportJsonEntityReportResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_StreamExportJsonEntityReportResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_WhyEntitiesRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_WhyEntitiesRequest_default_instance_;
    new (ptr) ::szengine::WhyEntitiesRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::WhyEntitiesRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WhyEntitiesRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WhyEntitiesRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_WhyEntitiesResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_WhyEntitiesResponse_default_instance_;
    new (ptr) ::szengine::WhyEntitiesResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::WhyEntitiesResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WhyEntitiesResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WhyEntitiesResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_WhyRecordInEntityRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_WhyRecordInEntityRequest_default_instance_;
    new (ptr) ::szengine::WhyRecordInEntityRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::WhyRecordInEntityRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WhyRecordInEntityRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WhyRecordInEntityRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_WhyRecordInEntityResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_WhyRecordInEntityResponse_default_instance_;
    new (ptr) ::szengine::WhyRecordInEntityResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::WhyRecordInEntityResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WhyRecordInEntityResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WhyRecordInEntityResponse_szengine_2eproto}, {}};

static void InitDefaultsscc_info_WhyRecordsRequest_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_WhyRecordsRequest_default_instance_;
    new (ptr) ::szengine::WhyRecordsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::WhyRecordsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WhyRecordsRequest_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WhyRecordsRequest_szengine_2eproto}, {}};

static void InitDefaultsscc_info_WhyRecordsResponse_szengine_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szengine::_WhyRecordsResponse_default_instance_;
    new (ptr) ::szengine::WhyRecordsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szengine::WhyRecordsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WhyRecordsResponse_szengine_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_WhyRecordsResponse_szengine_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_szengine_2eproto[66];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_szengine_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_szengine_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_szengine_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, recorddefinition_),
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::AddRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CloseExportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::CloseExportRequest, exporthandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CloseExportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CountRedoRecordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::CountRedoRecordsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::CountRedoRecordsResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::DeleteRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportRequest, csvcolumnlist_),
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportCsvEntityReportResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ExportJsonEntityReportResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextRequest, exporthandle_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FetchNextResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdRequest, entityid_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByEntityIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindInterestingEntitiesByRecordIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, entityids_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, maxdegrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, buildoutdegrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, buildoutmaxentities_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByEntityIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, recordkeys_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, maxdegrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, buildoutdegrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, buildoutmaxentities_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindNetworkByRecordIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, startentityid_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, endentityid_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, maxdegrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, avoidentityids_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, requireddatasources_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByEntityIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, startdatasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, startrecordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, enddatasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, endrecordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, maxdegrees_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, avoidrecordkeys_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, requireddatasources_),
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::FindPathByRecordIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetActiveConfigIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetActiveConfigIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetActiveConfigIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdRequest, entityid_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByEntityIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetEntityByRecordIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRedoRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRedoRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetRedoRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetStatsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetStatsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetStatsResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdRequest, recordkeys_),
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::GetVirtualEntityByRecordIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdRequest, entityid_),
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::HowEntityByEntityIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordRequest, recorddefinition_),
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::PreprocessRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PrimeEngineRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::PrimeEngineResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordRequest, redorecord_),
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ProcessRedoRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityRequest, entityid_),
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateEntityResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ReevaluateRecordResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReinitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::ReinitializeRequest, configid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::ReinitializeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, attributes_),
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, searchprofile_),
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::SearchByAttributesResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportRequest, csvcolumnlist_),
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportCsvEntityReportResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::StreamExportJsonEntityReportResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, entityid1_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, entityid2_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyEntitiesResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, datasourcecode_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, recordid_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordInEntityResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, datasourcecode1_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, recordid1_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, datasourcecode2_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, recordid2_),
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsRequest, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szengine::WhyRecordsResponse, result_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::szengine::AddRecordRequest)},
  { 9, -1, sizeof(::szengine::AddRecordResponse)},
  { 15, -1, sizeof(::szengine::CloseExportRequest)},
  { 21, -1, sizeof(::szengine::CloseExportResponse)},
  { 26, -1, sizeof(::szengine::CountRedoRecordsRequest)},
  { 31, -1, sizeof(::szengine::CountRedoRecordsResponse)},
  { 37, -1, sizeof(::szengine::DeleteRecordRequest)},
  { 45, -1, sizeof(::szengine::DeleteRecordResponse)},
  { 51, -1, sizeof(::szengine::ExportCsvEntityReportRequest)},
  { 58, -1, sizeof(::szengine::ExportCsvEntityReportResponse)},
  { 64, -1, sizeof(::szengine::ExportJsonEntityReportRequest)},
  { 70, -1, sizeof(::szengine::ExportJsonEntityReportResponse)},
  { 76, -1, sizeof(::szengine::FetchNextRequest)},
  { 82, -1, sizeof(::szengine::FetchNextResponse)},
  { 88, -1, sizeof(::szengine::FindInterestingEntitiesByEntityIdRequest)},
  { 95, -1, sizeof(::szengine::FindInterestingEntitiesByEntityIdResponse)},
  { 101, -1, sizeof(::szengine::FindInterestingEntitiesByRecordIdRequest)},
  { 109, -1, sizeof(::szengine::FindInterestingEntitiesByRecordIdResponse)},
  { 115, -1, sizeof(::szengine::FindNetworkByEntityIdRequest)},
  { 125, -1, sizeof(::szengine::FindNetworkByEntityIdResponse)},
  { 131, -1, sizeof(::szengine::FindNetworkByRecordIdRequest)},
  { 141, -1, sizeof(::szengine::FindNetworkByRecordIdResponse)},
  { 147, -1, sizeof(::szengine::FindPathByEntityIdRequest)},
  { 158, -1, sizeof(::szengine::FindPathByEntityIdResponse)},
  { 164, -1, sizeof(::szengine::FindPathByRecordIdRequest)},
  { 177, -1, sizeof(::szengine::FindPathByRecordIdResponse)},
  { 183, -1, sizeof(::szengine::GetActiveConfigIdRequest)},
  { 188, -1, sizeof(::szengine::GetActiveConfigIdResponse)},
  { 194, -1, sizeof(::szengine::GetEntityByEntityIdRequest)},
  { 201, -1, sizeof(::szengine::GetEntityByEntityIdResponse)},
  { 207, -1, sizeof(::szengine::GetEntityByRecordIdRequest)},
  { 215, -1, sizeof(::szengine::GetEntityByRecordIdResponse)},
  { 221, -1, sizeof(::szengine::GetRecordRequest)},
  { 229, -1, sizeof(::szengine::GetRecordResponse)},
  { 235, -1, sizeof(::szengine::GetRedoRecordRequest)},
  { 240, -1, sizeof(::szengine::GetRedoRecordResponse)},
  { 246, -1, sizeof(::szengine::GetStatsRequest)},
  { 251, -1, sizeof(::szengine::GetStatsResponse)},
  { 257, -1, sizeof(::szengine::GetVirtualEntityByRecordIdRequest)},
  { 264, -1, sizeof(::szengine::GetVirtualEntityByRecordIdResponse)},
  { 270, -1, sizeof(::szengine::HowEntityByEntityIdRequest)},
  { 277, -1, sizeof(::szengine::HowEntityByEntityIdResponse)},
  { 283, -1, sizeof(::szengine::PreprocessRecordRequest)},
  { 290, -1, sizeof(::szengine::PreprocessRecordResponse)},
  { 296, -1, sizeof(::szengine::PrimeEngineRequest)},
  { 301, -1, sizeof(::szengine::PrimeEngineResponse)},
  { 306, -1, sizeof(::szengine::ProcessRedoRecordRequest)},
  { 313, -1, sizeof(::szengine::ProcessRedoRecordResponse)},
  { 319, -1, sizeof(::szengine::ReevaluateEntityRequest)},
  { 326, -1, sizeof(::szengine::ReevaluateEntityResponse)},
  { 332, -1, sizeof(::szengine::ReevaluateRecordRequest)},
  { 340, -1, sizeof(::szengine::ReevaluateRecordResponse)},
  { 346, -1, sizeof(::szengine::ReinitializeRequest)},
  { 352, -1, sizeof(::szengine::ReinitializeResponse)},
  { 357, -1, sizeof(::szengine::SearchByAttributesRequest)},
  { 365, -1, sizeof(::szengine::SearchByAttributesResponse)},
  { 371, -1, sizeof(::szengine::StreamExportCsvEntityReportRequest)},
  { 378, -1, sizeof(::szengine::StreamExportCsvEntityReportResponse)},
  { 384, -1, sizeof(::szengine::StreamExportJsonEntityReportRequest)},
  { 390, -1, sizeof(::szengine::StreamExportJsonEntityReportResponse)},
  { 396, -1, sizeof(::szengine::WhyEntitiesRequest)},
  { 404, -1, sizeof(::szengine::WhyEntitiesResponse)},
  { 410, -1, sizeof(::szengine::WhyRecordInEntityRequest)},
  { 418, -1, sizeof(::szengine::WhyRecordInEntityResponse)},
  { 424, -1, sizeof(::szengine::WhyRecordsRequest)},
  { 434, -1, sizeof(::szengine::WhyRecordsResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_AddRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_AddRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_CloseExportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_CloseExportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_CountRedoRecordsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_CountRedoRecordsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_DeleteRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_DeleteRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ExportCsvEntityReportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ExportCsvEntityReportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ExportJsonEntityReportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ExportJsonEntityReportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FetchNextRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FetchNextResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindInterestingEntitiesByEntityIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindInterestingEntitiesByEntityIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindInterestingEntitiesByRecordIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindInterestingEntitiesByRecordIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindNetworkByEntityIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindNetworkByEntityIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindNetworkByRecordIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindNetworkByRecordIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindPathByEntityIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindPathByEntityIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindPathByRecordIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_FindPathByRecordIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetActiveConfigIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetActiveConfigIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetEntityByEntityIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetEntityByEntityIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetEntityByRecordIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetEntityByRecordIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetRedoRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetRedoRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetStatsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetStatsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetVirtualEntityByRecordIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_GetVirtualEntityByRecordIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_HowEntityByEntityIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_HowEntityByEntityIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_PreprocessRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_PreprocessRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_PrimeEngineRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_PrimeEngineResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ProcessRedoRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ProcessRedoRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ReevaluateEntityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ReevaluateEntityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ReevaluateRecordRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ReevaluateRecordResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ReinitializeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_ReinitializeResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_SearchByAttributesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_SearchByAttributesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_StreamExportCsvEntityReportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_StreamExportCsvEntityReportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_StreamExportJsonEntityReportRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_StreamExportJsonEntityReportResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_WhyEntitiesRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_WhyEntitiesResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_WhyRecordInEntityRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_WhyRecordInEntityResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_WhyRecordsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szengine::_WhyRecordsResponse_default_instance_),
};

const char descriptor_table_protodef_szengine_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016szengine.proto\022\010szengine\"e\n\020AddRecordR"
  "equest\022\026\n\016dataSourceCode\030\001 \001(\t\022\020\n\010record"
  "Id\030\002 \001(\t\022\030\n\020recordDefinition\030\003 \001(\t\022\r\n\005fl"
  "ags\030\004 \001(\003\"#\n\021AddRecordResponse\022\016\n\006result"
  "\030\001 \001(\t\"*\n\022CloseExportRequest\022\024\n\014exportHa"
  "ndle\030\001 \001(\003\"\025\n\023CloseExportResponse\"\031\n\027Cou"
  "ntRedoRecordsRequest\"*\n\030CountRedoRecords"
  "Response\022\016\n\006result\030\001 \001(\003\"N\n\023DeleteRecord"
  "Request\022\026\n\016dataSourceCode\030\001 \001(\t\022\020\n\010recor"
  "dId\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"&\n\024DeleteRecord"
  "Response\022\016\n\006result\030\001 \001(\t\"D\n\034ExportCsvEnt"
  "ityReportRequest\022\025\n\rcsvColumnList\030\001 \001(\t\022"
  "\r\n\005flags\030\002 \001(\003\"/\n\035ExportCsvEntityReportR"
  "esponse\022\016\n\006result\030\001 \001(\003\".\n\035ExportJsonEnt"
  "ityReportRequest\022\r\n\005flags\030\001 \001(\003\"0\n\036Expor"
  "tJsonEntityReportResponse\022\016\n\006result\030\001 \001("
  "\003\"(\n\020FetchNextRequest\022\024\n\014exportHandle\030\001 "
  "\001(\003\"#\n\021FetchNextResponse\022\016\n\006result\030\001 \001(\t"
  "\"K\n(FindInterestingEntitiesByEntityIdReq"
  "uest\022\020\n\010entityId\030\001 \001(\003\022\r\n\005flags\030\002 \001(\003\";\n"
  ")FindInterestingEntitiesByEntityIdRespon"
  "se\022\016\n\006result\030\001 \001(\t\"c\n(FindInterestingEnt"
  "itiesByRecordIdRequest\022\026\n\016dataSourceCode"
  "\030\001 \001(\t\022\020\n\010recordId\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\""
  ";\n)FindInterestingEntitiesByRecordIdResp"
  "onse\022\016\n\006result\030\001 \001(\t\"\212\001\n\034FindNetworkByEn"
  "tityIdRequest\022\021\n\tentityIds\030\001 \001(\t\022\022\n\nmaxD"
  "egrees\030\002 \001(\003\022\027\n\017buildOutDegrees\030\003 \001(\003\022\033\n"
  "\023buildOutMaxEntities\030\004 \001(\003\022\r\n\005flags\030\005 \001("
  "\003\"/\n\035FindNetworkByEntityIdResponse\022\016\n\006re"
  "sult\030\001 \001(\t\"\213\001\n\034FindNetworkByRecordIdRequ"
  "est\022\022\n\nrecordKeys\030\001 \001(\t\022\022\n\nmaxDegrees\030\002 "
  "\001(\003\022\027\n\017buildOutDegrees\030\003 \001(\003\022\033\n\023buildOut"
  "MaxEntities\030\004 \001(\003\022\r\n\005flags\030\005 \001(\003\"/\n\035Find"
  "NetworkByRecordIdResponse\022\016\n\006result\030\001 \001("
  "\t\"\237\001\n\031FindPathByEntityIdRequest\022\025\n\rstart"
  "EntityId\030\001 \001(\003\022\023\n\013endEntityId\030\002 \001(\003\022\022\n\nm"
  "axDegrees\030\003 \001(\003\022\026\n\016avoidEntityIds\030\004 \001(\t\022"
  "\033\n\023requiredDataSources\030\005 \001(\t\022\r\n\005flags\030\006 "
  "\001(\003\",\n\032FindPathByEntityIdResponse\022\016\n\006res"
  "ult\030\001 \001(\t\"\330\001\n\031FindPathByRecordIdRequest\022"
  "\033\n\023startDataSourceCode\030\001 \001(\t\022\025\n\rstartRec"
  "ordId\030\002 \001(\t\022\031\n\021endDataSourceCode\030\003 \001(\t\022\023"
  "\n\013endRecordId\030\004 \001(\t\022\022\n\nmaxDegrees\030\005 \001(\003\022"
  "\027\n\017avoidRecordKeys\030\006 \001(\t\022\033\n\023requiredData"
  "Sources\030\007 \001(\t\022\r\n\005flags\030\010 \001(\003\",\n\032FindPath"
  "ByRecordIdResponse\022\016\n\006result\030\001 \001(\t\"\032\n\030Ge"
  "tActiveConfigIdRequest\"+\n\031GetActiveConfi"
  "gIdResponse\022\016\n\006result\030\001 \001(\003\"=\n\032GetEntity"
  "ByEntityIdRequest\022\020\n\010entityId\030\001 \001(\003\022\r\n\005f"
  "lags\030\002 \001(\003\"-\n\033GetEntityByEntityIdRespons"
  "e\022\016\n\006result\030\001 \001(\t\"U\n\032GetEntityByRecordId"
  "Request\022\026\n\016dataSourceCode\030\001 \001(\t\022\020\n\010recor"
  "dId\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"-\n\033GetEntityByR"
  "ecordIdResponse\022\016\n\006result\030\001 \001(\t\"K\n\020GetRe"
  "cordRequest\022\026\n\016dataSourceCode\030\001 \001(\t\022\020\n\010r"
  "ecordId\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"#\n\021GetRecor"
  "dResponse\022\016\n\006result\030\001 \001(\t\"\026\n\024GetRedoReco"
  "rdRequest\"\'\n\025GetRedoRecordResponse\022\016\n\006re"
  "sult\030\001 \001(\t\"\021\n\017GetStatsRequest\"\"\n\020GetStat"
  "sResponse\022\016\n\006result\030\001 \001(\t\"F\n!GetVirtualE"
  "ntityByRecordIdRequest\022\022\n\nrecordKeys\030\001 \001"
  "(\t\022\r\n\005flags\030\002 \001(\003\"4\n\"GetVirtualEntityByR"
  "ecordIdResponse\022\016\n\006result\030\001 \001(\t\"=\n\032HowEn"
  "tityByEntityIdRequest\022\020\n\010entityId\030\001 \001(\003\022"
  "\r\n\005flags\030\002 \001(\003\"-\n\033HowEntityByEntityIdRes"
  "ponse\022\016\n\006result\030\001 \001(\t\"B\n\027PreprocessRecor"
  "dRequest\022\030\n\020recordDefinition\030\001 \001(\t\022\r\n\005fl"
  "ags\030\002 \001(\003\"*\n\030PreprocessRecordResponse\022\016\n"
  "\006result\030\001 \001(\t\"\024\n\022PrimeEngineRequest\"\025\n\023P"
  "rimeEngineResponse\"=\n\030ProcessRedoRecordR"
  "equest\022\022\n\nredoRecord\030\001 \001(\t\022\r\n\005flags\030\002 \001("
  "\003\"+\n\031ProcessRedoRecordResponse\022\016\n\006result"
  "\030\001 \001(\t\":\n\027ReevaluateEntityRequest\022\020\n\010ent"
  "ityId\030\001 \001(\003\022\r\n\005flags\030\002 \001(\003\"*\n\030Reevaluate"
  "EntityResponse\022\016\n\006result\030\001 \001(\t\"R\n\027Reeval"
  "uateRecordRequest\022\026\n\016dataSourceCode\030\001 \001("
  "\t\022\020\n\010recordId\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"*\n\030Re"
  "evaluateRecordResponse\022\016\n\006result\030\001 \001(\t\"\'"
  "\n\023ReinitializeRequest\022\020\n\010configId\030\001 \001(\003\""
  "\026\n\024ReinitializeResponse\"U\n\031SearchByAttri"
  "butesRequest\022\022\n\nattributes\030\001 \001(\t\022\025\n\rsear"
  "chProfile\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\",\n\032Search"
  "ByAttributesResponse\022\016\n\006result\030\001 \001(\t\"J\n\""
  "StreamExportCsvEntityReportRequest\022\025\n\rcs"
  "vColumnList\030\001 \001(\t\022\r\n\005flags\030\002 \001(\003\"5\n#Stre"
  "amExportCsvEntityReportResponse\022\016\n\006resul"
  "t\030\001 \001(\t\"4\n#StreamExportJsonEntityReportR"
  "equest\022\r\n\005flags\030\001 \001(\003\"6\n$StreamExportJso"
  "nEntityReportResponse\022\016\n\006result\030\001 \001(\t\"I\n"
  "\022WhyEntitiesRequest\022\021\n\tentityId1\030\001 \001(\003\022\021"
  "\n\tentityId2\030\002 \001(\003\022\r\n\005flags\030\003 \001(\003\"%\n\023WhyE"
  "ntitiesResponse\022\016\n\006result\030\001 \001(\t\"S\n\030WhyRe"
  "cordInEntityRequest\022\026\n\016dataSourceCode\030\001 "
  "\001(\t\022\020\n\010recordId\030\002 \001(\t\022\r\n\005flags\030\003 \001(\003\"+\n\031"
  "WhyRecordInEntityResponse\022\016\n\006result\030\001 \001("
  "\t\"z\n\021WhyRecordsRequest\022\027\n\017dataSourceCode"
  "1\030\001 \001(\t\022\021\n\trecordId1\030\002 \001(\t\022\027\n\017dataSource"
  "Code2\030\003 \001(\t\022\021\n\trecordId2\030\004 \001(\t\022\r\n\005flags\030"
  "\005 \001(\003\"$\n\022WhyRecordsResponse\022\016\n\006result\030\001 "
  "\001(\t2\225\031\n\010SzEngine\022F\n\tAddRecord\022\032.szengine"
  ".AddRecordRequest\032\033.szengine.AddRecordRe"
  "sponse\"\000\022L\n\013CloseExport\022\034.szengine.Close"
  "ExportRequest\032\035.szengine.CloseExportResp"
  "onse\"\000\022[\n\020CountRedoRecords\022!.szengine.Co"
  "untRedoRecordsRequest\032\".szengine.CountRe"
  "doRecordsResponse\"\000\022O\n\014DeleteRecord\022\035.sz"
  "engine.DeleteRecordRequest\032\036.szengine.De"
  "leteRecordResponse\"\000\022j\n\025ExportCsvEntityR"
  "eport\022&.szengine.ExportCsvEntityReportRe"
  "quest\032\'.szengine.ExportCsvEntityReportRe"
  "sponse\"\000\022m\n\026ExportJsonEntityReport\022\'.sze"
  "ngine.ExportJsonEntityReportRequest\032(.sz"
  "engine.ExportJsonEntityReportResponse\"\000\022"
  "F\n\tFetchNext\022\032.szengine.FetchNextRequest"
  "\032\033.szengine.FetchNextResponse\"\000\022\216\001\n!Find"
  "InterestingEntitiesByEntityId\0222.szengine"
  ".FindInterestingEntitiesByEntityIdReques"
  "t\0323.szengine.FindInterestingEntitiesByEn"
  "tityIdResponse\"\000\022\216\001\n!FindInterestingEnti"
  "tiesByRecordId\0222.szengine.FindInterestin"
  "gEntitiesByRecordIdRequest\0323.szengine.Fi"
  "ndInterestingEntitiesByRecordIdResponse\""
  "\000\022j\n\025FindNetworkByEntityId\022&.szengine.Fi"
  "ndNetworkByEntityIdRequest\032\'.szengine.Fi"
  "ndNetworkByEntityIdResponse\"\000\022j\n\025FindNet"
  "workByRecordId\022&.szengine.FindNetworkByR"
  "ecordIdRequest\032\'.szengine.FindNetworkByR"
  "ecordIdResponse\"\000\022a\n\022FindPathByEntityId\022"
  "#.szengine.FindPathByEntityIdRequest\032$.s"
  "zengine.FindPathByEntityIdResponse\"\000\022a\n\022"
  "FindPathByRecordId\022#.szengine.FindPathBy"
  "RecordIdRequest\032$.szengine.FindPathByRec"
  "ordIdResponse\"\000\022^\n\021GetActiveConfigId\022\".s"
  "zengine.GetActiveConfigIdRequest\032#.szeng"
  "ine.GetActiveConfigIdResponse\"\000\022d\n\023GetEn"
  "tityByEntityId\022$.szengine.GetEntityByEnt"
  "ityIdRequest\032%.szengine.GetEntityByEntit"
  "yIdResponse\"\000\022d\n\023GetEntityByRecordId\022$.s"
  "zengine.GetEntityByRecordIdRequest\032%.sze"
  "ngine.GetEntityByRecordIdResponse\"\000\022F\n\tG"
  "etRecord\022\032.szengine.GetRecordRequest\032\033.s"
  "zengine.GetRecordResponse\"\000\022R\n\rGetRedoRe"
  "cord\022\036.szengine.GetRedoRecordRequest\032\037.s"
  "zengine.GetRedoRecordResponse\"\000\022C\n\010GetSt"
  "ats\022\031.szengine.GetStatsRequest\032\032.szengin"
  "e.GetStatsResponse\"\000\022y\n\032GetVirtualEntity"
  "ByRecordId\022+.szengine.GetVirtualEntityBy"
  "RecordIdRequest\032,.szengine.GetVirtualEnt"
  "ityByRecordIdResponse\"\000\022d\n\023HowEntityByEn"
  "tityId\022$.szengine.HowEntityByEntityIdReq"
  "uest\032%.szengine.HowEntityByEntityIdRespo"
  "nse\"\000\022[\n\020PreprocessRecord\022!.szengine.Pre"
  "processRecordRequest\032\".szengine.Preproce"
  "ssRecordResponse\"\000\022L\n\013PrimeEngine\022\034.szen"
  "gine.PrimeEngineRequest\032\035.szengine.Prime"
  "EngineResponse\"\000\022^\n\021ProcessRedoRecord\022\"."
  "szengine.ProcessRedoRecordRequest\032#.szen"
  "gine.ProcessRedoRecordResponse\"\000\022[\n\020Reev"
  "aluateEntity\022!.szengine.ReevaluateEntity"
  "Request\032\".szengine.ReevaluateEntityRespo"
  "nse\"\000\022[\n\020ReevaluateRecord\022!.szengine.Ree"
  "valuateRecordRequest\032\".szengine.Reevalua"
  "teRecordResponse\"\000\022O\n\014Reinitialize\022\035.sze"
  "ngine.ReinitializeRequest\032\036.szengine.Rei"
  "nitializeResponse\"\000\022a\n\022SearchByAttribute"
  "s\022#.szengine.SearchByAttributesRequest\032$"
  ".szengine.SearchByAttributesResponse\"\000\022~"
  "\n\033StreamExportCsvEntityReport\022,.szengine"
  ".StreamExportCsvEntityReportRequest\032-.sz"
  "engine.StreamExportCsvEntityReportRespon"
  "se\"\0000\001\022\201\001\n\034StreamExportJsonEntityReport\022"
  "-.szengine.StreamExportJsonEntityReportR"
  "equest\032..szengine.StreamExportJsonEntity"
  "ReportResponse\"\0000\001\022L\n\013WhyEntities\022\034.szen"
  "gine.WhyEntitiesRequest\032\035.szengine.WhyEn"
  "titiesResponse\"\000\022^\n\021WhyRecordInEntity\022\"."
  "szengine.WhyRecordInEntityRequest\032#.szen"
  "gine.WhyRecordInEntityResponse\"\000\022I\n\nWhyR"
  "ecords\022\033.szengine.WhyRecordsRequest\032\034.sz"
  "engine.WhyRecordsResponse\"\000Bg\n#com.senzi"
  "ng.sz.engine.grpc.SzEngineB\rSzEngineProt"
  "oZ1github.com/senzing-garage/sz-sdk-go-g"
  "rpc/szengineb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_szengine_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_szengine_2eproto_sccs[66] = {
  &scc_info_AddRecordRequest_szengine_2eproto.base,
  &scc_info_AddRecordResponse_szengine_2eproto.base,
  &scc_info_CloseExportRequest_szengine_2eproto.base,
  &scc_info_CloseExportResponse_szengine_2eproto.base,
  &scc_info_CountRedoRecordsRequest_szengine_2eproto.base,
  &scc_info_CountRedoRecordsResponse_szengine_2eproto.base,
  &scc_info_DeleteRecordRequest_szengine_2eproto.base,
  &scc_info_DeleteRecordResponse_szengine_2eproto.base,
  &scc_info_ExportCsvEntityReportRequest_szengine_2eproto.base,
  &scc_info_ExportCsvEntityReportResponse_szengine_2eproto.base,
  &scc_info_ExportJsonEntityReportRequest_szengine_2eproto.base,
  &scc_info_ExportJsonEntityReportResponse_szengine_2eproto.base,
  &scc_info_FetchNextRequest_szengine_2eproto.base,
  &scc_info_FetchNextResponse_szengine_2eproto.base,
  &scc_info_FindInterestingEntitiesByEntityIdRequest_szengine_2eproto.base,
  &scc_info_FindInterestingEntitiesByEntityIdResponse_szengine_2eproto.base,
  &scc_info_FindInterestingEntitiesByRecordIdRequest_szengine_2eproto.base,
  &scc_info_FindInterestingEntitiesByRecordIdResponse_szengine_2eproto.base,
  &scc_info_FindNetworkByEntityIdRequest_szengine_2eproto.base,
  &scc_info_FindNetworkByEntityIdResponse_szengine_2eproto.base,
  &scc_info_FindNetworkByRecordIdRequest_szengine_2eproto.base,
  &scc_info_FindNetworkByRecordIdResponse_szengine_2eproto.base,
  &scc_info_FindPathByEntityIdRequest_szengine_2eproto.base,
  &scc_info_FindPathByEntityIdResponse_szengine_2eproto.base,
  &scc_info_FindPathByRecordIdRequest_szengine_2eproto.base,
  &scc_info_FindPathByRecordIdResponse_szengine_2eproto.base,
  &scc_info_GetActiveConfigIdRequest_szengine_2eproto.base,
  &scc_info_GetActiveConfigIdResponse_szengine_2eproto.base,
  &scc_info_GetEntityByEntityIdRequest_szengine_2eproto.base,
  &scc_info_GetEntityByEntityIdResponse_szengine_2eproto.base,
  &scc_info_GetEntityByRecordIdRequest_szengine_2eproto.base,
  &scc_info_GetEntityByRecordIdResponse_szengine_2eproto.base,
  &scc_info_GetRecordRequest_szengine_2eproto.base,
  &scc_info_GetRecordResponse_szengine_2eproto.base,
  &scc_info_GetRedoRecordRequest_szengine_2eproto.base,
  &scc_info_GetRedoRecordResponse_szengine_2eproto.base,
  &scc_info_GetStatsRequest_szengine_2eproto.base,
  &scc_info_GetStatsResponse_szengine_2eproto.base,
  &scc_info_GetVirtualEntityByRecordIdRequest_szengine_2eproto.base,
  &scc_info_GetVirtualEntityByRecordIdResponse_szengine_2eproto.base,
  &scc_info_HowEntityByEntityIdRequest_szengine_2eproto.base,
  &scc_info_HowEntityByEntityIdResponse_szengine_2eproto.base,
  &scc_info_PreprocessRecordRequest_szengine_2eproto.base,
  &scc_info_PreprocessRecordResponse_szengine_2eproto.base,
  &scc_info_PrimeEngineRequest_szengine_2eproto.base,
  &scc_info_PrimeEngineResponse_szengine_2eproto.base,
  &scc_info_ProcessRedoRecordRequest_szengine_2eproto.base,
  &scc_info_ProcessRedoRecordResponse_szengine_2eproto.base,
  &scc_info_ReevaluateEntityRequest_szengine_2eproto.base,
  &scc_info_ReevaluateEntityResponse_szengine_2eproto.base,
  &scc_info_ReevaluateRecordRequest_szengine_2eproto.base,
  &scc_info_ReevaluateRecordResponse_szengine_2eproto.base,
  &scc_info_ReinitializeRequest_szengine_2eproto.base,
  &scc_info_ReinitializeResponse_szengine_2eproto.base,
  &scc_info_SearchByAttributesRequest_szengine_2eproto.base,
  &scc_info_SearchByAttributesResponse_szengine_2eproto.base,
  &scc_info_StreamExportCsvEntityReportRequest_szengine_2eproto.base,
  &scc_info_StreamExportCsvEntityReportResponse_szengine_2eproto.base,
  &scc_info_StreamExportJsonEntityReportRequest_szengine_2eproto.base,
  &scc_info_StreamExportJsonEntityReportResponse_szengine_2eproto.base,
  &scc_info_WhyEntitiesRequest_szengine_2eproto.base,
  &scc_info_WhyEntitiesResponse_szengine_2eproto.base,
  &scc_info_WhyRecordInEntityRequest_szengine_2eproto.base,
  &scc_info_WhyRecordInEntityResponse_szengine_2eproto.base,
  &scc_info_WhyRecordsRequest_szengine_2eproto.base,
  &scc_info_WhyRecordsResponse_szengine_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_szengine_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_szengine_2eproto = {
  false, false, descriptor_table_protodef_szengine_2eproto, "szengine.proto", 7340,
  &descriptor_table_szengine_2eproto_once, descriptor_table_szengine_2eproto_sccs, descriptor_table_szengine_2eproto_deps, 66, 0,
  schemas, file_default_instances, TableStruct_szengine_2eproto::offsets,
  file_level_metadata_szengine_2eproto, 66, file_level_enum_descriptors_szengine_2eproto, file_level_service_descriptors_szengine_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_szengine_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_szengine_2eproto)), true);
namespace szengine {

// ===================================================================

void AddRecordRequest::InitAsDefaultInstance() {
}
class AddRecordRequest::_Internal {
 public:
};

AddRecordRequest::AddRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.AddRecordRequest)
}
AddRecordRequest::AddRecordRequest(const AddRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  recorddefinition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recorddefinition().empty()) {
    recorddefinition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recorddefinition(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.AddRecordRequest)
}

void AddRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRecordRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recorddefinition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

AddRecordRequest::~AddRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.AddRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recorddefinition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRecordRequest::ArenaDtor(void* object) {
  AddRecordRequest* _this = reinterpret_cast< AddRecordRequest* >(object);
  (void)_this;
}
void AddRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRecordRequest& AddRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void AddRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.AddRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recorddefinition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.AddRecordRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.AddRecordRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordDefinition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_recorddefinition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.AddRecordRequest.recordDefinition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.AddRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // string recordDefinition = 3;
  if (this->recorddefinition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recorddefinition().data(), static_cast<int>(this->_internal_recorddefinition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordRequest.recordDefinition");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_recorddefinition(), target);
  }

  // int64 flags = 4;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.AddRecordRequest)
  return target;
}

size_t AddRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.AddRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // string recordDefinition = 3;
  if (this->recorddefinition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recorddefinition());
  }

  // int64 flags = 4;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.AddRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.AddRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.AddRecordRequest)
    MergeFrom(*source);
  }
}

void AddRecordRequest::MergeFrom(const AddRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.AddRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.recorddefinition().size() > 0) {
    _internal_set_recorddefinition(from._internal_recorddefinition());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void AddRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.AddRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRecordRequest::CopyFrom(const AddRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.AddRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRecordRequest::IsInitialized() const {
  return true;
}

void AddRecordRequest::InternalSwap(AddRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recorddefinition_.Swap(&other->recorddefinition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddRecordResponse::InitAsDefaultInstance() {
}
class AddRecordResponse::_Internal {
 public:
};

AddRecordResponse::AddRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.AddRecordResponse)
}
AddRecordResponse::AddRecordResponse(const AddRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.AddRecordResponse)
}

void AddRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddRecordResponse::~AddRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.AddRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRecordResponse::ArenaDtor(void* object) {
  AddRecordResponse* _this = reinterpret_cast< AddRecordResponse* >(object);
  (void)_this;
}
void AddRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRecordResponse& AddRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void AddRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.AddRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.AddRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.AddRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.AddRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.AddRecordResponse)
  return target;
}

size_t AddRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.AddRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.AddRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.AddRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.AddRecordResponse)
    MergeFrom(*source);
  }
}

void AddRecordResponse::MergeFrom(const AddRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.AddRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.AddRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRecordResponse::CopyFrom(const AddRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.AddRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRecordResponse::IsInitialized() const {
  return true;
}

void AddRecordResponse::InternalSwap(AddRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloseExportRequest::InitAsDefaultInstance() {
}
class CloseExportRequest::_Internal {
 public:
};

CloseExportRequest::CloseExportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.CloseExportRequest)
}
CloseExportRequest::CloseExportRequest(const CloseExportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  exporthandle_ = from.exporthandle_;
  // @@protoc_insertion_point(copy_constructor:szengine.CloseExportRequest)
}

void CloseExportRequest::SharedCtor() {
  exporthandle_ = PROTOBUF_LONGLONG(0);
}

CloseExportRequest::~CloseExportRequest() {
  // @@protoc_insertion_point(destructor:szengine.CloseExportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CloseExportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CloseExportRequest::ArenaDtor(void* object) {
  CloseExportRequest* _this = reinterpret_cast< CloseExportRequest* >(object);
  (void)_this;
}
void CloseExportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloseExportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloseExportRequest& CloseExportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloseExportRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void CloseExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.CloseExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exporthandle_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloseExportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 exportHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          exporthandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloseExportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.CloseExportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 exportHandle = 1;
  if (this->exporthandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_exporthandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.CloseExportRequest)
  return target;
}

size_t CloseExportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.CloseExportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 exportHandle = 1;
  if (this->exporthandle() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_exporthandle());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseExportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.CloseExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseExportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloseExportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.CloseExportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.CloseExportRequest)
    MergeFrom(*source);
  }
}

void CloseExportRequest::MergeFrom(const CloseExportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.CloseExportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exporthandle() != 0) {
    _internal_set_exporthandle(from._internal_exporthandle());
  }
}

void CloseExportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.CloseExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseExportRequest::CopyFrom(const CloseExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.CloseExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseExportRequest::IsInitialized() const {
  return true;
}

void CloseExportRequest::InternalSwap(CloseExportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(exporthandle_, other->exporthandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseExportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CloseExportResponse::InitAsDefaultInstance() {
}
class CloseExportResponse::_Internal {
 public:
};

CloseExportResponse::CloseExportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.CloseExportResponse)
}
CloseExportResponse::CloseExportResponse(const CloseExportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.CloseExportResponse)
}

void CloseExportResponse::SharedCtor() {
}

CloseExportResponse::~CloseExportResponse() {
  // @@protoc_insertion_point(destructor:szengine.CloseExportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CloseExportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CloseExportResponse::ArenaDtor(void* object) {
  CloseExportResponse* _this = reinterpret_cast< CloseExportResponse* >(object);
  (void)_this;
}
void CloseExportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CloseExportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CloseExportResponse& CloseExportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CloseExportResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void CloseExportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.CloseExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CloseExportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CloseExportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.CloseExportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.CloseExportResponse)
  return target;
}

size_t CloseExportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.CloseExportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CloseExportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.CloseExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CloseExportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CloseExportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.CloseExportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.CloseExportResponse)
    MergeFrom(*source);
  }
}

void CloseExportResponse::MergeFrom(const CloseExportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.CloseExportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CloseExportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.CloseExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CloseExportResponse::CopyFrom(const CloseExportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.CloseExportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CloseExportResponse::IsInitialized() const {
  return true;
}

void CloseExportResponse::InternalSwap(CloseExportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CloseExportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CountRedoRecordsRequest::InitAsDefaultInstance() {
}
class CountRedoRecordsRequest::_Internal {
 public:
};

CountRedoRecordsRequest::CountRedoRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.CountRedoRecordsRequest)
}
CountRedoRecordsRequest::CountRedoRecordsRequest(const CountRedoRecordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.CountRedoRecordsRequest)
}

void CountRedoRecordsRequest::SharedCtor() {
}

CountRedoRecordsRequest::~CountRedoRecordsRequest() {
  // @@protoc_insertion_point(destructor:szengine.CountRedoRecordsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CountRedoRecordsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CountRedoRecordsRequest::ArenaDtor(void* object) {
  CountRedoRecordsRequest* _this = reinterpret_cast< CountRedoRecordsRequest* >(object);
  (void)_this;
}
void CountRedoRecordsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CountRedoRecordsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CountRedoRecordsRequest& CountRedoRecordsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CountRedoRecordsRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void CountRedoRecordsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.CountRedoRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CountRedoRecordsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CountRedoRecordsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.CountRedoRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.CountRedoRecordsRequest)
  return target;
}

size_t CountRedoRecordsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.CountRedoRecordsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountRedoRecordsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.CountRedoRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CountRedoRecordsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CountRedoRecordsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.CountRedoRecordsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.CountRedoRecordsRequest)
    MergeFrom(*source);
  }
}

void CountRedoRecordsRequest::MergeFrom(const CountRedoRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.CountRedoRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CountRedoRecordsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.CountRedoRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountRedoRecordsRequest::CopyFrom(const CountRedoRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.CountRedoRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountRedoRecordsRequest::IsInitialized() const {
  return true;
}

void CountRedoRecordsRequest::InternalSwap(CountRedoRecordsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CountRedoRecordsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CountRedoRecordsResponse::InitAsDefaultInstance() {
}
class CountRedoRecordsResponse::_Internal {
 public:
};

CountRedoRecordsResponse::CountRedoRecordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.CountRedoRecordsResponse)
}
CountRedoRecordsResponse::CountRedoRecordsResponse(const CountRedoRecordsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.CountRedoRecordsResponse)
}

void CountRedoRecordsResponse::SharedCtor() {
  result_ = PROTOBUF_LONGLONG(0);
}

CountRedoRecordsResponse::~CountRedoRecordsResponse() {
  // @@protoc_insertion_point(destructor:szengine.CountRedoRecordsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CountRedoRecordsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CountRedoRecordsResponse::ArenaDtor(void* object) {
  CountRedoRecordsResponse* _this = reinterpret_cast< CountRedoRecordsResponse* >(object);
  (void)_this;
}
void CountRedoRecordsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CountRedoRecordsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CountRedoRecordsResponse& CountRedoRecordsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CountRedoRecordsResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void CountRedoRecordsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.CountRedoRecordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CountRedoRecordsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CountRedoRecordsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.CountRedoRecordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.CountRedoRecordsResponse)
  return target;
}

size_t CountRedoRecordsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.CountRedoRecordsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CountRedoRecordsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.CountRedoRecordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CountRedoRecordsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CountRedoRecordsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.CountRedoRecordsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.CountRedoRecordsResponse)
    MergeFrom(*source);
  }
}

void CountRedoRecordsResponse::MergeFrom(const CountRedoRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.CountRedoRecordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void CountRedoRecordsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.CountRedoRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CountRedoRecordsResponse::CopyFrom(const CountRedoRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.CountRedoRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CountRedoRecordsResponse::IsInitialized() const {
  return true;
}

void CountRedoRecordsResponse::InternalSwap(CountRedoRecordsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CountRedoRecordsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRecordRequest::InitAsDefaultInstance() {
}
class DeleteRecordRequest::_Internal {
 public:
};

DeleteRecordRequest::DeleteRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.DeleteRecordRequest)
}
DeleteRecordRequest::DeleteRecordRequest(const DeleteRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.DeleteRecordRequest)
}

void DeleteRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRecordRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

DeleteRecordRequest::~DeleteRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.DeleteRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRecordRequest::ArenaDtor(void* object) {
  DeleteRecordRequest* _this = reinterpret_cast< DeleteRecordRequest* >(object);
  (void)_this;
}
void DeleteRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRecordRequest& DeleteRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void DeleteRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.DeleteRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.DeleteRecordRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.DeleteRecordRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.DeleteRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.DeleteRecordRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.DeleteRecordRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.DeleteRecordRequest)
  return target;
}

size_t DeleteRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.DeleteRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.DeleteRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.DeleteRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.DeleteRecordRequest)
    MergeFrom(*source);
  }
}

void DeleteRecordRequest::MergeFrom(const DeleteRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.DeleteRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void DeleteRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.DeleteRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRecordRequest::CopyFrom(const DeleteRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.DeleteRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRecordRequest::IsInitialized() const {
  return true;
}

void DeleteRecordRequest::InternalSwap(DeleteRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DeleteRecordResponse::InitAsDefaultInstance() {
}
class DeleteRecordResponse::_Internal {
 public:
};

DeleteRecordResponse::DeleteRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.DeleteRecordResponse)
}
DeleteRecordResponse::DeleteRecordResponse(const DeleteRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.DeleteRecordResponse)
}

void DeleteRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DeleteRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DeleteRecordResponse::~DeleteRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.DeleteRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DeleteRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DeleteRecordResponse::ArenaDtor(void* object) {
  DeleteRecordResponse* _this = reinterpret_cast< DeleteRecordResponse* >(object);
  (void)_this;
}
void DeleteRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DeleteRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DeleteRecordResponse& DeleteRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DeleteRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void DeleteRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.DeleteRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.DeleteRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DeleteRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.DeleteRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.DeleteRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.DeleteRecordResponse)
  return target;
}

size_t DeleteRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.DeleteRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DeleteRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.DeleteRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const DeleteRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DeleteRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.DeleteRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.DeleteRecordResponse)
    MergeFrom(*source);
  }
}

void DeleteRecordResponse::MergeFrom(const DeleteRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.DeleteRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void DeleteRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.DeleteRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DeleteRecordResponse::CopyFrom(const DeleteRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.DeleteRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteRecordResponse::IsInitialized() const {
  return true;
}

void DeleteRecordResponse::InternalSwap(DeleteRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExportCsvEntityReportRequest::InitAsDefaultInstance() {
}
class ExportCsvEntityReportRequest::_Internal {
 public:
};

ExportCsvEntityReportRequest::ExportCsvEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportCsvEntityReportRequest)
}
ExportCsvEntityReportRequest::ExportCsvEntityReportRequest(const ExportCsvEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  csvcolumnlist_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_csvcolumnlist().empty()) {
    csvcolumnlist_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_csvcolumnlist(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportCsvEntityReportRequest)
}

void ExportCsvEntityReportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExportCsvEntityReportRequest_szengine_2eproto.base);
  csvcolumnlist_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

ExportCsvEntityReportRequest::~ExportCsvEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.ExportCsvEntityReportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExportCsvEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  csvcolumnlist_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ExportCsvEntityReportRequest::ArenaDtor(void* object) {
  ExportCsvEntityReportRequest* _this = reinterpret_cast< ExportCsvEntityReportRequest* >(object);
  (void)_this;
}
void ExportCsvEntityReportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExportCsvEntityReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportCsvEntityReportRequest& ExportCsvEntityReportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExportCsvEntityReportRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void ExportCsvEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportCsvEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  csvcolumnlist_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportCsvEntityReportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string csvColumnList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_csvcolumnlist();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ExportCsvEntityReportRequest.csvColumnList"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExportCsvEntityReportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportCsvEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string csvColumnList = 1;
  if (this->csvcolumnlist().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_csvcolumnlist().data(), static_cast<int>(this->_internal_csvcolumnlist().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ExportCsvEntityReportRequest.csvColumnList");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_csvcolumnlist(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportCsvEntityReportRequest)
  return target;
}

size_t ExportCsvEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportCsvEntityReportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string csvColumnList = 1;
  if (this->csvcolumnlist().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_csvcolumnlist());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportCsvEntityReportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ExportCsvEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportCsvEntityReportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExportCsvEntityReportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ExportCsvEntityReportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ExportCsvEntityReportRequest)
    MergeFrom(*source);
  }
}

void ExportCsvEntityReportRequest::MergeFrom(const ExportCsvEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportCsvEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.csvcolumnlist().size() > 0) {
    _internal_set_csvcolumnlist(from._internal_csvcolumnlist());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void ExportCsvEntityReportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ExportCsvEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportCsvEntityReportRequest::CopyFrom(const ExportCsvEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportCsvEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportCsvEntityReportRequest::IsInitialized() const {
  return true;
}

void ExportCsvEntityReportRequest::InternalSwap(ExportCsvEntityReportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  csvcolumnlist_.Swap(&other->csvcolumnlist_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportCsvEntityReportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExportCsvEntityReportResponse::InitAsDefaultInstance() {
}
class ExportCsvEntityReportResponse::_Internal {
 public:
};

ExportCsvEntityReportResponse::ExportCsvEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportCsvEntityReportResponse)
}
ExportCsvEntityReportResponse::ExportCsvEntityReportResponse(const ExportCsvEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportCsvEntityReportResponse)
}

void ExportCsvEntityReportResponse::SharedCtor() {
  result_ = PROTOBUF_LONGLONG(0);
}

ExportCsvEntityReportResponse::~ExportCsvEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.ExportCsvEntityReportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExportCsvEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExportCsvEntityReportResponse::ArenaDtor(void* object) {
  ExportCsvEntityReportResponse* _this = reinterpret_cast< ExportCsvEntityReportResponse* >(object);
  (void)_this;
}
void ExportCsvEntityReportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExportCsvEntityReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportCsvEntityReportResponse& ExportCsvEntityReportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExportCsvEntityReportResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void ExportCsvEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportCsvEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportCsvEntityReportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExportCsvEntityReportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportCsvEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportCsvEntityReportResponse)
  return target;
}

size_t ExportCsvEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportCsvEntityReportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportCsvEntityReportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ExportCsvEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportCsvEntityReportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExportCsvEntityReportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ExportCsvEntityReportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ExportCsvEntityReportResponse)
    MergeFrom(*source);
  }
}

void ExportCsvEntityReportResponse::MergeFrom(const ExportCsvEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportCsvEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ExportCsvEntityReportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ExportCsvEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportCsvEntityReportResponse::CopyFrom(const ExportCsvEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportCsvEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportCsvEntityReportResponse::IsInitialized() const {
  return true;
}

void ExportCsvEntityReportResponse::InternalSwap(ExportCsvEntityReportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportCsvEntityReportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExportJsonEntityReportRequest::InitAsDefaultInstance() {
}
class ExportJsonEntityReportRequest::_Internal {
 public:
};

ExportJsonEntityReportRequest::ExportJsonEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportJsonEntityReportRequest)
}
ExportJsonEntityReportRequest::ExportJsonEntityReportRequest(const ExportJsonEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportJsonEntityReportRequest)
}

void ExportJsonEntityReportRequest::SharedCtor() {
  flags_ = PROTOBUF_LONGLONG(0);
}

ExportJsonEntityReportRequest::~ExportJsonEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.ExportJsonEntityReportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExportJsonEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExportJsonEntityReportRequest::ArenaDtor(void* object) {
  ExportJsonEntityReportRequest* _this = reinterpret_cast< ExportJsonEntityReportRequest* >(object);
  (void)_this;
}
void ExportJsonEntityReportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExportJsonEntityReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportJsonEntityReportRequest& ExportJsonEntityReportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExportJsonEntityReportRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void ExportJsonEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportJsonEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportJsonEntityReportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExportJsonEntityReportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportJsonEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportJsonEntityReportRequest)
  return target;
}

size_t ExportJsonEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportJsonEntityReportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportJsonEntityReportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ExportJsonEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportJsonEntityReportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExportJsonEntityReportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ExportJsonEntityReportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ExportJsonEntityReportRequest)
    MergeFrom(*source);
  }
}

void ExportJsonEntityReportRequest::MergeFrom(const ExportJsonEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportJsonEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void ExportJsonEntityReportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ExportJsonEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportJsonEntityReportRequest::CopyFrom(const ExportJsonEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportJsonEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportJsonEntityReportRequest::IsInitialized() const {
  return true;
}

void ExportJsonEntityReportRequest::InternalSwap(ExportJsonEntityReportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportJsonEntityReportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExportJsonEntityReportResponse::InitAsDefaultInstance() {
}
class ExportJsonEntityReportResponse::_Internal {
 public:
};

ExportJsonEntityReportResponse::ExportJsonEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ExportJsonEntityReportResponse)
}
ExportJsonEntityReportResponse::ExportJsonEntityReportResponse(const ExportJsonEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.ExportJsonEntityReportResponse)
}

void ExportJsonEntityReportResponse::SharedCtor() {
  result_ = PROTOBUF_LONGLONG(0);
}

ExportJsonEntityReportResponse::~ExportJsonEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.ExportJsonEntityReportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExportJsonEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExportJsonEntityReportResponse::ArenaDtor(void* object) {
  ExportJsonEntityReportResponse* _this = reinterpret_cast< ExportJsonEntityReportResponse* >(object);
  (void)_this;
}
void ExportJsonEntityReportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExportJsonEntityReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExportJsonEntityReportResponse& ExportJsonEntityReportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExportJsonEntityReportResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void ExportJsonEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ExportJsonEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExportJsonEntityReportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExportJsonEntityReportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ExportJsonEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ExportJsonEntityReportResponse)
  return target;
}

size_t ExportJsonEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ExportJsonEntityReportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExportJsonEntityReportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ExportJsonEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ExportJsonEntityReportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExportJsonEntityReportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ExportJsonEntityReportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ExportJsonEntityReportResponse)
    MergeFrom(*source);
  }
}

void ExportJsonEntityReportResponse::MergeFrom(const ExportJsonEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ExportJsonEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void ExportJsonEntityReportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ExportJsonEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExportJsonEntityReportResponse::CopyFrom(const ExportJsonEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ExportJsonEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExportJsonEntityReportResponse::IsInitialized() const {
  return true;
}

void ExportJsonEntityReportResponse::InternalSwap(ExportJsonEntityReportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExportJsonEntityReportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FetchNextRequest::InitAsDefaultInstance() {
}
class FetchNextRequest::_Internal {
 public:
};

FetchNextRequest::FetchNextRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FetchNextRequest)
}
FetchNextRequest::FetchNextRequest(const FetchNextRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  exporthandle_ = from.exporthandle_;
  // @@protoc_insertion_point(copy_constructor:szengine.FetchNextRequest)
}

void FetchNextRequest::SharedCtor() {
  exporthandle_ = PROTOBUF_LONGLONG(0);
}

FetchNextRequest::~FetchNextRequest() {
  // @@protoc_insertion_point(destructor:szengine.FetchNextRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FetchNextRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FetchNextRequest::ArenaDtor(void* object) {
  FetchNextRequest* _this = reinterpret_cast< FetchNextRequest* >(object);
  (void)_this;
}
void FetchNextRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FetchNextRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchNextRequest& FetchNextRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchNextRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FetchNextRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FetchNextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  exporthandle_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchNextRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 exportHandle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          exporthandle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchNextRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FetchNextRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 exportHandle = 1;
  if (this->exporthandle() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_exporthandle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FetchNextRequest)
  return target;
}

size_t FetchNextRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FetchNextRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 exportHandle = 1;
  if (this->exporthandle() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_exporthandle());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchNextRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FetchNextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchNextRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchNextRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FetchNextRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FetchNextRequest)
    MergeFrom(*source);
  }
}

void FetchNextRequest::MergeFrom(const FetchNextRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FetchNextRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.exporthandle() != 0) {
    _internal_set_exporthandle(from._internal_exporthandle());
  }
}

void FetchNextRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FetchNextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchNextRequest::CopyFrom(const FetchNextRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FetchNextRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchNextRequest::IsInitialized() const {
  return true;
}

void FetchNextRequest::InternalSwap(FetchNextRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(exporthandle_, other->exporthandle_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchNextRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FetchNextResponse::InitAsDefaultInstance() {
}
class FetchNextResponse::_Internal {
 public:
};

FetchNextResponse::FetchNextResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FetchNextResponse)
}
FetchNextResponse::FetchNextResponse(const FetchNextResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FetchNextResponse)
}

void FetchNextResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FetchNextResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FetchNextResponse::~FetchNextResponse() {
  // @@protoc_insertion_point(destructor:szengine.FetchNextResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FetchNextResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FetchNextResponse::ArenaDtor(void* object) {
  FetchNextResponse* _this = reinterpret_cast< FetchNextResponse* >(object);
  (void)_this;
}
void FetchNextResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FetchNextResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FetchNextResponse& FetchNextResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FetchNextResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FetchNextResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FetchNextResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FetchNextResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FetchNextResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FetchNextResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FetchNextResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FetchNextResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FetchNextResponse)
  return target;
}

size_t FetchNextResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FetchNextResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FetchNextResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FetchNextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FetchNextResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FetchNextResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FetchNextResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FetchNextResponse)
    MergeFrom(*source);
  }
}

void FetchNextResponse::MergeFrom(const FetchNextResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FetchNextResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FetchNextResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FetchNextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FetchNextResponse::CopyFrom(const FetchNextResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FetchNextResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FetchNextResponse::IsInitialized() const {
  return true;
}

void FetchNextResponse::InternalSwap(FetchNextResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FetchNextResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindInterestingEntitiesByEntityIdRequest::InitAsDefaultInstance() {
}
class FindInterestingEntitiesByEntityIdRequest::_Internal {
 public:
};

FindInterestingEntitiesByEntityIdRequest::FindInterestingEntitiesByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByEntityIdRequest)
}
FindInterestingEntitiesByEntityIdRequest::FindInterestingEntitiesByEntityIdRequest(const FindInterestingEntitiesByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByEntityIdRequest)
}

void FindInterestingEntitiesByEntityIdRequest::SharedCtor() {
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
}

FindInterestingEntitiesByEntityIdRequest::~FindInterestingEntitiesByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByEntityIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindInterestingEntitiesByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FindInterestingEntitiesByEntityIdRequest::ArenaDtor(void* object) {
  FindInterestingEntitiesByEntityIdRequest* _this = reinterpret_cast< FindInterestingEntitiesByEntityIdRequest* >(object);
  (void)_this;
}
void FindInterestingEntitiesByEntityIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindInterestingEntitiesByEntityIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindInterestingEntitiesByEntityIdRequest& FindInterestingEntitiesByEntityIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindInterestingEntitiesByEntityIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindInterestingEntitiesByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByEntityIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entityId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindInterestingEntitiesByEntityIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entityid(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByEntityIdRequest)
  return target;
}

size_t FindInterestingEntitiesByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entityid());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindInterestingEntitiesByEntityIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindInterestingEntitiesByEntityIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindInterestingEntitiesByEntityIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindInterestingEntitiesByEntityIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindInterestingEntitiesByEntityIdRequest)
    MergeFrom(*source);
  }
}

void FindInterestingEntitiesByEntityIdRequest::MergeFrom(const FindInterestingEntitiesByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entityid() != 0) {
    _internal_set_entityid(from._internal_entityid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void FindInterestingEntitiesByEntityIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindInterestingEntitiesByEntityIdRequest::CopyFrom(const FindInterestingEntitiesByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByEntityIdRequest::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByEntityIdRequest::InternalSwap(FindInterestingEntitiesByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindInterestingEntitiesByEntityIdRequest, flags_)
      + sizeof(FindInterestingEntitiesByEntityIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(FindInterestingEntitiesByEntityIdRequest, entityid_)>(
          reinterpret_cast<char*>(&entityid_),
          reinterpret_cast<char*>(&other->entityid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByEntityIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindInterestingEntitiesByEntityIdResponse::InitAsDefaultInstance() {
}
class FindInterestingEntitiesByEntityIdResponse::_Internal {
 public:
};

FindInterestingEntitiesByEntityIdResponse::FindInterestingEntitiesByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByEntityIdResponse)
}
FindInterestingEntitiesByEntityIdResponse::FindInterestingEntitiesByEntityIdResponse(const FindInterestingEntitiesByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByEntityIdResponse)
}

void FindInterestingEntitiesByEntityIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindInterestingEntitiesByEntityIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindInterestingEntitiesByEntityIdResponse::~FindInterestingEntitiesByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByEntityIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindInterestingEntitiesByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindInterestingEntitiesByEntityIdResponse::ArenaDtor(void* object) {
  FindInterestingEntitiesByEntityIdResponse* _this = reinterpret_cast< FindInterestingEntitiesByEntityIdResponse* >(object);
  (void)_this;
}
void FindInterestingEntitiesByEntityIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindInterestingEntitiesByEntityIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindInterestingEntitiesByEntityIdResponse& FindInterestingEntitiesByEntityIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindInterestingEntitiesByEntityIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindInterestingEntitiesByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByEntityIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindInterestingEntitiesByEntityIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindInterestingEntitiesByEntityIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByEntityIdResponse)
  return target;
}

size_t FindInterestingEntitiesByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindInterestingEntitiesByEntityIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindInterestingEntitiesByEntityIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindInterestingEntitiesByEntityIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindInterestingEntitiesByEntityIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindInterestingEntitiesByEntityIdResponse)
    MergeFrom(*source);
  }
}

void FindInterestingEntitiesByEntityIdResponse::MergeFrom(const FindInterestingEntitiesByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FindInterestingEntitiesByEntityIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindInterestingEntitiesByEntityIdResponse::CopyFrom(const FindInterestingEntitiesByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByEntityIdResponse::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByEntityIdResponse::InternalSwap(FindInterestingEntitiesByEntityIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByEntityIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindInterestingEntitiesByRecordIdRequest::InitAsDefaultInstance() {
}
class FindInterestingEntitiesByRecordIdRequest::_Internal {
 public:
};

FindInterestingEntitiesByRecordIdRequest::FindInterestingEntitiesByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByRecordIdRequest)
}
FindInterestingEntitiesByRecordIdRequest::FindInterestingEntitiesByRecordIdRequest(const FindInterestingEntitiesByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByRecordIdRequest)
}

void FindInterestingEntitiesByRecordIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindInterestingEntitiesByRecordIdRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

FindInterestingEntitiesByRecordIdRequest::~FindInterestingEntitiesByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByRecordIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindInterestingEntitiesByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindInterestingEntitiesByRecordIdRequest::ArenaDtor(void* object) {
  FindInterestingEntitiesByRecordIdRequest* _this = reinterpret_cast< FindInterestingEntitiesByRecordIdRequest* >(object);
  (void)_this;
}
void FindInterestingEntitiesByRecordIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindInterestingEntitiesByRecordIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindInterestingEntitiesByRecordIdRequest& FindInterestingEntitiesByRecordIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindInterestingEntitiesByRecordIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindInterestingEntitiesByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByRecordIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindInterestingEntitiesByRecordIdRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindInterestingEntitiesByRecordIdRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindInterestingEntitiesByRecordIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByRecordIdRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByRecordIdRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByRecordIdRequest)
  return target;
}

size_t FindInterestingEntitiesByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindInterestingEntitiesByRecordIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindInterestingEntitiesByRecordIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindInterestingEntitiesByRecordIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindInterestingEntitiesByRecordIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindInterestingEntitiesByRecordIdRequest)
    MergeFrom(*source);
  }
}

void FindInterestingEntitiesByRecordIdRequest::MergeFrom(const FindInterestingEntitiesByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void FindInterestingEntitiesByRecordIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindInterestingEntitiesByRecordIdRequest::CopyFrom(const FindInterestingEntitiesByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByRecordIdRequest::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByRecordIdRequest::InternalSwap(FindInterestingEntitiesByRecordIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByRecordIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindInterestingEntitiesByRecordIdResponse::InitAsDefaultInstance() {
}
class FindInterestingEntitiesByRecordIdResponse::_Internal {
 public:
};

FindInterestingEntitiesByRecordIdResponse::FindInterestingEntitiesByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindInterestingEntitiesByRecordIdResponse)
}
FindInterestingEntitiesByRecordIdResponse::FindInterestingEntitiesByRecordIdResponse(const FindInterestingEntitiesByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindInterestingEntitiesByRecordIdResponse)
}

void FindInterestingEntitiesByRecordIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindInterestingEntitiesByRecordIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindInterestingEntitiesByRecordIdResponse::~FindInterestingEntitiesByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindInterestingEntitiesByRecordIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindInterestingEntitiesByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindInterestingEntitiesByRecordIdResponse::ArenaDtor(void* object) {
  FindInterestingEntitiesByRecordIdResponse* _this = reinterpret_cast< FindInterestingEntitiesByRecordIdResponse* >(object);
  (void)_this;
}
void FindInterestingEntitiesByRecordIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindInterestingEntitiesByRecordIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindInterestingEntitiesByRecordIdResponse& FindInterestingEntitiesByRecordIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindInterestingEntitiesByRecordIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindInterestingEntitiesByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindInterestingEntitiesByRecordIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindInterestingEntitiesByRecordIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindInterestingEntitiesByRecordIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindInterestingEntitiesByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindInterestingEntitiesByRecordIdResponse)
  return target;
}

size_t FindInterestingEntitiesByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindInterestingEntitiesByRecordIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindInterestingEntitiesByRecordIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindInterestingEntitiesByRecordIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindInterestingEntitiesByRecordIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindInterestingEntitiesByRecordIdResponse)
    MergeFrom(*source);
  }
}

void FindInterestingEntitiesByRecordIdResponse::MergeFrom(const FindInterestingEntitiesByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FindInterestingEntitiesByRecordIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindInterestingEntitiesByRecordIdResponse::CopyFrom(const FindInterestingEntitiesByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindInterestingEntitiesByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindInterestingEntitiesByRecordIdResponse::IsInitialized() const {
  return true;
}

void FindInterestingEntitiesByRecordIdResponse::InternalSwap(FindInterestingEntitiesByRecordIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindInterestingEntitiesByRecordIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindNetworkByEntityIdRequest::InitAsDefaultInstance() {
}
class FindNetworkByEntityIdRequest::_Internal {
 public:
};

FindNetworkByEntityIdRequest::FindNetworkByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByEntityIdRequest)
}
FindNetworkByEntityIdRequest::FindNetworkByEntityIdRequest(const FindNetworkByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  entityids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_entityids().empty()) {
    entityids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_entityids(),
      GetArena());
  }
  ::memcpy(&maxdegrees_, &from.maxdegrees_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByEntityIdRequest)
}

void FindNetworkByEntityIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindNetworkByEntityIdRequest_szengine_2eproto.base);
  entityids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxdegrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
}

FindNetworkByEntityIdRequest::~FindNetworkByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByEntityIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindNetworkByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  entityids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindNetworkByEntityIdRequest::ArenaDtor(void* object) {
  FindNetworkByEntityIdRequest* _this = reinterpret_cast< FindNetworkByEntityIdRequest* >(object);
  (void)_this;
}
void FindNetworkByEntityIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindNetworkByEntityIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindNetworkByEntityIdRequest& FindNetworkByEntityIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindNetworkByEntityIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindNetworkByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entityids_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&maxdegrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByEntityIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string entityIds = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_entityids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindNetworkByEntityIdRequest.entityIds"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxDegrees = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          maxdegrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 buildOutDegrees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          buildoutdegrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 buildOutMaxEntities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          buildoutmaxentities_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindNetworkByEntityIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string entityIds = 1;
  if (this->entityids().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_entityids().data(), static_cast<int>(this->_internal_entityids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByEntityIdRequest.entityIds");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_entityids(), target);
  }

  // int64 maxDegrees = 2;
  if (this->maxdegrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_maxdegrees(), target);
  }

  // int64 buildOutDegrees = 3;
  if (this->buildoutdegrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_buildoutdegrees(), target);
  }

  // int64 buildOutMaxEntities = 4;
  if (this->buildoutmaxentities() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_buildoutmaxentities(), target);
  }

  // int64 flags = 5;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByEntityIdRequest)
  return target;
}

size_t FindNetworkByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByEntityIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string entityIds = 1;
  if (this->entityids().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_entityids());
  }

  // int64 maxDegrees = 2;
  if (this->maxdegrees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxdegrees());
  }

  // int64 buildOutDegrees = 3;
  if (this->buildoutdegrees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_buildoutdegrees());
  }

  // int64 buildOutMaxEntities = 4;
  if (this->buildoutmaxentities() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_buildoutmaxentities());
  }

  // int64 flags = 5;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindNetworkByEntityIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindNetworkByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindNetworkByEntityIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindNetworkByEntityIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindNetworkByEntityIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindNetworkByEntityIdRequest)
    MergeFrom(*source);
  }
}

void FindNetworkByEntityIdRequest::MergeFrom(const FindNetworkByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entityids().size() > 0) {
    _internal_set_entityids(from._internal_entityids());
  }
  if (from.maxdegrees() != 0) {
    _internal_set_maxdegrees(from._internal_maxdegrees());
  }
  if (from.buildoutdegrees() != 0) {
    _internal_set_buildoutdegrees(from._internal_buildoutdegrees());
  }
  if (from.buildoutmaxentities() != 0) {
    _internal_set_buildoutmaxentities(from._internal_buildoutmaxentities());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void FindNetworkByEntityIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindNetworkByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindNetworkByEntityIdRequest::CopyFrom(const FindNetworkByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByEntityIdRequest::IsInitialized() const {
  return true;
}

void FindNetworkByEntityIdRequest::InternalSwap(FindNetworkByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entityids_.Swap(&other->entityids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindNetworkByEntityIdRequest, flags_)
      + sizeof(FindNetworkByEntityIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(FindNetworkByEntityIdRequest, maxdegrees_)>(
          reinterpret_cast<char*>(&maxdegrees_),
          reinterpret_cast<char*>(&other->maxdegrees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByEntityIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindNetworkByEntityIdResponse::InitAsDefaultInstance() {
}
class FindNetworkByEntityIdResponse::_Internal {
 public:
};

FindNetworkByEntityIdResponse::FindNetworkByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByEntityIdResponse)
}
FindNetworkByEntityIdResponse::FindNetworkByEntityIdResponse(const FindNetworkByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByEntityIdResponse)
}

void FindNetworkByEntityIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindNetworkByEntityIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindNetworkByEntityIdResponse::~FindNetworkByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByEntityIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindNetworkByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindNetworkByEntityIdResponse::ArenaDtor(void* object) {
  FindNetworkByEntityIdResponse* _this = reinterpret_cast< FindNetworkByEntityIdResponse* >(object);
  (void)_this;
}
void FindNetworkByEntityIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindNetworkByEntityIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindNetworkByEntityIdResponse& FindNetworkByEntityIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindNetworkByEntityIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindNetworkByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByEntityIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindNetworkByEntityIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindNetworkByEntityIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByEntityIdResponse)
  return target;
}

size_t FindNetworkByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByEntityIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindNetworkByEntityIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindNetworkByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindNetworkByEntityIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindNetworkByEntityIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindNetworkByEntityIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindNetworkByEntityIdResponse)
    MergeFrom(*source);
  }
}

void FindNetworkByEntityIdResponse::MergeFrom(const FindNetworkByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FindNetworkByEntityIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindNetworkByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindNetworkByEntityIdResponse::CopyFrom(const FindNetworkByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByEntityIdResponse::IsInitialized() const {
  return true;
}

void FindNetworkByEntityIdResponse::InternalSwap(FindNetworkByEntityIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByEntityIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindNetworkByRecordIdRequest::InitAsDefaultInstance() {
}
class FindNetworkByRecordIdRequest::_Internal {
 public:
};

FindNetworkByRecordIdRequest::FindNetworkByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByRecordIdRequest)
}
FindNetworkByRecordIdRequest::FindNetworkByRecordIdRequest(const FindNetworkByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recordkeys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordkeys().empty()) {
    recordkeys_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordkeys(),
      GetArena());
  }
  ::memcpy(&maxdegrees_, &from.maxdegrees_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByRecordIdRequest)
}

void FindNetworkByRecordIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindNetworkByRecordIdRequest_szengine_2eproto.base);
  recordkeys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxdegrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
}

FindNetworkByRecordIdRequest::~FindNetworkByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByRecordIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindNetworkByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recordkeys_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindNetworkByRecordIdRequest::ArenaDtor(void* object) {
  FindNetworkByRecordIdRequest* _this = reinterpret_cast< FindNetworkByRecordIdRequest* >(object);
  (void)_this;
}
void FindNetworkByRecordIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindNetworkByRecordIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindNetworkByRecordIdRequest& FindNetworkByRecordIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindNetworkByRecordIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindNetworkByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recordkeys_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&maxdegrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByRecordIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recordKeys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recordkeys();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindNetworkByRecordIdRequest.recordKeys"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxDegrees = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          maxdegrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 buildOutDegrees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          buildoutdegrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 buildOutMaxEntities = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          buildoutmaxentities_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindNetworkByRecordIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recordKeys = 1;
  if (this->recordkeys().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordkeys().data(), static_cast<int>(this->_internal_recordkeys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByRecordIdRequest.recordKeys");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recordkeys(), target);
  }

  // int64 maxDegrees = 2;
  if (this->maxdegrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_maxdegrees(), target);
  }

  // int64 buildOutDegrees = 3;
  if (this->buildoutdegrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_buildoutdegrees(), target);
  }

  // int64 buildOutMaxEntities = 4;
  if (this->buildoutmaxentities() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(4, this->_internal_buildoutmaxentities(), target);
  }

  // int64 flags = 5;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByRecordIdRequest)
  return target;
}

size_t FindNetworkByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByRecordIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recordKeys = 1;
  if (this->recordkeys().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordkeys());
  }

  // int64 maxDegrees = 2;
  if (this->maxdegrees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxdegrees());
  }

  // int64 buildOutDegrees = 3;
  if (this->buildoutdegrees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_buildoutdegrees());
  }

  // int64 buildOutMaxEntities = 4;
  if (this->buildoutmaxentities() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_buildoutmaxentities());
  }

  // int64 flags = 5;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindNetworkByRecordIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindNetworkByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindNetworkByRecordIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindNetworkByRecordIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindNetworkByRecordIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindNetworkByRecordIdRequest)
    MergeFrom(*source);
  }
}

void FindNetworkByRecordIdRequest::MergeFrom(const FindNetworkByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recordkeys().size() > 0) {
    _internal_set_recordkeys(from._internal_recordkeys());
  }
  if (from.maxdegrees() != 0) {
    _internal_set_maxdegrees(from._internal_maxdegrees());
  }
  if (from.buildoutdegrees() != 0) {
    _internal_set_buildoutdegrees(from._internal_buildoutdegrees());
  }
  if (from.buildoutmaxentities() != 0) {
    _internal_set_buildoutmaxentities(from._internal_buildoutmaxentities());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void FindNetworkByRecordIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindNetworkByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindNetworkByRecordIdRequest::CopyFrom(const FindNetworkByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByRecordIdRequest::IsInitialized() const {
  return true;
}

void FindNetworkByRecordIdRequest::InternalSwap(FindNetworkByRecordIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recordkeys_.Swap(&other->recordkeys_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindNetworkByRecordIdRequest, flags_)
      + sizeof(FindNetworkByRecordIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(FindNetworkByRecordIdRequest, maxdegrees_)>(
          reinterpret_cast<char*>(&maxdegrees_),
          reinterpret_cast<char*>(&other->maxdegrees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByRecordIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindNetworkByRecordIdResponse::InitAsDefaultInstance() {
}
class FindNetworkByRecordIdResponse::_Internal {
 public:
};

FindNetworkByRecordIdResponse::FindNetworkByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindNetworkByRecordIdResponse)
}
FindNetworkByRecordIdResponse::FindNetworkByRecordIdResponse(const FindNetworkByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindNetworkByRecordIdResponse)
}

void FindNetworkByRecordIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindNetworkByRecordIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindNetworkByRecordIdResponse::~FindNetworkByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindNetworkByRecordIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindNetworkByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindNetworkByRecordIdResponse::ArenaDtor(void* object) {
  FindNetworkByRecordIdResponse* _this = reinterpret_cast< FindNetworkByRecordIdResponse* >(object);
  (void)_this;
}
void FindNetworkByRecordIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindNetworkByRecordIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindNetworkByRecordIdResponse& FindNetworkByRecordIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindNetworkByRecordIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindNetworkByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindNetworkByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindNetworkByRecordIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindNetworkByRecordIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindNetworkByRecordIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindNetworkByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindNetworkByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindNetworkByRecordIdResponse)
  return target;
}

size_t FindNetworkByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindNetworkByRecordIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindNetworkByRecordIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindNetworkByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindNetworkByRecordIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindNetworkByRecordIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindNetworkByRecordIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindNetworkByRecordIdResponse)
    MergeFrom(*source);
  }
}

void FindNetworkByRecordIdResponse::MergeFrom(const FindNetworkByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindNetworkByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FindNetworkByRecordIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindNetworkByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindNetworkByRecordIdResponse::CopyFrom(const FindNetworkByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindNetworkByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindNetworkByRecordIdResponse::IsInitialized() const {
  return true;
}

void FindNetworkByRecordIdResponse::InternalSwap(FindNetworkByRecordIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindNetworkByRecordIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindPathByEntityIdRequest::InitAsDefaultInstance() {
}
class FindPathByEntityIdRequest::_Internal {
 public:
};

FindPathByEntityIdRequest::FindPathByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByEntityIdRequest)
}
FindPathByEntityIdRequest::FindPathByEntityIdRequest(const FindPathByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  avoidentityids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avoidentityids().empty()) {
    avoidentityids_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_avoidentityids(),
      GetArena());
  }
  requireddatasources_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requireddatasources().empty()) {
    requireddatasources_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requireddatasources(),
      GetArena());
  }
  ::memcpy(&startentityid_, &from.startentityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&startentityid_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByEntityIdRequest)
}

void FindPathByEntityIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindPathByEntityIdRequest_szengine_2eproto.base);
  avoidentityids_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requireddatasources_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&startentityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&startentityid_)) + sizeof(flags_));
}

FindPathByEntityIdRequest::~FindPathByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByEntityIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPathByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  avoidentityids_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requireddatasources_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindPathByEntityIdRequest::ArenaDtor(void* object) {
  FindPathByEntityIdRequest* _this = reinterpret_cast< FindPathByEntityIdRequest* >(object);
  (void)_this;
}
void FindPathByEntityIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPathByEntityIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindPathByEntityIdRequest& FindPathByEntityIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindPathByEntityIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindPathByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  avoidentityids_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requireddatasources_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&startentityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&startentityid_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByEntityIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 startEntityId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          startentityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 endEntityId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          endentityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxDegrees = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          maxdegrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avoidEntityIds = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_avoidentityids();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByEntityIdRequest.avoidEntityIds"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requiredDataSources = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_requireddatasources();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByEntityIdRequest.requiredDataSources"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPathByEntityIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 startEntityId = 1;
  if (this->startentityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_startentityid(), target);
  }

  // int64 endEntityId = 2;
  if (this->endentityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_endentityid(), target);
  }

  // int64 maxDegrees = 3;
  if (this->maxdegrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_maxdegrees(), target);
  }

  // string avoidEntityIds = 4;
  if (this->avoidentityids().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avoidentityids().data(), static_cast<int>(this->_internal_avoidentityids().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByEntityIdRequest.avoidEntityIds");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_avoidentityids(), target);
  }

  // string requiredDataSources = 5;
  if (this->requireddatasources().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requireddatasources().data(), static_cast<int>(this->_internal_requireddatasources().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByEntityIdRequest.requiredDataSources");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_requireddatasources(), target);
  }

  // int64 flags = 6;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(6, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByEntityIdRequest)
  return target;
}

size_t FindPathByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByEntityIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string avoidEntityIds = 4;
  if (this->avoidentityids().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avoidentityids());
  }

  // string requiredDataSources = 5;
  if (this->requireddatasources().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requireddatasources());
  }

  // int64 startEntityId = 1;
  if (this->startentityid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_startentityid());
  }

  // int64 endEntityId = 2;
  if (this->endentityid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_endentityid());
  }

  // int64 maxDegrees = 3;
  if (this->maxdegrees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxdegrees());
  }

  // int64 flags = 6;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPathByEntityIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindPathByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPathByEntityIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPathByEntityIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindPathByEntityIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindPathByEntityIdRequest)
    MergeFrom(*source);
  }
}

void FindPathByEntityIdRequest::MergeFrom(const FindPathByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.avoidentityids().size() > 0) {
    _internal_set_avoidentityids(from._internal_avoidentityids());
  }
  if (from.requireddatasources().size() > 0) {
    _internal_set_requireddatasources(from._internal_requireddatasources());
  }
  if (from.startentityid() != 0) {
    _internal_set_startentityid(from._internal_startentityid());
  }
  if (from.endentityid() != 0) {
    _internal_set_endentityid(from._internal_endentityid());
  }
  if (from.maxdegrees() != 0) {
    _internal_set_maxdegrees(from._internal_maxdegrees());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void FindPathByEntityIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindPathByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPathByEntityIdRequest::CopyFrom(const FindPathByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByEntityIdRequest::IsInitialized() const {
  return true;
}

void FindPathByEntityIdRequest::InternalSwap(FindPathByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  avoidentityids_.Swap(&other->avoidentityids_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requireddatasources_.Swap(&other->requireddatasources_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindPathByEntityIdRequest, flags_)
      + sizeof(FindPathByEntityIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(FindPathByEntityIdRequest, startentityid_)>(
          reinterpret_cast<char*>(&startentityid_),
          reinterpret_cast<char*>(&other->startentityid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByEntityIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindPathByEntityIdResponse::InitAsDefaultInstance() {
}
class FindPathByEntityIdResponse::_Internal {
 public:
};

FindPathByEntityIdResponse::FindPathByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByEntityIdResponse)
}
FindPathByEntityIdResponse::FindPathByEntityIdResponse(const FindPathByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByEntityIdResponse)
}

void FindPathByEntityIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindPathByEntityIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindPathByEntityIdResponse::~FindPathByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByEntityIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPathByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindPathByEntityIdResponse::ArenaDtor(void* object) {
  FindPathByEntityIdResponse* _this = reinterpret_cast< FindPathByEntityIdResponse* >(object);
  (void)_this;
}
void FindPathByEntityIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPathByEntityIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindPathByEntityIdResponse& FindPathByEntityIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindPathByEntityIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindPathByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByEntityIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByEntityIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPathByEntityIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByEntityIdResponse)
  return target;
}

size_t FindPathByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByEntityIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPathByEntityIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindPathByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPathByEntityIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPathByEntityIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindPathByEntityIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindPathByEntityIdResponse)
    MergeFrom(*source);
  }
}

void FindPathByEntityIdResponse::MergeFrom(const FindPathByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FindPathByEntityIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindPathByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPathByEntityIdResponse::CopyFrom(const FindPathByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByEntityIdResponse::IsInitialized() const {
  return true;
}

void FindPathByEntityIdResponse::InternalSwap(FindPathByEntityIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByEntityIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindPathByRecordIdRequest::InitAsDefaultInstance() {
}
class FindPathByRecordIdRequest::_Internal {
 public:
};

FindPathByRecordIdRequest::FindPathByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByRecordIdRequest)
}
FindPathByRecordIdRequest::FindPathByRecordIdRequest(const FindPathByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  startdatasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_startdatasourcecode().empty()) {
    startdatasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_startdatasourcecode(),
      GetArena());
  }
  startrecordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_startrecordid().empty()) {
    startrecordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_startrecordid(),
      GetArena());
  }
  enddatasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_enddatasourcecode().empty()) {
    enddatasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_enddatasourcecode(),
      GetArena());
  }
  endrecordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_endrecordid().empty()) {
    endrecordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_endrecordid(),
      GetArena());
  }
  avoidrecordkeys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_avoidrecordkeys().empty()) {
    avoidrecordkeys_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_avoidrecordkeys(),
      GetArena());
  }
  requireddatasources_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_requireddatasources().empty()) {
    requireddatasources_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_requireddatasources(),
      GetArena());
  }
  ::memcpy(&maxdegrees_, &from.maxdegrees_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByRecordIdRequest)
}

void FindPathByRecordIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindPathByRecordIdRequest_szengine_2eproto.base);
  startdatasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  startrecordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enddatasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endrecordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avoidrecordkeys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requireddatasources_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&maxdegrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
}

FindPathByRecordIdRequest::~FindPathByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByRecordIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPathByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  startdatasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  startrecordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  enddatasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  endrecordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  avoidrecordkeys_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  requireddatasources_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindPathByRecordIdRequest::ArenaDtor(void* object) {
  FindPathByRecordIdRequest* _this = reinterpret_cast< FindPathByRecordIdRequest* >(object);
  (void)_this;
}
void FindPathByRecordIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPathByRecordIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindPathByRecordIdRequest& FindPathByRecordIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindPathByRecordIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindPathByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  startdatasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  startrecordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  enddatasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endrecordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avoidrecordkeys_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requireddatasources_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&maxdegrees_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&maxdegrees_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByRecordIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string startDataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_startdatasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.startDataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string startRecordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_startrecordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.startRecordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endDataSourceCode = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_enddatasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.endDataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string endRecordId = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_endrecordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.endRecordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 maxDegrees = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          maxdegrees_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string avoidRecordKeys = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_avoidrecordkeys();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.avoidRecordKeys"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string requiredDataSources = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_requireddatasources();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdRequest.requiredDataSources"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPathByRecordIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string startDataSourceCode = 1;
  if (this->startdatasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_startdatasourcecode().data(), static_cast<int>(this->_internal_startdatasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.startDataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_startdatasourcecode(), target);
  }

  // string startRecordId = 2;
  if (this->startrecordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_startrecordid().data(), static_cast<int>(this->_internal_startrecordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.startRecordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_startrecordid(), target);
  }

  // string endDataSourceCode = 3;
  if (this->enddatasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_enddatasourcecode().data(), static_cast<int>(this->_internal_enddatasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.endDataSourceCode");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_enddatasourcecode(), target);
  }

  // string endRecordId = 4;
  if (this->endrecordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_endrecordid().data(), static_cast<int>(this->_internal_endrecordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.endRecordId");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_endrecordid(), target);
  }

  // int64 maxDegrees = 5;
  if (this->maxdegrees() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_maxdegrees(), target);
  }

  // string avoidRecordKeys = 6;
  if (this->avoidrecordkeys().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_avoidrecordkeys().data(), static_cast<int>(this->_internal_avoidrecordkeys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.avoidRecordKeys");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_avoidrecordkeys(), target);
  }

  // string requiredDataSources = 7;
  if (this->requireddatasources().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_requireddatasources().data(), static_cast<int>(this->_internal_requireddatasources().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdRequest.requiredDataSources");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_requireddatasources(), target);
  }

  // int64 flags = 8;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(8, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByRecordIdRequest)
  return target;
}

size_t FindPathByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByRecordIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string startDataSourceCode = 1;
  if (this->startdatasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_startdatasourcecode());
  }

  // string startRecordId = 2;
  if (this->startrecordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_startrecordid());
  }

  // string endDataSourceCode = 3;
  if (this->enddatasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_enddatasourcecode());
  }

  // string endRecordId = 4;
  if (this->endrecordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_endrecordid());
  }

  // string avoidRecordKeys = 6;
  if (this->avoidrecordkeys().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_avoidrecordkeys());
  }

  // string requiredDataSources = 7;
  if (this->requireddatasources().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_requireddatasources());
  }

  // int64 maxDegrees = 5;
  if (this->maxdegrees() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_maxdegrees());
  }

  // int64 flags = 8;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPathByRecordIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindPathByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPathByRecordIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPathByRecordIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindPathByRecordIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindPathByRecordIdRequest)
    MergeFrom(*source);
  }
}

void FindPathByRecordIdRequest::MergeFrom(const FindPathByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.startdatasourcecode().size() > 0) {
    _internal_set_startdatasourcecode(from._internal_startdatasourcecode());
  }
  if (from.startrecordid().size() > 0) {
    _internal_set_startrecordid(from._internal_startrecordid());
  }
  if (from.enddatasourcecode().size() > 0) {
    _internal_set_enddatasourcecode(from._internal_enddatasourcecode());
  }
  if (from.endrecordid().size() > 0) {
    _internal_set_endrecordid(from._internal_endrecordid());
  }
  if (from.avoidrecordkeys().size() > 0) {
    _internal_set_avoidrecordkeys(from._internal_avoidrecordkeys());
  }
  if (from.requireddatasources().size() > 0) {
    _internal_set_requireddatasources(from._internal_requireddatasources());
  }
  if (from.maxdegrees() != 0) {
    _internal_set_maxdegrees(from._internal_maxdegrees());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void FindPathByRecordIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindPathByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPathByRecordIdRequest::CopyFrom(const FindPathByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByRecordIdRequest::IsInitialized() const {
  return true;
}

void FindPathByRecordIdRequest::InternalSwap(FindPathByRecordIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  startdatasourcecode_.Swap(&other->startdatasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  startrecordid_.Swap(&other->startrecordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  enddatasourcecode_.Swap(&other->enddatasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  endrecordid_.Swap(&other->endrecordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  avoidrecordkeys_.Swap(&other->avoidrecordkeys_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  requireddatasources_.Swap(&other->requireddatasources_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(FindPathByRecordIdRequest, flags_)
      + sizeof(FindPathByRecordIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(FindPathByRecordIdRequest, maxdegrees_)>(
          reinterpret_cast<char*>(&maxdegrees_),
          reinterpret_cast<char*>(&other->maxdegrees_));
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByRecordIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FindPathByRecordIdResponse::InitAsDefaultInstance() {
}
class FindPathByRecordIdResponse::_Internal {
 public:
};

FindPathByRecordIdResponse::FindPathByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.FindPathByRecordIdResponse)
}
FindPathByRecordIdResponse::FindPathByRecordIdResponse(const FindPathByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.FindPathByRecordIdResponse)
}

void FindPathByRecordIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FindPathByRecordIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FindPathByRecordIdResponse::~FindPathByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.FindPathByRecordIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FindPathByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FindPathByRecordIdResponse::ArenaDtor(void* object) {
  FindPathByRecordIdResponse* _this = reinterpret_cast< FindPathByRecordIdResponse* >(object);
  (void)_this;
}
void FindPathByRecordIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FindPathByRecordIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FindPathByRecordIdResponse& FindPathByRecordIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FindPathByRecordIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void FindPathByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.FindPathByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FindPathByRecordIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.FindPathByRecordIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FindPathByRecordIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.FindPathByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.FindPathByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.FindPathByRecordIdResponse)
  return target;
}

size_t FindPathByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.FindPathByRecordIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FindPathByRecordIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.FindPathByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const FindPathByRecordIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FindPathByRecordIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.FindPathByRecordIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.FindPathByRecordIdResponse)
    MergeFrom(*source);
  }
}

void FindPathByRecordIdResponse::MergeFrom(const FindPathByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.FindPathByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void FindPathByRecordIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.FindPathByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FindPathByRecordIdResponse::CopyFrom(const FindPathByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.FindPathByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FindPathByRecordIdResponse::IsInitialized() const {
  return true;
}

void FindPathByRecordIdResponse::InternalSwap(FindPathByRecordIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FindPathByRecordIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActiveConfigIdRequest::InitAsDefaultInstance() {
}
class GetActiveConfigIdRequest::_Internal {
 public:
};

GetActiveConfigIdRequest::GetActiveConfigIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetActiveConfigIdRequest)
}
GetActiveConfigIdRequest::GetActiveConfigIdRequest(const GetActiveConfigIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.GetActiveConfigIdRequest)
}

void GetActiveConfigIdRequest::SharedCtor() {
}

GetActiveConfigIdRequest::~GetActiveConfigIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetActiveConfigIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActiveConfigIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetActiveConfigIdRequest::ArenaDtor(void* object) {
  GetActiveConfigIdRequest* _this = reinterpret_cast< GetActiveConfigIdRequest* >(object);
  (void)_this;
}
void GetActiveConfigIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActiveConfigIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActiveConfigIdRequest& GetActiveConfigIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActiveConfigIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetActiveConfigIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetActiveConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActiveConfigIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActiveConfigIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetActiveConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetActiveConfigIdRequest)
  return target;
}

size_t GetActiveConfigIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetActiveConfigIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActiveConfigIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetActiveConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActiveConfigIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActiveConfigIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetActiveConfigIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetActiveConfigIdRequest)
    MergeFrom(*source);
  }
}

void GetActiveConfigIdRequest::MergeFrom(const GetActiveConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetActiveConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetActiveConfigIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetActiveConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActiveConfigIdRequest::CopyFrom(const GetActiveConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetActiveConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActiveConfigIdRequest::IsInitialized() const {
  return true;
}

void GetActiveConfigIdRequest::InternalSwap(GetActiveConfigIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActiveConfigIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetActiveConfigIdResponse::InitAsDefaultInstance() {
}
class GetActiveConfigIdResponse::_Internal {
 public:
};

GetActiveConfigIdResponse::GetActiveConfigIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetActiveConfigIdResponse)
}
GetActiveConfigIdResponse::GetActiveConfigIdResponse(const GetActiveConfigIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetActiveConfigIdResponse)
}

void GetActiveConfigIdResponse::SharedCtor() {
  result_ = PROTOBUF_LONGLONG(0);
}

GetActiveConfigIdResponse::~GetActiveConfigIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetActiveConfigIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetActiveConfigIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetActiveConfigIdResponse::ArenaDtor(void* object) {
  GetActiveConfigIdResponse* _this = reinterpret_cast< GetActiveConfigIdResponse* >(object);
  (void)_this;
}
void GetActiveConfigIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetActiveConfigIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetActiveConfigIdResponse& GetActiveConfigIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetActiveConfigIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetActiveConfigIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetActiveConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetActiveConfigIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetActiveConfigIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetActiveConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetActiveConfigIdResponse)
  return target;
}

size_t GetActiveConfigIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetActiveConfigIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetActiveConfigIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetActiveConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetActiveConfigIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetActiveConfigIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetActiveConfigIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetActiveConfigIdResponse)
    MergeFrom(*source);
  }
}

void GetActiveConfigIdResponse::MergeFrom(const GetActiveConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetActiveConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetActiveConfigIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetActiveConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetActiveConfigIdResponse::CopyFrom(const GetActiveConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetActiveConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetActiveConfigIdResponse::IsInitialized() const {
  return true;
}

void GetActiveConfigIdResponse::InternalSwap(GetActiveConfigIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetActiveConfigIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEntityByEntityIdRequest::InitAsDefaultInstance() {
}
class GetEntityByEntityIdRequest::_Internal {
 public:
};

GetEntityByEntityIdRequest::GetEntityByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByEntityIdRequest)
}
GetEntityByEntityIdRequest::GetEntityByEntityIdRequest(const GetEntityByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByEntityIdRequest)
}

void GetEntityByEntityIdRequest::SharedCtor() {
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
}

GetEntityByEntityIdRequest::~GetEntityByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByEntityIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetEntityByEntityIdRequest::ArenaDtor(void* object) {
  GetEntityByEntityIdRequest* _this = reinterpret_cast< GetEntityByEntityIdRequest* >(object);
  (void)_this;
}
void GetEntityByEntityIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityByEntityIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityByEntityIdRequest& GetEntityByEntityIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityByEntityIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetEntityByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByEntityIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entityId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityByEntityIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entityid(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByEntityIdRequest)
  return target;
}

size_t GetEntityByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByEntityIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entityid());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityByEntityIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetEntityByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityByEntityIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityByEntityIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetEntityByEntityIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetEntityByEntityIdRequest)
    MergeFrom(*source);
  }
}

void GetEntityByEntityIdRequest::MergeFrom(const GetEntityByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entityid() != 0) {
    _internal_set_entityid(from._internal_entityid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void GetEntityByEntityIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetEntityByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityByEntityIdRequest::CopyFrom(const GetEntityByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByEntityIdRequest::IsInitialized() const {
  return true;
}

void GetEntityByEntityIdRequest::InternalSwap(GetEntityByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetEntityByEntityIdRequest, flags_)
      + sizeof(GetEntityByEntityIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(GetEntityByEntityIdRequest, entityid_)>(
          reinterpret_cast<char*>(&entityid_),
          reinterpret_cast<char*>(&other->entityid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByEntityIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEntityByEntityIdResponse::InitAsDefaultInstance() {
}
class GetEntityByEntityIdResponse::_Internal {
 public:
};

GetEntityByEntityIdResponse::GetEntityByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByEntityIdResponse)
}
GetEntityByEntityIdResponse::GetEntityByEntityIdResponse(const GetEntityByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByEntityIdResponse)
}

void GetEntityByEntityIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEntityByEntityIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetEntityByEntityIdResponse::~GetEntityByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByEntityIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetEntityByEntityIdResponse::ArenaDtor(void* object) {
  GetEntityByEntityIdResponse* _this = reinterpret_cast< GetEntityByEntityIdResponse* >(object);
  (void)_this;
}
void GetEntityByEntityIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityByEntityIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityByEntityIdResponse& GetEntityByEntityIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityByEntityIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetEntityByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByEntityIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetEntityByEntityIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityByEntityIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByEntityIdResponse)
  return target;
}

size_t GetEntityByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByEntityIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityByEntityIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetEntityByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityByEntityIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityByEntityIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetEntityByEntityIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetEntityByEntityIdResponse)
    MergeFrom(*source);
  }
}

void GetEntityByEntityIdResponse::MergeFrom(const GetEntityByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetEntityByEntityIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetEntityByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityByEntityIdResponse::CopyFrom(const GetEntityByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByEntityIdResponse::IsInitialized() const {
  return true;
}

void GetEntityByEntityIdResponse::InternalSwap(GetEntityByEntityIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByEntityIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEntityByRecordIdRequest::InitAsDefaultInstance() {
}
class GetEntityByRecordIdRequest::_Internal {
 public:
};

GetEntityByRecordIdRequest::GetEntityByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByRecordIdRequest)
}
GetEntityByRecordIdRequest::GetEntityByRecordIdRequest(const GetEntityByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByRecordIdRequest)
}

void GetEntityByRecordIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEntityByRecordIdRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

GetEntityByRecordIdRequest::~GetEntityByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByRecordIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetEntityByRecordIdRequest::ArenaDtor(void* object) {
  GetEntityByRecordIdRequest* _this = reinterpret_cast< GetEntityByRecordIdRequest* >(object);
  (void)_this;
}
void GetEntityByRecordIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityByRecordIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityByRecordIdRequest& GetEntityByRecordIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityByRecordIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetEntityByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByRecordIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetEntityByRecordIdRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetEntityByRecordIdRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityByRecordIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByRecordIdRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByRecordIdRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByRecordIdRequest)
  return target;
}

size_t GetEntityByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByRecordIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityByRecordIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetEntityByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityByRecordIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityByRecordIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetEntityByRecordIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetEntityByRecordIdRequest)
    MergeFrom(*source);
  }
}

void GetEntityByRecordIdRequest::MergeFrom(const GetEntityByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void GetEntityByRecordIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetEntityByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityByRecordIdRequest::CopyFrom(const GetEntityByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByRecordIdRequest::IsInitialized() const {
  return true;
}

void GetEntityByRecordIdRequest::InternalSwap(GetEntityByRecordIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByRecordIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetEntityByRecordIdResponse::InitAsDefaultInstance() {
}
class GetEntityByRecordIdResponse::_Internal {
 public:
};

GetEntityByRecordIdResponse::GetEntityByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetEntityByRecordIdResponse)
}
GetEntityByRecordIdResponse::GetEntityByRecordIdResponse(const GetEntityByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetEntityByRecordIdResponse)
}

void GetEntityByRecordIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetEntityByRecordIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetEntityByRecordIdResponse::~GetEntityByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetEntityByRecordIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetEntityByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetEntityByRecordIdResponse::ArenaDtor(void* object) {
  GetEntityByRecordIdResponse* _this = reinterpret_cast< GetEntityByRecordIdResponse* >(object);
  (void)_this;
}
void GetEntityByRecordIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetEntityByRecordIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetEntityByRecordIdResponse& GetEntityByRecordIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetEntityByRecordIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetEntityByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetEntityByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetEntityByRecordIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetEntityByRecordIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetEntityByRecordIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetEntityByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetEntityByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetEntityByRecordIdResponse)
  return target;
}

size_t GetEntityByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetEntityByRecordIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetEntityByRecordIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetEntityByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetEntityByRecordIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetEntityByRecordIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetEntityByRecordIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetEntityByRecordIdResponse)
    MergeFrom(*source);
  }
}

void GetEntityByRecordIdResponse::MergeFrom(const GetEntityByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetEntityByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetEntityByRecordIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetEntityByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetEntityByRecordIdResponse::CopyFrom(const GetEntityByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetEntityByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetEntityByRecordIdResponse::IsInitialized() const {
  return true;
}

void GetEntityByRecordIdResponse::InternalSwap(GetEntityByRecordIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetEntityByRecordIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRecordRequest::InitAsDefaultInstance() {
}
class GetRecordRequest::_Internal {
 public:
};

GetRecordRequest::GetRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRecordRequest)
}
GetRecordRequest::GetRecordRequest(const GetRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetRecordRequest)
}

void GetRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRecordRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

GetRecordRequest::~GetRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRecordRequest::ArenaDtor(void* object) {
  GetRecordRequest* _this = reinterpret_cast< GetRecordRequest* >(object);
  (void)_this;
}
void GetRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRecordRequest& GetRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetRecordRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetRecordRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRecordRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRecordRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRecordRequest)
  return target;
}

size_t GetRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetRecordRequest)
    MergeFrom(*source);
  }
}

void GetRecordRequest::MergeFrom(const GetRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void GetRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecordRequest::CopyFrom(const GetRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordRequest::IsInitialized() const {
  return true;
}

void GetRecordRequest::InternalSwap(GetRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRecordResponse::InitAsDefaultInstance() {
}
class GetRecordResponse::_Internal {
 public:
};

GetRecordResponse::GetRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRecordResponse)
}
GetRecordResponse::GetRecordResponse(const GetRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetRecordResponse)
}

void GetRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRecordResponse::~GetRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRecordResponse::ArenaDtor(void* object) {
  GetRecordResponse* _this = reinterpret_cast< GetRecordResponse* >(object);
  (void)_this;
}
void GetRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRecordResponse& GetRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRecordResponse)
  return target;
}

size_t GetRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetRecordResponse)
    MergeFrom(*source);
  }
}

void GetRecordResponse::MergeFrom(const GetRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRecordResponse::CopyFrom(const GetRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRecordResponse::IsInitialized() const {
  return true;
}

void GetRecordResponse::InternalSwap(GetRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRedoRecordRequest::InitAsDefaultInstance() {
}
class GetRedoRecordRequest::_Internal {
 public:
};

GetRedoRecordRequest::GetRedoRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRedoRecordRequest)
}
GetRedoRecordRequest::GetRedoRecordRequest(const GetRedoRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.GetRedoRecordRequest)
}

void GetRedoRecordRequest::SharedCtor() {
}

GetRedoRecordRequest::~GetRedoRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetRedoRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRedoRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetRedoRecordRequest::ArenaDtor(void* object) {
  GetRedoRecordRequest* _this = reinterpret_cast< GetRedoRecordRequest* >(object);
  (void)_this;
}
void GetRedoRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRedoRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRedoRecordRequest& GetRedoRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRedoRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetRedoRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRedoRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRedoRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRedoRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRedoRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRedoRecordRequest)
  return target;
}

size_t GetRedoRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRedoRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRedoRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetRedoRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRedoRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRedoRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetRedoRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetRedoRecordRequest)
    MergeFrom(*source);
  }
}

void GetRedoRecordRequest::MergeFrom(const GetRedoRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRedoRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetRedoRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetRedoRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRedoRecordRequest::CopyFrom(const GetRedoRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRedoRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedoRecordRequest::IsInitialized() const {
  return true;
}

void GetRedoRecordRequest::InternalSwap(GetRedoRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRedoRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetRedoRecordResponse::InitAsDefaultInstance() {
}
class GetRedoRecordResponse::_Internal {
 public:
};

GetRedoRecordResponse::GetRedoRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetRedoRecordResponse)
}
GetRedoRecordResponse::GetRedoRecordResponse(const GetRedoRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetRedoRecordResponse)
}

void GetRedoRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetRedoRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetRedoRecordResponse::~GetRedoRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetRedoRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetRedoRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetRedoRecordResponse::ArenaDtor(void* object) {
  GetRedoRecordResponse* _this = reinterpret_cast< GetRedoRecordResponse* >(object);
  (void)_this;
}
void GetRedoRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetRedoRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetRedoRecordResponse& GetRedoRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetRedoRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetRedoRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetRedoRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetRedoRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetRedoRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetRedoRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetRedoRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetRedoRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetRedoRecordResponse)
  return target;
}

size_t GetRedoRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetRedoRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetRedoRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetRedoRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetRedoRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetRedoRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetRedoRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetRedoRecordResponse)
    MergeFrom(*source);
  }
}

void GetRedoRecordResponse::MergeFrom(const GetRedoRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetRedoRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetRedoRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetRedoRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetRedoRecordResponse::CopyFrom(const GetRedoRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetRedoRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetRedoRecordResponse::IsInitialized() const {
  return true;
}

void GetRedoRecordResponse::InternalSwap(GetRedoRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetRedoRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatsRequest::InitAsDefaultInstance() {
}
class GetStatsRequest::_Internal {
 public:
};

GetStatsRequest::GetStatsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetStatsRequest)
}
GetStatsRequest::GetStatsRequest(const GetStatsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.GetStatsRequest)
}

void GetStatsRequest::SharedCtor() {
}

GetStatsRequest::~GetStatsRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetStatsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetStatsRequest::ArenaDtor(void* object) {
  GetStatsRequest* _this = reinterpret_cast< GetStatsRequest* >(object);
  (void)_this;
}
void GetStatsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatsRequest& GetStatsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatsRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetStatsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetStatsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetStatsRequest)
  return target;
}

size_t GetStatsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetStatsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetStatsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetStatsRequest)
    MergeFrom(*source);
  }
}

void GetStatsRequest::MergeFrom(const GetStatsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetStatsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetStatsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatsRequest::CopyFrom(const GetStatsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetStatsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsRequest::IsInitialized() const {
  return true;
}

void GetStatsRequest::InternalSwap(GetStatsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetStatsResponse::InitAsDefaultInstance() {
}
class GetStatsResponse::_Internal {
 public:
};

GetStatsResponse::GetStatsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetStatsResponse)
}
GetStatsResponse::GetStatsResponse(const GetStatsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetStatsResponse)
}

void GetStatsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetStatsResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetStatsResponse::~GetStatsResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetStatsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetStatsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetStatsResponse::ArenaDtor(void* object) {
  GetStatsResponse* _this = reinterpret_cast< GetStatsResponse* >(object);
  (void)_this;
}
void GetStatsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetStatsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetStatsResponse& GetStatsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetStatsResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetStatsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetStatsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetStatsResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetStatsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetStatsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetStatsResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetStatsResponse)
  return target;
}

size_t GetStatsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetStatsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetStatsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetStatsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetStatsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetStatsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetStatsResponse)
    MergeFrom(*source);
  }
}

void GetStatsResponse::MergeFrom(const GetStatsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetStatsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetStatsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetStatsResponse::CopyFrom(const GetStatsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetStatsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetStatsResponse::IsInitialized() const {
  return true;
}

void GetStatsResponse::InternalSwap(GetStatsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetStatsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetVirtualEntityByRecordIdRequest::InitAsDefaultInstance() {
}
class GetVirtualEntityByRecordIdRequest::_Internal {
 public:
};

GetVirtualEntityByRecordIdRequest::GetVirtualEntityByRecordIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetVirtualEntityByRecordIdRequest)
}
GetVirtualEntityByRecordIdRequest::GetVirtualEntityByRecordIdRequest(const GetVirtualEntityByRecordIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recordkeys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordkeys().empty()) {
    recordkeys_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordkeys(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.GetVirtualEntityByRecordIdRequest)
}

void GetVirtualEntityByRecordIdRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetVirtualEntityByRecordIdRequest_szengine_2eproto.base);
  recordkeys_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

GetVirtualEntityByRecordIdRequest::~GetVirtualEntityByRecordIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.GetVirtualEntityByRecordIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVirtualEntityByRecordIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recordkeys_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetVirtualEntityByRecordIdRequest::ArenaDtor(void* object) {
  GetVirtualEntityByRecordIdRequest* _this = reinterpret_cast< GetVirtualEntityByRecordIdRequest* >(object);
  (void)_this;
}
void GetVirtualEntityByRecordIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualEntityByRecordIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVirtualEntityByRecordIdRequest& GetVirtualEntityByRecordIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVirtualEntityByRecordIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetVirtualEntityByRecordIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetVirtualEntityByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recordkeys_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualEntityByRecordIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recordKeys = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recordkeys();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetVirtualEntityByRecordIdRequest.recordKeys"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVirtualEntityByRecordIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetVirtualEntityByRecordIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recordKeys = 1;
  if (this->recordkeys().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordkeys().data(), static_cast<int>(this->_internal_recordkeys().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetVirtualEntityByRecordIdRequest.recordKeys");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recordkeys(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetVirtualEntityByRecordIdRequest)
  return target;
}

size_t GetVirtualEntityByRecordIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetVirtualEntityByRecordIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recordKeys = 1;
  if (this->recordkeys().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordkeys());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVirtualEntityByRecordIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetVirtualEntityByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVirtualEntityByRecordIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVirtualEntityByRecordIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetVirtualEntityByRecordIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetVirtualEntityByRecordIdRequest)
    MergeFrom(*source);
  }
}

void GetVirtualEntityByRecordIdRequest::MergeFrom(const GetVirtualEntityByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetVirtualEntityByRecordIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recordkeys().size() > 0) {
    _internal_set_recordkeys(from._internal_recordkeys());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void GetVirtualEntityByRecordIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetVirtualEntityByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVirtualEntityByRecordIdRequest::CopyFrom(const GetVirtualEntityByRecordIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetVirtualEntityByRecordIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualEntityByRecordIdRequest::IsInitialized() const {
  return true;
}

void GetVirtualEntityByRecordIdRequest::InternalSwap(GetVirtualEntityByRecordIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recordkeys_.Swap(&other->recordkeys_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualEntityByRecordIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetVirtualEntityByRecordIdResponse::InitAsDefaultInstance() {
}
class GetVirtualEntityByRecordIdResponse::_Internal {
 public:
};

GetVirtualEntityByRecordIdResponse::GetVirtualEntityByRecordIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.GetVirtualEntityByRecordIdResponse)
}
GetVirtualEntityByRecordIdResponse::GetVirtualEntityByRecordIdResponse(const GetVirtualEntityByRecordIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.GetVirtualEntityByRecordIdResponse)
}

void GetVirtualEntityByRecordIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetVirtualEntityByRecordIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetVirtualEntityByRecordIdResponse::~GetVirtualEntityByRecordIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.GetVirtualEntityByRecordIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetVirtualEntityByRecordIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetVirtualEntityByRecordIdResponse::ArenaDtor(void* object) {
  GetVirtualEntityByRecordIdResponse* _this = reinterpret_cast< GetVirtualEntityByRecordIdResponse* >(object);
  (void)_this;
}
void GetVirtualEntityByRecordIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetVirtualEntityByRecordIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetVirtualEntityByRecordIdResponse& GetVirtualEntityByRecordIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetVirtualEntityByRecordIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void GetVirtualEntityByRecordIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.GetVirtualEntityByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetVirtualEntityByRecordIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.GetVirtualEntityByRecordIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetVirtualEntityByRecordIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.GetVirtualEntityByRecordIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.GetVirtualEntityByRecordIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.GetVirtualEntityByRecordIdResponse)
  return target;
}

size_t GetVirtualEntityByRecordIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.GetVirtualEntityByRecordIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetVirtualEntityByRecordIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.GetVirtualEntityByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetVirtualEntityByRecordIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetVirtualEntityByRecordIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.GetVirtualEntityByRecordIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.GetVirtualEntityByRecordIdResponse)
    MergeFrom(*source);
  }
}

void GetVirtualEntityByRecordIdResponse::MergeFrom(const GetVirtualEntityByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.GetVirtualEntityByRecordIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetVirtualEntityByRecordIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.GetVirtualEntityByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetVirtualEntityByRecordIdResponse::CopyFrom(const GetVirtualEntityByRecordIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.GetVirtualEntityByRecordIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetVirtualEntityByRecordIdResponse::IsInitialized() const {
  return true;
}

void GetVirtualEntityByRecordIdResponse::InternalSwap(GetVirtualEntityByRecordIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetVirtualEntityByRecordIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HowEntityByEntityIdRequest::InitAsDefaultInstance() {
}
class HowEntityByEntityIdRequest::_Internal {
 public:
};

HowEntityByEntityIdRequest::HowEntityByEntityIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.HowEntityByEntityIdRequest)
}
HowEntityByEntityIdRequest::HowEntityByEntityIdRequest(const HowEntityByEntityIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.HowEntityByEntityIdRequest)
}

void HowEntityByEntityIdRequest::SharedCtor() {
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
}

HowEntityByEntityIdRequest::~HowEntityByEntityIdRequest() {
  // @@protoc_insertion_point(destructor:szengine.HowEntityByEntityIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HowEntityByEntityIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HowEntityByEntityIdRequest::ArenaDtor(void* object) {
  HowEntityByEntityIdRequest* _this = reinterpret_cast< HowEntityByEntityIdRequest* >(object);
  (void)_this;
}
void HowEntityByEntityIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HowEntityByEntityIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HowEntityByEntityIdRequest& HowEntityByEntityIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HowEntityByEntityIdRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void HowEntityByEntityIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.HowEntityByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HowEntityByEntityIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entityId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HowEntityByEntityIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.HowEntityByEntityIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entityid(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.HowEntityByEntityIdRequest)
  return target;
}

size_t HowEntityByEntityIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.HowEntityByEntityIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entityid());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HowEntityByEntityIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.HowEntityByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HowEntityByEntityIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HowEntityByEntityIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.HowEntityByEntityIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.HowEntityByEntityIdRequest)
    MergeFrom(*source);
  }
}

void HowEntityByEntityIdRequest::MergeFrom(const HowEntityByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.HowEntityByEntityIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entityid() != 0) {
    _internal_set_entityid(from._internal_entityid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void HowEntityByEntityIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.HowEntityByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HowEntityByEntityIdRequest::CopyFrom(const HowEntityByEntityIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.HowEntityByEntityIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HowEntityByEntityIdRequest::IsInitialized() const {
  return true;
}

void HowEntityByEntityIdRequest::InternalSwap(HowEntityByEntityIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HowEntityByEntityIdRequest, flags_)
      + sizeof(HowEntityByEntityIdRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(HowEntityByEntityIdRequest, entityid_)>(
          reinterpret_cast<char*>(&entityid_),
          reinterpret_cast<char*>(&other->entityid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HowEntityByEntityIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void HowEntityByEntityIdResponse::InitAsDefaultInstance() {
}
class HowEntityByEntityIdResponse::_Internal {
 public:
};

HowEntityByEntityIdResponse::HowEntityByEntityIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.HowEntityByEntityIdResponse)
}
HowEntityByEntityIdResponse::HowEntityByEntityIdResponse(const HowEntityByEntityIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.HowEntityByEntityIdResponse)
}

void HowEntityByEntityIdResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HowEntityByEntityIdResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HowEntityByEntityIdResponse::~HowEntityByEntityIdResponse() {
  // @@protoc_insertion_point(destructor:szengine.HowEntityByEntityIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HowEntityByEntityIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HowEntityByEntityIdResponse::ArenaDtor(void* object) {
  HowEntityByEntityIdResponse* _this = reinterpret_cast< HowEntityByEntityIdResponse* >(object);
  (void)_this;
}
void HowEntityByEntityIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HowEntityByEntityIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HowEntityByEntityIdResponse& HowEntityByEntityIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HowEntityByEntityIdResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void HowEntityByEntityIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.HowEntityByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HowEntityByEntityIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.HowEntityByEntityIdResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HowEntityByEntityIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.HowEntityByEntityIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.HowEntityByEntityIdResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.HowEntityByEntityIdResponse)
  return target;
}

size_t HowEntityByEntityIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.HowEntityByEntityIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HowEntityByEntityIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.HowEntityByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HowEntityByEntityIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HowEntityByEntityIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.HowEntityByEntityIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.HowEntityByEntityIdResponse)
    MergeFrom(*source);
  }
}

void HowEntityByEntityIdResponse::MergeFrom(const HowEntityByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.HowEntityByEntityIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void HowEntityByEntityIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.HowEntityByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HowEntityByEntityIdResponse::CopyFrom(const HowEntityByEntityIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.HowEntityByEntityIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HowEntityByEntityIdResponse::IsInitialized() const {
  return true;
}

void HowEntityByEntityIdResponse::InternalSwap(HowEntityByEntityIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata HowEntityByEntityIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PreprocessRecordRequest::InitAsDefaultInstance() {
}
class PreprocessRecordRequest::_Internal {
 public:
};

PreprocessRecordRequest::PreprocessRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.PreprocessRecordRequest)
}
PreprocessRecordRequest::PreprocessRecordRequest(const PreprocessRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  recorddefinition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recorddefinition().empty()) {
    recorddefinition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recorddefinition(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.PreprocessRecordRequest)
}

void PreprocessRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreprocessRecordRequest_szengine_2eproto.base);
  recorddefinition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

PreprocessRecordRequest::~PreprocessRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.PreprocessRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreprocessRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  recorddefinition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreprocessRecordRequest::ArenaDtor(void* object) {
  PreprocessRecordRequest* _this = reinterpret_cast< PreprocessRecordRequest* >(object);
  (void)_this;
}
void PreprocessRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreprocessRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreprocessRecordRequest& PreprocessRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreprocessRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void PreprocessRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.PreprocessRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  recorddefinition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreprocessRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string recordDefinition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_recorddefinition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.PreprocessRecordRequest.recordDefinition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreprocessRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.PreprocessRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string recordDefinition = 1;
  if (this->recorddefinition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recorddefinition().data(), static_cast<int>(this->_internal_recorddefinition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.PreprocessRecordRequest.recordDefinition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_recorddefinition(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.PreprocessRecordRequest)
  return target;
}

size_t PreprocessRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.PreprocessRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string recordDefinition = 1;
  if (this->recorddefinition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recorddefinition());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreprocessRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.PreprocessRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PreprocessRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreprocessRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.PreprocessRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.PreprocessRecordRequest)
    MergeFrom(*source);
  }
}

void PreprocessRecordRequest::MergeFrom(const PreprocessRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.PreprocessRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.recorddefinition().size() > 0) {
    _internal_set_recorddefinition(from._internal_recorddefinition());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void PreprocessRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.PreprocessRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreprocessRecordRequest::CopyFrom(const PreprocessRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.PreprocessRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreprocessRecordRequest::IsInitialized() const {
  return true;
}

void PreprocessRecordRequest::InternalSwap(PreprocessRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  recorddefinition_.Swap(&other->recorddefinition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PreprocessRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PreprocessRecordResponse::InitAsDefaultInstance() {
}
class PreprocessRecordResponse::_Internal {
 public:
};

PreprocessRecordResponse::PreprocessRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.PreprocessRecordResponse)
}
PreprocessRecordResponse::PreprocessRecordResponse(const PreprocessRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.PreprocessRecordResponse)
}

void PreprocessRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PreprocessRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

PreprocessRecordResponse::~PreprocessRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.PreprocessRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PreprocessRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void PreprocessRecordResponse::ArenaDtor(void* object) {
  PreprocessRecordResponse* _this = reinterpret_cast< PreprocessRecordResponse* >(object);
  (void)_this;
}
void PreprocessRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PreprocessRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PreprocessRecordResponse& PreprocessRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PreprocessRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void PreprocessRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.PreprocessRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PreprocessRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.PreprocessRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PreprocessRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.PreprocessRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.PreprocessRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.PreprocessRecordResponse)
  return target;
}

size_t PreprocessRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.PreprocessRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PreprocessRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.PreprocessRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PreprocessRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PreprocessRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.PreprocessRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.PreprocessRecordResponse)
    MergeFrom(*source);
  }
}

void PreprocessRecordResponse::MergeFrom(const PreprocessRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.PreprocessRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void PreprocessRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.PreprocessRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PreprocessRecordResponse::CopyFrom(const PreprocessRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.PreprocessRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PreprocessRecordResponse::IsInitialized() const {
  return true;
}

void PreprocessRecordResponse::InternalSwap(PreprocessRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata PreprocessRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrimeEngineRequest::InitAsDefaultInstance() {
}
class PrimeEngineRequest::_Internal {
 public:
};

PrimeEngineRequest::PrimeEngineRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.PrimeEngineRequest)
}
PrimeEngineRequest::PrimeEngineRequest(const PrimeEngineRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.PrimeEngineRequest)
}

void PrimeEngineRequest::SharedCtor() {
}

PrimeEngineRequest::~PrimeEngineRequest() {
  // @@protoc_insertion_point(destructor:szengine.PrimeEngineRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrimeEngineRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PrimeEngineRequest::ArenaDtor(void* object) {
  PrimeEngineRequest* _this = reinterpret_cast< PrimeEngineRequest* >(object);
  (void)_this;
}
void PrimeEngineRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrimeEngineRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrimeEngineRequest& PrimeEngineRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrimeEngineRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void PrimeEngineRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.PrimeEngineRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrimeEngineRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrimeEngineRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.PrimeEngineRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.PrimeEngineRequest)
  return target;
}

size_t PrimeEngineRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.PrimeEngineRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrimeEngineRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.PrimeEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimeEngineRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrimeEngineRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.PrimeEngineRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.PrimeEngineRequest)
    MergeFrom(*source);
  }
}

void PrimeEngineRequest::MergeFrom(const PrimeEngineRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.PrimeEngineRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PrimeEngineRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.PrimeEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimeEngineRequest::CopyFrom(const PrimeEngineRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.PrimeEngineRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimeEngineRequest::IsInitialized() const {
  return true;
}

void PrimeEngineRequest::InternalSwap(PrimeEngineRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrimeEngineRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PrimeEngineResponse::InitAsDefaultInstance() {
}
class PrimeEngineResponse::_Internal {
 public:
};

PrimeEngineResponse::PrimeEngineResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.PrimeEngineResponse)
}
PrimeEngineResponse::PrimeEngineResponse(const PrimeEngineResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.PrimeEngineResponse)
}

void PrimeEngineResponse::SharedCtor() {
}

PrimeEngineResponse::~PrimeEngineResponse() {
  // @@protoc_insertion_point(destructor:szengine.PrimeEngineResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PrimeEngineResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PrimeEngineResponse::ArenaDtor(void* object) {
  PrimeEngineResponse* _this = reinterpret_cast< PrimeEngineResponse* >(object);
  (void)_this;
}
void PrimeEngineResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PrimeEngineResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PrimeEngineResponse& PrimeEngineResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PrimeEngineResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void PrimeEngineResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.PrimeEngineResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PrimeEngineResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PrimeEngineResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.PrimeEngineResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.PrimeEngineResponse)
  return target;
}

size_t PrimeEngineResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.PrimeEngineResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PrimeEngineResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.PrimeEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PrimeEngineResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PrimeEngineResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.PrimeEngineResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.PrimeEngineResponse)
    MergeFrom(*source);
  }
}

void PrimeEngineResponse::MergeFrom(const PrimeEngineResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.PrimeEngineResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PrimeEngineResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.PrimeEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimeEngineResponse::CopyFrom(const PrimeEngineResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.PrimeEngineResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimeEngineResponse::IsInitialized() const {
  return true;
}

void PrimeEngineResponse::InternalSwap(PrimeEngineResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PrimeEngineResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessRedoRecordRequest::InitAsDefaultInstance() {
}
class ProcessRedoRecordRequest::_Internal {
 public:
};

ProcessRedoRecordRequest::ProcessRedoRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ProcessRedoRecordRequest)
}
ProcessRedoRecordRequest::ProcessRedoRecordRequest(const ProcessRedoRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  redorecord_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_redorecord().empty()) {
    redorecord_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_redorecord(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ProcessRedoRecordRequest)
}

void ProcessRedoRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessRedoRecordRequest_szengine_2eproto.base);
  redorecord_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

ProcessRedoRecordRequest::~ProcessRedoRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.ProcessRedoRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProcessRedoRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  redorecord_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProcessRedoRecordRequest::ArenaDtor(void* object) {
  ProcessRedoRecordRequest* _this = reinterpret_cast< ProcessRedoRecordRequest* >(object);
  (void)_this;
}
void ProcessRedoRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProcessRedoRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessRedoRecordRequest& ProcessRedoRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessRedoRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void ProcessRedoRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ProcessRedoRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  redorecord_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessRedoRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string redoRecord = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_redorecord();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ProcessRedoRecordRequest.redoRecord"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessRedoRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ProcessRedoRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string redoRecord = 1;
  if (this->redorecord().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_redorecord().data(), static_cast<int>(this->_internal_redorecord().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ProcessRedoRecordRequest.redoRecord");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_redorecord(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ProcessRedoRecordRequest)
  return target;
}

size_t ProcessRedoRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ProcessRedoRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string redoRecord = 1;
  if (this->redorecord().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_redorecord());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessRedoRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ProcessRedoRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessRedoRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessRedoRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ProcessRedoRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ProcessRedoRecordRequest)
    MergeFrom(*source);
  }
}

void ProcessRedoRecordRequest::MergeFrom(const ProcessRedoRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ProcessRedoRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.redorecord().size() > 0) {
    _internal_set_redorecord(from._internal_redorecord());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void ProcessRedoRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ProcessRedoRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessRedoRecordRequest::CopyFrom(const ProcessRedoRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ProcessRedoRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessRedoRecordRequest::IsInitialized() const {
  return true;
}

void ProcessRedoRecordRequest::InternalSwap(ProcessRedoRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  redorecord_.Swap(&other->redorecord_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessRedoRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ProcessRedoRecordResponse::InitAsDefaultInstance() {
}
class ProcessRedoRecordResponse::_Internal {
 public:
};

ProcessRedoRecordResponse::ProcessRedoRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ProcessRedoRecordResponse)
}
ProcessRedoRecordResponse::ProcessRedoRecordResponse(const ProcessRedoRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.ProcessRedoRecordResponse)
}

void ProcessRedoRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ProcessRedoRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ProcessRedoRecordResponse::~ProcessRedoRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.ProcessRedoRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ProcessRedoRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ProcessRedoRecordResponse::ArenaDtor(void* object) {
  ProcessRedoRecordResponse* _this = reinterpret_cast< ProcessRedoRecordResponse* >(object);
  (void)_this;
}
void ProcessRedoRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ProcessRedoRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ProcessRedoRecordResponse& ProcessRedoRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ProcessRedoRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void ProcessRedoRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ProcessRedoRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProcessRedoRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ProcessRedoRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ProcessRedoRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ProcessRedoRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ProcessRedoRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ProcessRedoRecordResponse)
  return target;
}

size_t ProcessRedoRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ProcessRedoRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ProcessRedoRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ProcessRedoRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ProcessRedoRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ProcessRedoRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ProcessRedoRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ProcessRedoRecordResponse)
    MergeFrom(*source);
  }
}

void ProcessRedoRecordResponse::MergeFrom(const ProcessRedoRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ProcessRedoRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void ProcessRedoRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ProcessRedoRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ProcessRedoRecordResponse::CopyFrom(const ProcessRedoRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ProcessRedoRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProcessRedoRecordResponse::IsInitialized() const {
  return true;
}

void ProcessRedoRecordResponse::InternalSwap(ProcessRedoRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ProcessRedoRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReevaluateEntityRequest::InitAsDefaultInstance() {
}
class ReevaluateEntityRequest::_Internal {
 public:
};

ReevaluateEntityRequest::ReevaluateEntityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateEntityRequest)
}
ReevaluateEntityRequest::ReevaluateEntityRequest(const ReevaluateEntityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&entityid_, &from.entityid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateEntityRequest)
}

void ReevaluateEntityRequest::SharedCtor() {
  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
}

ReevaluateEntityRequest::~ReevaluateEntityRequest() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateEntityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReevaluateEntityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReevaluateEntityRequest::ArenaDtor(void* object) {
  ReevaluateEntityRequest* _this = reinterpret_cast< ReevaluateEntityRequest* >(object);
  (void)_this;
}
void ReevaluateEntityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReevaluateEntityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReevaluateEntityRequest& ReevaluateEntityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReevaluateEntityRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void ReevaluateEntityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateEntityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entityid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateEntityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entityId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entityid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReevaluateEntityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateEntityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entityid(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateEntityRequest)
  return target;
}

size_t ReevaluateEntityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateEntityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entityId = 1;
  if (this->entityid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entityid());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReevaluateEntityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ReevaluateEntityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReevaluateEntityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReevaluateEntityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ReevaluateEntityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ReevaluateEntityRequest)
    MergeFrom(*source);
  }
}

void ReevaluateEntityRequest::MergeFrom(const ReevaluateEntityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateEntityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entityid() != 0) {
    _internal_set_entityid(from._internal_entityid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void ReevaluateEntityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ReevaluateEntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReevaluateEntityRequest::CopyFrom(const ReevaluateEntityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateEntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateEntityRequest::IsInitialized() const {
  return true;
}

void ReevaluateEntityRequest::InternalSwap(ReevaluateEntityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReevaluateEntityRequest, flags_)
      + sizeof(ReevaluateEntityRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(ReevaluateEntityRequest, entityid_)>(
          reinterpret_cast<char*>(&entityid_),
          reinterpret_cast<char*>(&other->entityid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateEntityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReevaluateEntityResponse::InitAsDefaultInstance() {
}
class ReevaluateEntityResponse::_Internal {
 public:
};

ReevaluateEntityResponse::ReevaluateEntityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateEntityResponse)
}
ReevaluateEntityResponse::ReevaluateEntityResponse(const ReevaluateEntityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateEntityResponse)
}

void ReevaluateEntityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReevaluateEntityResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReevaluateEntityResponse::~ReevaluateEntityResponse() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateEntityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReevaluateEntityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReevaluateEntityResponse::ArenaDtor(void* object) {
  ReevaluateEntityResponse* _this = reinterpret_cast< ReevaluateEntityResponse* >(object);
  (void)_this;
}
void ReevaluateEntityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReevaluateEntityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReevaluateEntityResponse& ReevaluateEntityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReevaluateEntityResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void ReevaluateEntityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateEntityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateEntityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ReevaluateEntityResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReevaluateEntityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateEntityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateEntityResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateEntityResponse)
  return target;
}

size_t ReevaluateEntityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateEntityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReevaluateEntityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ReevaluateEntityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReevaluateEntityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReevaluateEntityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ReevaluateEntityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ReevaluateEntityResponse)
    MergeFrom(*source);
  }
}

void ReevaluateEntityResponse::MergeFrom(const ReevaluateEntityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateEntityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void ReevaluateEntityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ReevaluateEntityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReevaluateEntityResponse::CopyFrom(const ReevaluateEntityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateEntityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateEntityResponse::IsInitialized() const {
  return true;
}

void ReevaluateEntityResponse::InternalSwap(ReevaluateEntityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateEntityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReevaluateRecordRequest::InitAsDefaultInstance() {
}
class ReevaluateRecordRequest::_Internal {
 public:
};

ReevaluateRecordRequest::ReevaluateRecordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateRecordRequest)
}
ReevaluateRecordRequest::ReevaluateRecordRequest(const ReevaluateRecordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateRecordRequest)
}

void ReevaluateRecordRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReevaluateRecordRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

ReevaluateRecordRequest::~ReevaluateRecordRequest() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateRecordRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReevaluateRecordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReevaluateRecordRequest::ArenaDtor(void* object) {
  ReevaluateRecordRequest* _this = reinterpret_cast< ReevaluateRecordRequest* >(object);
  (void)_this;
}
void ReevaluateRecordRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReevaluateRecordRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReevaluateRecordRequest& ReevaluateRecordRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReevaluateRecordRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void ReevaluateRecordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateRecordRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ReevaluateRecordRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ReevaluateRecordRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReevaluateRecordRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateRecordRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateRecordRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateRecordRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateRecordRequest)
  return target;
}

size_t ReevaluateRecordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateRecordRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReevaluateRecordRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ReevaluateRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReevaluateRecordRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReevaluateRecordRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ReevaluateRecordRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ReevaluateRecordRequest)
    MergeFrom(*source);
  }
}

void ReevaluateRecordRequest::MergeFrom(const ReevaluateRecordRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateRecordRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void ReevaluateRecordRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ReevaluateRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReevaluateRecordRequest::CopyFrom(const ReevaluateRecordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateRecordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateRecordRequest::IsInitialized() const {
  return true;
}

void ReevaluateRecordRequest::InternalSwap(ReevaluateRecordRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateRecordRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReevaluateRecordResponse::InitAsDefaultInstance() {
}
class ReevaluateRecordResponse::_Internal {
 public:
};

ReevaluateRecordResponse::ReevaluateRecordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ReevaluateRecordResponse)
}
ReevaluateRecordResponse::ReevaluateRecordResponse(const ReevaluateRecordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.ReevaluateRecordResponse)
}

void ReevaluateRecordResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ReevaluateRecordResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ReevaluateRecordResponse::~ReevaluateRecordResponse() {
  // @@protoc_insertion_point(destructor:szengine.ReevaluateRecordResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReevaluateRecordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ReevaluateRecordResponse::ArenaDtor(void* object) {
  ReevaluateRecordResponse* _this = reinterpret_cast< ReevaluateRecordResponse* >(object);
  (void)_this;
}
void ReevaluateRecordResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReevaluateRecordResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReevaluateRecordResponse& ReevaluateRecordResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReevaluateRecordResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void ReevaluateRecordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReevaluateRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReevaluateRecordResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.ReevaluateRecordResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReevaluateRecordResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReevaluateRecordResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.ReevaluateRecordResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReevaluateRecordResponse)
  return target;
}

size_t ReevaluateRecordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReevaluateRecordResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReevaluateRecordResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ReevaluateRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReevaluateRecordResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReevaluateRecordResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ReevaluateRecordResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ReevaluateRecordResponse)
    MergeFrom(*source);
  }
}

void ReevaluateRecordResponse::MergeFrom(const ReevaluateRecordResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReevaluateRecordResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void ReevaluateRecordResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ReevaluateRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReevaluateRecordResponse::CopyFrom(const ReevaluateRecordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReevaluateRecordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReevaluateRecordResponse::IsInitialized() const {
  return true;
}

void ReevaluateRecordResponse::InternalSwap(ReevaluateRecordResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ReevaluateRecordResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReinitializeRequest::InitAsDefaultInstance() {
}
class ReinitializeRequest::_Internal {
 public:
};

ReinitializeRequest::ReinitializeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ReinitializeRequest)
}
ReinitializeRequest::ReinitializeRequest(const ReinitializeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configid_ = from.configid_;
  // @@protoc_insertion_point(copy_constructor:szengine.ReinitializeRequest)
}

void ReinitializeRequest::SharedCtor() {
  configid_ = PROTOBUF_LONGLONG(0);
}

ReinitializeRequest::~ReinitializeRequest() {
  // @@protoc_insertion_point(destructor:szengine.ReinitializeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReinitializeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReinitializeRequest::ArenaDtor(void* object) {
  ReinitializeRequest* _this = reinterpret_cast< ReinitializeRequest* >(object);
  (void)_this;
}
void ReinitializeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReinitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReinitializeRequest& ReinitializeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReinitializeRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void ReinitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReinitializeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitializeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 configId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          configid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReinitializeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReinitializeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_configid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReinitializeRequest)
  return target;
}

size_t ReinitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReinitializeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_configid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReinitializeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ReinitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinitializeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReinitializeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ReinitializeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ReinitializeRequest)
    MergeFrom(*source);
  }
}

void ReinitializeRequest::MergeFrom(const ReinitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReinitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.configid() != 0) {
    _internal_set_configid(from._internal_configid());
  }
}

void ReinitializeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ReinitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinitializeRequest::CopyFrom(const ReinitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReinitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitializeRequest::IsInitialized() const {
  return true;
}

void ReinitializeRequest::InternalSwap(ReinitializeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(configid_, other->configid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReinitializeResponse::InitAsDefaultInstance() {
}
class ReinitializeResponse::_Internal {
 public:
};

ReinitializeResponse::ReinitializeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.ReinitializeResponse)
}
ReinitializeResponse::ReinitializeResponse(const ReinitializeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szengine.ReinitializeResponse)
}

void ReinitializeResponse::SharedCtor() {
}

ReinitializeResponse::~ReinitializeResponse() {
  // @@protoc_insertion_point(destructor:szengine.ReinitializeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReinitializeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReinitializeResponse::ArenaDtor(void* object) {
  ReinitializeResponse* _this = reinterpret_cast< ReinitializeResponse* >(object);
  (void)_this;
}
void ReinitializeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReinitializeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReinitializeResponse& ReinitializeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReinitializeResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void ReinitializeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.ReinitializeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitializeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReinitializeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.ReinitializeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.ReinitializeResponse)
  return target;
}

size_t ReinitializeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.ReinitializeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReinitializeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.ReinitializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinitializeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReinitializeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.ReinitializeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.ReinitializeResponse)
    MergeFrom(*source);
  }
}

void ReinitializeResponse::MergeFrom(const ReinitializeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.ReinitializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReinitializeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.ReinitializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinitializeResponse::CopyFrom(const ReinitializeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.ReinitializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitializeResponse::IsInitialized() const {
  return true;
}

void ReinitializeResponse::InternalSwap(ReinitializeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchByAttributesRequest::InitAsDefaultInstance() {
}
class SearchByAttributesRequest::_Internal {
 public:
};

SearchByAttributesRequest::SearchByAttributesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.SearchByAttributesRequest)
}
SearchByAttributesRequest::SearchByAttributesRequest(const SearchByAttributesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  attributes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_attributes().empty()) {
    attributes_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_attributes(),
      GetArena());
  }
  searchprofile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_searchprofile().empty()) {
    searchprofile_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_searchprofile(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.SearchByAttributesRequest)
}

void SearchByAttributesRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchByAttributesRequest_szengine_2eproto.base);
  attributes_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  searchprofile_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

SearchByAttributesRequest::~SearchByAttributesRequest() {
  // @@protoc_insertion_point(destructor:szengine.SearchByAttributesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SearchByAttributesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  attributes_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  searchprofile_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchByAttributesRequest::ArenaDtor(void* object) {
  SearchByAttributesRequest* _this = reinterpret_cast< SearchByAttributesRequest* >(object);
  (void)_this;
}
void SearchByAttributesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchByAttributesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchByAttributesRequest& SearchByAttributesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchByAttributesRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void SearchByAttributesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.SearchByAttributesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  attributes_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  searchprofile_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchByAttributesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string attributes = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_attributes();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.SearchByAttributesRequest.attributes"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string searchProfile = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_searchprofile();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.SearchByAttributesRequest.searchProfile"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchByAttributesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.SearchByAttributesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string attributes = 1;
  if (this->attributes().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attributes().data(), static_cast<int>(this->_internal_attributes().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.SearchByAttributesRequest.attributes");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attributes(), target);
  }

  // string searchProfile = 2;
  if (this->searchprofile().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_searchprofile().data(), static_cast<int>(this->_internal_searchprofile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.SearchByAttributesRequest.searchProfile");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_searchprofile(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.SearchByAttributesRequest)
  return target;
}

size_t SearchByAttributesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.SearchByAttributesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string attributes = 1;
  if (this->attributes().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attributes());
  }

  // string searchProfile = 2;
  if (this->searchprofile().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_searchprofile());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchByAttributesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.SearchByAttributesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchByAttributesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchByAttributesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.SearchByAttributesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.SearchByAttributesRequest)
    MergeFrom(*source);
  }
}

void SearchByAttributesRequest::MergeFrom(const SearchByAttributesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.SearchByAttributesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.attributes().size() > 0) {
    _internal_set_attributes(from._internal_attributes());
  }
  if (from.searchprofile().size() > 0) {
    _internal_set_searchprofile(from._internal_searchprofile());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void SearchByAttributesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.SearchByAttributesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchByAttributesRequest::CopyFrom(const SearchByAttributesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.SearchByAttributesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchByAttributesRequest::IsInitialized() const {
  return true;
}

void SearchByAttributesRequest::InternalSwap(SearchByAttributesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  attributes_.Swap(&other->attributes_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  searchprofile_.Swap(&other->searchprofile_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchByAttributesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SearchByAttributesResponse::InitAsDefaultInstance() {
}
class SearchByAttributesResponse::_Internal {
 public:
};

SearchByAttributesResponse::SearchByAttributesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.SearchByAttributesResponse)
}
SearchByAttributesResponse::SearchByAttributesResponse(const SearchByAttributesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.SearchByAttributesResponse)
}

void SearchByAttributesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SearchByAttributesResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SearchByAttributesResponse::~SearchByAttributesResponse() {
  // @@protoc_insertion_point(destructor:szengine.SearchByAttributesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SearchByAttributesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SearchByAttributesResponse::ArenaDtor(void* object) {
  SearchByAttributesResponse* _this = reinterpret_cast< SearchByAttributesResponse* >(object);
  (void)_this;
}
void SearchByAttributesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SearchByAttributesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SearchByAttributesResponse& SearchByAttributesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SearchByAttributesResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void SearchByAttributesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.SearchByAttributesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SearchByAttributesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.SearchByAttributesResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SearchByAttributesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.SearchByAttributesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.SearchByAttributesResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.SearchByAttributesResponse)
  return target;
}

size_t SearchByAttributesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.SearchByAttributesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SearchByAttributesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.SearchByAttributesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SearchByAttributesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SearchByAttributesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.SearchByAttributesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.SearchByAttributesResponse)
    MergeFrom(*source);
  }
}

void SearchByAttributesResponse::MergeFrom(const SearchByAttributesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.SearchByAttributesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void SearchByAttributesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.SearchByAttributesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SearchByAttributesResponse::CopyFrom(const SearchByAttributesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.SearchByAttributesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SearchByAttributesResponse::IsInitialized() const {
  return true;
}

void SearchByAttributesResponse::InternalSwap(SearchByAttributesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SearchByAttributesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamExportCsvEntityReportRequest::InitAsDefaultInstance() {
}
class StreamExportCsvEntityReportRequest::_Internal {
 public:
};

StreamExportCsvEntityReportRequest::StreamExportCsvEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportCsvEntityReportRequest)
}
StreamExportCsvEntityReportRequest::StreamExportCsvEntityReportRequest(const StreamExportCsvEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  csvcolumnlist_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_csvcolumnlist().empty()) {
    csvcolumnlist_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_csvcolumnlist(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportCsvEntityReportRequest)
}

void StreamExportCsvEntityReportRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamExportCsvEntityReportRequest_szengine_2eproto.base);
  csvcolumnlist_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

StreamExportCsvEntityReportRequest::~StreamExportCsvEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportCsvEntityReportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamExportCsvEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  csvcolumnlist_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamExportCsvEntityReportRequest::ArenaDtor(void* object) {
  StreamExportCsvEntityReportRequest* _this = reinterpret_cast< StreamExportCsvEntityReportRequest* >(object);
  (void)_this;
}
void StreamExportCsvEntityReportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamExportCsvEntityReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamExportCsvEntityReportRequest& StreamExportCsvEntityReportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamExportCsvEntityReportRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void StreamExportCsvEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportCsvEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  csvcolumnlist_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportCsvEntityReportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string csvColumnList = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_csvcolumnlist();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.StreamExportCsvEntityReportRequest.csvColumnList"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamExportCsvEntityReportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportCsvEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string csvColumnList = 1;
  if (this->csvcolumnlist().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_csvcolumnlist().data(), static_cast<int>(this->_internal_csvcolumnlist().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.StreamExportCsvEntityReportRequest.csvColumnList");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_csvcolumnlist(), target);
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportCsvEntityReportRequest)
  return target;
}

size_t StreamExportCsvEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportCsvEntityReportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string csvColumnList = 1;
  if (this->csvcolumnlist().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_csvcolumnlist());
  }

  // int64 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamExportCsvEntityReportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.StreamExportCsvEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamExportCsvEntityReportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamExportCsvEntityReportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.StreamExportCsvEntityReportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.StreamExportCsvEntityReportRequest)
    MergeFrom(*source);
  }
}

void StreamExportCsvEntityReportRequest::MergeFrom(const StreamExportCsvEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportCsvEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.csvcolumnlist().size() > 0) {
    _internal_set_csvcolumnlist(from._internal_csvcolumnlist());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void StreamExportCsvEntityReportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.StreamExportCsvEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamExportCsvEntityReportRequest::CopyFrom(const StreamExportCsvEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportCsvEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportCsvEntityReportRequest::IsInitialized() const {
  return true;
}

void StreamExportCsvEntityReportRequest::InternalSwap(StreamExportCsvEntityReportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  csvcolumnlist_.Swap(&other->csvcolumnlist_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportCsvEntityReportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamExportCsvEntityReportResponse::InitAsDefaultInstance() {
}
class StreamExportCsvEntityReportResponse::_Internal {
 public:
};

StreamExportCsvEntityReportResponse::StreamExportCsvEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportCsvEntityReportResponse)
}
StreamExportCsvEntityReportResponse::StreamExportCsvEntityReportResponse(const StreamExportCsvEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportCsvEntityReportResponse)
}

void StreamExportCsvEntityReportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamExportCsvEntityReportResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StreamExportCsvEntityReportResponse::~StreamExportCsvEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportCsvEntityReportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamExportCsvEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamExportCsvEntityReportResponse::ArenaDtor(void* object) {
  StreamExportCsvEntityReportResponse* _this = reinterpret_cast< StreamExportCsvEntityReportResponse* >(object);
  (void)_this;
}
void StreamExportCsvEntityReportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamExportCsvEntityReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamExportCsvEntityReportResponse& StreamExportCsvEntityReportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamExportCsvEntityReportResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void StreamExportCsvEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportCsvEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportCsvEntityReportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.StreamExportCsvEntityReportResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamExportCsvEntityReportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportCsvEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.StreamExportCsvEntityReportResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportCsvEntityReportResponse)
  return target;
}

size_t StreamExportCsvEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportCsvEntityReportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamExportCsvEntityReportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.StreamExportCsvEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamExportCsvEntityReportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamExportCsvEntityReportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.StreamExportCsvEntityReportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.StreamExportCsvEntityReportResponse)
    MergeFrom(*source);
  }
}

void StreamExportCsvEntityReportResponse::MergeFrom(const StreamExportCsvEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportCsvEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void StreamExportCsvEntityReportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.StreamExportCsvEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamExportCsvEntityReportResponse::CopyFrom(const StreamExportCsvEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportCsvEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportCsvEntityReportResponse::IsInitialized() const {
  return true;
}

void StreamExportCsvEntityReportResponse::InternalSwap(StreamExportCsvEntityReportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportCsvEntityReportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamExportJsonEntityReportRequest::InitAsDefaultInstance() {
}
class StreamExportJsonEntityReportRequest::_Internal {
 public:
};

StreamExportJsonEntityReportRequest::StreamExportJsonEntityReportRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportJsonEntityReportRequest)
}
StreamExportJsonEntityReportRequest::StreamExportJsonEntityReportRequest(const StreamExportJsonEntityReportRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportJsonEntityReportRequest)
}

void StreamExportJsonEntityReportRequest::SharedCtor() {
  flags_ = PROTOBUF_LONGLONG(0);
}

StreamExportJsonEntityReportRequest::~StreamExportJsonEntityReportRequest() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportJsonEntityReportRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamExportJsonEntityReportRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void StreamExportJsonEntityReportRequest::ArenaDtor(void* object) {
  StreamExportJsonEntityReportRequest* _this = reinterpret_cast< StreamExportJsonEntityReportRequest* >(object);
  (void)_this;
}
void StreamExportJsonEntityReportRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamExportJsonEntityReportRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamExportJsonEntityReportRequest& StreamExportJsonEntityReportRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamExportJsonEntityReportRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void StreamExportJsonEntityReportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportJsonEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportJsonEntityReportRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamExportJsonEntityReportRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportJsonEntityReportRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportJsonEntityReportRequest)
  return target;
}

size_t StreamExportJsonEntityReportRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportJsonEntityReportRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamExportJsonEntityReportRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.StreamExportJsonEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamExportJsonEntityReportRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamExportJsonEntityReportRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.StreamExportJsonEntityReportRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.StreamExportJsonEntityReportRequest)
    MergeFrom(*source);
  }
}

void StreamExportJsonEntityReportRequest::MergeFrom(const StreamExportJsonEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportJsonEntityReportRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void StreamExportJsonEntityReportRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.StreamExportJsonEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamExportJsonEntityReportRequest::CopyFrom(const StreamExportJsonEntityReportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportJsonEntityReportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportJsonEntityReportRequest::IsInitialized() const {
  return true;
}

void StreamExportJsonEntityReportRequest::InternalSwap(StreamExportJsonEntityReportRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportJsonEntityReportRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void StreamExportJsonEntityReportResponse::InitAsDefaultInstance() {
}
class StreamExportJsonEntityReportResponse::_Internal {
 public:
};

StreamExportJsonEntityReportResponse::StreamExportJsonEntityReportResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.StreamExportJsonEntityReportResponse)
}
StreamExportJsonEntityReportResponse::StreamExportJsonEntityReportResponse(const StreamExportJsonEntityReportResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.StreamExportJsonEntityReportResponse)
}

void StreamExportJsonEntityReportResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_StreamExportJsonEntityReportResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

StreamExportJsonEntityReportResponse::~StreamExportJsonEntityReportResponse() {
  // @@protoc_insertion_point(destructor:szengine.StreamExportJsonEntityReportResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void StreamExportJsonEntityReportResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void StreamExportJsonEntityReportResponse::ArenaDtor(void* object) {
  StreamExportJsonEntityReportResponse* _this = reinterpret_cast< StreamExportJsonEntityReportResponse* >(object);
  (void)_this;
}
void StreamExportJsonEntityReportResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void StreamExportJsonEntityReportResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const StreamExportJsonEntityReportResponse& StreamExportJsonEntityReportResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_StreamExportJsonEntityReportResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void StreamExportJsonEntityReportResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.StreamExportJsonEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* StreamExportJsonEntityReportResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.StreamExportJsonEntityReportResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* StreamExportJsonEntityReportResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.StreamExportJsonEntityReportResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.StreamExportJsonEntityReportResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.StreamExportJsonEntityReportResponse)
  return target;
}

size_t StreamExportJsonEntityReportResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.StreamExportJsonEntityReportResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void StreamExportJsonEntityReportResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.StreamExportJsonEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const StreamExportJsonEntityReportResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<StreamExportJsonEntityReportResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.StreamExportJsonEntityReportResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.StreamExportJsonEntityReportResponse)
    MergeFrom(*source);
  }
}

void StreamExportJsonEntityReportResponse::MergeFrom(const StreamExportJsonEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.StreamExportJsonEntityReportResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void StreamExportJsonEntityReportResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.StreamExportJsonEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StreamExportJsonEntityReportResponse::CopyFrom(const StreamExportJsonEntityReportResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.StreamExportJsonEntityReportResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StreamExportJsonEntityReportResponse::IsInitialized() const {
  return true;
}

void StreamExportJsonEntityReportResponse::InternalSwap(StreamExportJsonEntityReportResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata StreamExportJsonEntityReportResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WhyEntitiesRequest::InitAsDefaultInstance() {
}
class WhyEntitiesRequest::_Internal {
 public:
};

WhyEntitiesRequest::WhyEntitiesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyEntitiesRequest)
}
WhyEntitiesRequest::WhyEntitiesRequest(const WhyEntitiesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&entityid1_, &from.entityid1_,
    static_cast<size_t>(reinterpret_cast<char*>(&flags_) -
    reinterpret_cast<char*>(&entityid1_)) + sizeof(flags_));
  // @@protoc_insertion_point(copy_constructor:szengine.WhyEntitiesRequest)
}

void WhyEntitiesRequest::SharedCtor() {
  ::memset(&entityid1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid1_)) + sizeof(flags_));
}

WhyEntitiesRequest::~WhyEntitiesRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhyEntitiesRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WhyEntitiesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void WhyEntitiesRequest::ArenaDtor(void* object) {
  WhyEntitiesRequest* _this = reinterpret_cast< WhyEntitiesRequest* >(object);
  (void)_this;
}
void WhyEntitiesRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WhyEntitiesRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WhyEntitiesRequest& WhyEntitiesRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WhyEntitiesRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void WhyEntitiesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyEntitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&entityid1_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&entityid1_)) + sizeof(flags_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyEntitiesRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 entityId1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          entityid1_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 entityId2 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          entityid2_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WhyEntitiesRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyEntitiesRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 entityId1 = 1;
  if (this->entityid1() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_entityid1(), target);
  }

  // int64 entityId2 = 2;
  if (this->entityid2() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_entityid2(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyEntitiesRequest)
  return target;
}

size_t WhyEntitiesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyEntitiesRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 entityId1 = 1;
  if (this->entityid1() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entityid1());
  }

  // int64 entityId2 = 2;
  if (this->entityid2() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_entityid2());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhyEntitiesRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.WhyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WhyEntitiesRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WhyEntitiesRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.WhyEntitiesRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.WhyEntitiesRequest)
    MergeFrom(*source);
  }
}

void WhyEntitiesRequest::MergeFrom(const WhyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyEntitiesRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.entityid1() != 0) {
    _internal_set_entityid1(from._internal_entityid1());
  }
  if (from.entityid2() != 0) {
    _internal_set_entityid2(from._internal_entityid2());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void WhyEntitiesRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.WhyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhyEntitiesRequest::CopyFrom(const WhyEntitiesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyEntitiesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyEntitiesRequest::IsInitialized() const {
  return true;
}

void WhyEntitiesRequest::InternalSwap(WhyEntitiesRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(WhyEntitiesRequest, flags_)
      + sizeof(WhyEntitiesRequest::flags_)
      - PROTOBUF_FIELD_OFFSET(WhyEntitiesRequest, entityid1_)>(
          reinterpret_cast<char*>(&entityid1_),
          reinterpret_cast<char*>(&other->entityid1_));
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyEntitiesRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WhyEntitiesResponse::InitAsDefaultInstance() {
}
class WhyEntitiesResponse::_Internal {
 public:
};

WhyEntitiesResponse::WhyEntitiesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyEntitiesResponse)
}
WhyEntitiesResponse::WhyEntitiesResponse(const WhyEntitiesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhyEntitiesResponse)
}

void WhyEntitiesResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WhyEntitiesResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WhyEntitiesResponse::~WhyEntitiesResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhyEntitiesResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WhyEntitiesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WhyEntitiesResponse::ArenaDtor(void* object) {
  WhyEntitiesResponse* _this = reinterpret_cast< WhyEntitiesResponse* >(object);
  (void)_this;
}
void WhyEntitiesResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WhyEntitiesResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WhyEntitiesResponse& WhyEntitiesResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WhyEntitiesResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void WhyEntitiesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyEntitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyEntitiesResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyEntitiesResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WhyEntitiesResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyEntitiesResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyEntitiesResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyEntitiesResponse)
  return target;
}

size_t WhyEntitiesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyEntitiesResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhyEntitiesResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.WhyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WhyEntitiesResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WhyEntitiesResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.WhyEntitiesResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.WhyEntitiesResponse)
    MergeFrom(*source);
  }
}

void WhyEntitiesResponse::MergeFrom(const WhyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyEntitiesResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void WhyEntitiesResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.WhyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhyEntitiesResponse::CopyFrom(const WhyEntitiesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyEntitiesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyEntitiesResponse::IsInitialized() const {
  return true;
}

void WhyEntitiesResponse::InternalSwap(WhyEntitiesResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyEntitiesResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WhyRecordInEntityRequest::InitAsDefaultInstance() {
}
class WhyRecordInEntityRequest::_Internal {
 public:
};

WhyRecordInEntityRequest::WhyRecordInEntityRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordInEntityRequest)
}
WhyRecordInEntityRequest::WhyRecordInEntityRequest(const WhyRecordInEntityRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode().empty()) {
    datasourcecode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode(),
      GetArena());
  }
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid().empty()) {
    recordid_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordInEntityRequest)
}

void WhyRecordInEntityRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WhyRecordInEntityRequest_szengine_2eproto.base);
  datasourcecode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

WhyRecordInEntityRequest::~WhyRecordInEntityRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordInEntityRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WhyRecordInEntityRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WhyRecordInEntityRequest::ArenaDtor(void* object) {
  WhyRecordInEntityRequest* _this = reinterpret_cast< WhyRecordInEntityRequest* >(object);
  (void)_this;
}
void WhyRecordInEntityRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WhyRecordInEntityRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WhyRecordInEntityRequest& WhyRecordInEntityRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WhyRecordInEntityRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void WhyRecordInEntityRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordInEntityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordInEntityRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordInEntityRequest.dataSourceCode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordInEntityRequest.recordId"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WhyRecordInEntityRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordInEntityRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode().data(), static_cast<int>(this->_internal_datasourcecode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordInEntityRequest.dataSourceCode");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode(), target);
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid().data(), static_cast<int>(this->_internal_recordid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordInEntityRequest.recordId");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid(), target);
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordInEntityRequest)
  return target;
}

size_t WhyRecordInEntityRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordInEntityRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode = 1;
  if (this->datasourcecode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode());
  }

  // string recordId = 2;
  if (this->recordid().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid());
  }

  // int64 flags = 3;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhyRecordInEntityRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.WhyRecordInEntityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WhyRecordInEntityRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WhyRecordInEntityRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.WhyRecordInEntityRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.WhyRecordInEntityRequest)
    MergeFrom(*source);
  }
}

void WhyRecordInEntityRequest::MergeFrom(const WhyRecordInEntityRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordInEntityRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode().size() > 0) {
    _internal_set_datasourcecode(from._internal_datasourcecode());
  }
  if (from.recordid().size() > 0) {
    _internal_set_recordid(from._internal_recordid());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void WhyRecordInEntityRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.WhyRecordInEntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhyRecordInEntityRequest::CopyFrom(const WhyRecordInEntityRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordInEntityRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordInEntityRequest::IsInitialized() const {
  return true;
}

void WhyRecordInEntityRequest::InternalSwap(WhyRecordInEntityRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode_.Swap(&other->datasourcecode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid_.Swap(&other->recordid_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordInEntityRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WhyRecordInEntityResponse::InitAsDefaultInstance() {
}
class WhyRecordInEntityResponse::_Internal {
 public:
};

WhyRecordInEntityResponse::WhyRecordInEntityResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordInEntityResponse)
}
WhyRecordInEntityResponse::WhyRecordInEntityResponse(const WhyRecordInEntityResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordInEntityResponse)
}

void WhyRecordInEntityResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WhyRecordInEntityResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WhyRecordInEntityResponse::~WhyRecordInEntityResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordInEntityResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WhyRecordInEntityResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WhyRecordInEntityResponse::ArenaDtor(void* object) {
  WhyRecordInEntityResponse* _this = reinterpret_cast< WhyRecordInEntityResponse* >(object);
  (void)_this;
}
void WhyRecordInEntityResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WhyRecordInEntityResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WhyRecordInEntityResponse& WhyRecordInEntityResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WhyRecordInEntityResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void WhyRecordInEntityResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordInEntityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordInEntityResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordInEntityResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WhyRecordInEntityResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordInEntityResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordInEntityResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordInEntityResponse)
  return target;
}

size_t WhyRecordInEntityResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordInEntityResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhyRecordInEntityResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.WhyRecordInEntityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WhyRecordInEntityResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WhyRecordInEntityResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.WhyRecordInEntityResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.WhyRecordInEntityResponse)
    MergeFrom(*source);
  }
}

void WhyRecordInEntityResponse::MergeFrom(const WhyRecordInEntityResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordInEntityResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void WhyRecordInEntityResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.WhyRecordInEntityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhyRecordInEntityResponse::CopyFrom(const WhyRecordInEntityResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordInEntityResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordInEntityResponse::IsInitialized() const {
  return true;
}

void WhyRecordInEntityResponse::InternalSwap(WhyRecordInEntityResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordInEntityResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WhyRecordsRequest::InitAsDefaultInstance() {
}
class WhyRecordsRequest::_Internal {
 public:
};

WhyRecordsRequest::WhyRecordsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordsRequest)
}
WhyRecordsRequest::WhyRecordsRequest(const WhyRecordsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  datasourcecode1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode1().empty()) {
    datasourcecode1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode1(),
      GetArena());
  }
  recordid1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid1().empty()) {
    recordid1_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid1(),
      GetArena());
  }
  datasourcecode2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_datasourcecode2().empty()) {
    datasourcecode2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_datasourcecode2(),
      GetArena());
  }
  recordid2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_recordid2().empty()) {
    recordid2_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_recordid2(),
      GetArena());
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordsRequest)
}

void WhyRecordsRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WhyRecordsRequest_szengine_2eproto.base);
  datasourcecode1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid1_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datasourcecode2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid2_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flags_ = PROTOBUF_LONGLONG(0);
}

WhyRecordsRequest::~WhyRecordsRequest() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WhyRecordsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  datasourcecode1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid1_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  datasourcecode2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  recordid2_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WhyRecordsRequest::ArenaDtor(void* object) {
  WhyRecordsRequest* _this = reinterpret_cast< WhyRecordsRequest* >(object);
  (void)_this;
}
void WhyRecordsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WhyRecordsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WhyRecordsRequest& WhyRecordsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WhyRecordsRequest_szengine_2eproto.base);
  return *internal_default_instance();
}


void WhyRecordsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  datasourcecode1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid1_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datasourcecode2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid2_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flags_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string dataSourceCode1 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_datasourcecode1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordsRequest.dataSourceCode1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId1 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_recordid1();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordsRequest.recordId1"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string dataSourceCode2 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_datasourcecode2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordsRequest.dataSourceCode2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string recordId2 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_recordid2();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordsRequest.recordId2"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 flags = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WhyRecordsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string dataSourceCode1 = 1;
  if (this->datasourcecode1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode1().data(), static_cast<int>(this->_internal_datasourcecode1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.dataSourceCode1");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_datasourcecode1(), target);
  }

  // string recordId1 = 2;
  if (this->recordid1().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid1().data(), static_cast<int>(this->_internal_recordid1().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.recordId1");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_recordid1(), target);
  }

  // string dataSourceCode2 = 3;
  if (this->datasourcecode2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_datasourcecode2().data(), static_cast<int>(this->_internal_datasourcecode2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.dataSourceCode2");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_datasourcecode2(), target);
  }

  // string recordId2 = 4;
  if (this->recordid2().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_recordid2().data(), static_cast<int>(this->_internal_recordid2().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsRequest.recordId2");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_recordid2(), target);
  }

  // int64 flags = 5;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordsRequest)
  return target;
}

size_t WhyRecordsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string dataSourceCode1 = 1;
  if (this->datasourcecode1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode1());
  }

  // string recordId1 = 2;
  if (this->recordid1().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid1());
  }

  // string dataSourceCode2 = 3;
  if (this->datasourcecode2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_datasourcecode2());
  }

  // string recordId2 = 4;
  if (this->recordid2().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_recordid2());
  }

  // int64 flags = 5;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhyRecordsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.WhyRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const WhyRecordsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WhyRecordsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.WhyRecordsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.WhyRecordsRequest)
    MergeFrom(*source);
  }
}

void WhyRecordsRequest::MergeFrom(const WhyRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.datasourcecode1().size() > 0) {
    _internal_set_datasourcecode1(from._internal_datasourcecode1());
  }
  if (from.recordid1().size() > 0) {
    _internal_set_recordid1(from._internal_recordid1());
  }
  if (from.datasourcecode2().size() > 0) {
    _internal_set_datasourcecode2(from._internal_datasourcecode2());
  }
  if (from.recordid2().size() > 0) {
    _internal_set_recordid2(from._internal_recordid2());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void WhyRecordsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.WhyRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhyRecordsRequest::CopyFrom(const WhyRecordsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordsRequest::IsInitialized() const {
  return true;
}

void WhyRecordsRequest::InternalSwap(WhyRecordsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  datasourcecode1_.Swap(&other->datasourcecode1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid1_.Swap(&other->recordid1_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  datasourcecode2_.Swap(&other->datasourcecode2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  recordid2_.Swap(&other->recordid2_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(flags_, other->flags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WhyRecordsResponse::InitAsDefaultInstance() {
}
class WhyRecordsResponse::_Internal {
 public:
};

WhyRecordsResponse::WhyRecordsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szengine.WhyRecordsResponse)
}
WhyRecordsResponse::WhyRecordsResponse(const WhyRecordsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szengine.WhyRecordsResponse)
}

void WhyRecordsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WhyRecordsResponse_szengine_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

WhyRecordsResponse::~WhyRecordsResponse() {
  // @@protoc_insertion_point(destructor:szengine.WhyRecordsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void WhyRecordsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void WhyRecordsResponse::ArenaDtor(void* object) {
  WhyRecordsResponse* _this = reinterpret_cast< WhyRecordsResponse* >(object);
  (void)_this;
}
void WhyRecordsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void WhyRecordsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WhyRecordsResponse& WhyRecordsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WhyRecordsResponse_szengine_2eproto.base);
  return *internal_default_instance();
}


void WhyRecordsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szengine.WhyRecordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WhyRecordsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szengine.WhyRecordsResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* WhyRecordsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szengine.WhyRecordsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szengine.WhyRecordsResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szengine.WhyRecordsResponse)
  return target;
}

size_t WhyRecordsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szengine.WhyRecordsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WhyRecordsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szengine.WhyRecordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const WhyRecordsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WhyRecordsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szengine.WhyRecordsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szengine.WhyRecordsResponse)
    MergeFrom(*source);
  }
}

void WhyRecordsResponse::MergeFrom(const WhyRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szengine.WhyRecordsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void WhyRecordsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szengine.WhyRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WhyRecordsResponse::CopyFrom(const WhyRecordsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szengine.WhyRecordsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WhyRecordsResponse::IsInitialized() const {
  return true;
}

void WhyRecordsResponse::InternalSwap(WhyRecordsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata WhyRecordsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace szengine
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::szengine::AddRecordRequest* Arena::CreateMaybeMessage< ::szengine::AddRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::AddRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::AddRecordResponse* Arena::CreateMaybeMessage< ::szengine::AddRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::AddRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CloseExportRequest* Arena::CreateMaybeMessage< ::szengine::CloseExportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CloseExportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CloseExportResponse* Arena::CreateMaybeMessage< ::szengine::CloseExportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CloseExportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CountRedoRecordsRequest* Arena::CreateMaybeMessage< ::szengine::CountRedoRecordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CountRedoRecordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::CountRedoRecordsResponse* Arena::CreateMaybeMessage< ::szengine::CountRedoRecordsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::CountRedoRecordsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::DeleteRecordRequest* Arena::CreateMaybeMessage< ::szengine::DeleteRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::DeleteRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::DeleteRecordResponse* Arena::CreateMaybeMessage< ::szengine::DeleteRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::DeleteRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportCsvEntityReportRequest* Arena::CreateMaybeMessage< ::szengine::ExportCsvEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportCsvEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportCsvEntityReportResponse* Arena::CreateMaybeMessage< ::szengine::ExportCsvEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportCsvEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportJsonEntityReportRequest* Arena::CreateMaybeMessage< ::szengine::ExportJsonEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportJsonEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ExportJsonEntityReportResponse* Arena::CreateMaybeMessage< ::szengine::ExportJsonEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ExportJsonEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FetchNextRequest* Arena::CreateMaybeMessage< ::szengine::FetchNextRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FetchNextRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FetchNextResponse* Arena::CreateMaybeMessage< ::szengine::FetchNextResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FetchNextResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByEntityIdRequest* Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByEntityIdResponse* Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByRecordIdRequest* Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindInterestingEntitiesByRecordIdResponse* Arena::CreateMaybeMessage< ::szengine::FindInterestingEntitiesByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindInterestingEntitiesByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByEntityIdRequest* Arena::CreateMaybeMessage< ::szengine::FindNetworkByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByEntityIdResponse* Arena::CreateMaybeMessage< ::szengine::FindNetworkByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByRecordIdRequest* Arena::CreateMaybeMessage< ::szengine::FindNetworkByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindNetworkByRecordIdResponse* Arena::CreateMaybeMessage< ::szengine::FindNetworkByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindNetworkByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByEntityIdRequest* Arena::CreateMaybeMessage< ::szengine::FindPathByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByEntityIdResponse* Arena::CreateMaybeMessage< ::szengine::FindPathByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByRecordIdRequest* Arena::CreateMaybeMessage< ::szengine::FindPathByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::FindPathByRecordIdResponse* Arena::CreateMaybeMessage< ::szengine::FindPathByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::FindPathByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetActiveConfigIdRequest* Arena::CreateMaybeMessage< ::szengine::GetActiveConfigIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetActiveConfigIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetActiveConfigIdResponse* Arena::CreateMaybeMessage< ::szengine::GetActiveConfigIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetActiveConfigIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByEntityIdRequest* Arena::CreateMaybeMessage< ::szengine::GetEntityByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByEntityIdResponse* Arena::CreateMaybeMessage< ::szengine::GetEntityByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByRecordIdRequest* Arena::CreateMaybeMessage< ::szengine::GetEntityByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetEntityByRecordIdResponse* Arena::CreateMaybeMessage< ::szengine::GetEntityByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetEntityByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRecordRequest* Arena::CreateMaybeMessage< ::szengine::GetRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRecordResponse* Arena::CreateMaybeMessage< ::szengine::GetRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRedoRecordRequest* Arena::CreateMaybeMessage< ::szengine::GetRedoRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRedoRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetRedoRecordResponse* Arena::CreateMaybeMessage< ::szengine::GetRedoRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetRedoRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetStatsRequest* Arena::CreateMaybeMessage< ::szengine::GetStatsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetStatsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetStatsResponse* Arena::CreateMaybeMessage< ::szengine::GetStatsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetStatsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetVirtualEntityByRecordIdRequest* Arena::CreateMaybeMessage< ::szengine::GetVirtualEntityByRecordIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetVirtualEntityByRecordIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::GetVirtualEntityByRecordIdResponse* Arena::CreateMaybeMessage< ::szengine::GetVirtualEntityByRecordIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::GetVirtualEntityByRecordIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::HowEntityByEntityIdRequest* Arena::CreateMaybeMessage< ::szengine::HowEntityByEntityIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::HowEntityByEntityIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::HowEntityByEntityIdResponse* Arena::CreateMaybeMessage< ::szengine::HowEntityByEntityIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::HowEntityByEntityIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PreprocessRecordRequest* Arena::CreateMaybeMessage< ::szengine::PreprocessRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PreprocessRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PreprocessRecordResponse* Arena::CreateMaybeMessage< ::szengine::PreprocessRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PreprocessRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PrimeEngineRequest* Arena::CreateMaybeMessage< ::szengine::PrimeEngineRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PrimeEngineRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::PrimeEngineResponse* Arena::CreateMaybeMessage< ::szengine::PrimeEngineResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::PrimeEngineResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ProcessRedoRecordRequest* Arena::CreateMaybeMessage< ::szengine::ProcessRedoRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ProcessRedoRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ProcessRedoRecordResponse* Arena::CreateMaybeMessage< ::szengine::ProcessRedoRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ProcessRedoRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateEntityRequest* Arena::CreateMaybeMessage< ::szengine::ReevaluateEntityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateEntityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateEntityResponse* Arena::CreateMaybeMessage< ::szengine::ReevaluateEntityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateEntityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateRecordRequest* Arena::CreateMaybeMessage< ::szengine::ReevaluateRecordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateRecordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReevaluateRecordResponse* Arena::CreateMaybeMessage< ::szengine::ReevaluateRecordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReevaluateRecordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReinitializeRequest* Arena::CreateMaybeMessage< ::szengine::ReinitializeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReinitializeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::ReinitializeResponse* Arena::CreateMaybeMessage< ::szengine::ReinitializeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::ReinitializeResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::SearchByAttributesRequest* Arena::CreateMaybeMessage< ::szengine::SearchByAttributesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::SearchByAttributesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::SearchByAttributesResponse* Arena::CreateMaybeMessage< ::szengine::SearchByAttributesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::SearchByAttributesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportCsvEntityReportRequest* Arena::CreateMaybeMessage< ::szengine::StreamExportCsvEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportCsvEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportCsvEntityReportResponse* Arena::CreateMaybeMessage< ::szengine::StreamExportCsvEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportCsvEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportJsonEntityReportRequest* Arena::CreateMaybeMessage< ::szengine::StreamExportJsonEntityReportRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportJsonEntityReportRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::StreamExportJsonEntityReportResponse* Arena::CreateMaybeMessage< ::szengine::StreamExportJsonEntityReportResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::StreamExportJsonEntityReportResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyEntitiesRequest* Arena::CreateMaybeMessage< ::szengine::WhyEntitiesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyEntitiesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyEntitiesResponse* Arena::CreateMaybeMessage< ::szengine::WhyEntitiesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyEntitiesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordInEntityRequest* Arena::CreateMaybeMessage< ::szengine::WhyRecordInEntityRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordInEntityRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordInEntityResponse* Arena::CreateMaybeMessage< ::szengine::WhyRecordInEntityResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordInEntityResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordsRequest* Arena::CreateMaybeMessage< ::szengine::WhyRecordsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szengine::WhyRecordsResponse* Arena::CreateMaybeMessage< ::szengine::WhyRecordsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szengine::WhyRecordsResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
