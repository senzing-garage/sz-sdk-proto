// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szdiagnostic.proto

#include "szdiagnostic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace szdiagnostic {
PROTOBUF_CONSTEXPR CheckDatastorePerformanceRequest::CheckDatastorePerformanceRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.seconds_to_run_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckDatastorePerformanceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckDatastorePerformanceRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckDatastorePerformanceRequestDefaultTypeInternal() {}
  union {
    CheckDatastorePerformanceRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckDatastorePerformanceRequestDefaultTypeInternal _CheckDatastorePerformanceRequest_default_instance_;
PROTOBUF_CONSTEXPR CheckDatastorePerformanceResponse::CheckDatastorePerformanceResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CheckDatastorePerformanceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CheckDatastorePerformanceResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CheckDatastorePerformanceResponseDefaultTypeInternal() {}
  union {
    CheckDatastorePerformanceResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CheckDatastorePerformanceResponseDefaultTypeInternal _CheckDatastorePerformanceResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDatastoreInfoRequest::GetDatastoreInfoRequest(
    ::_pbi::ConstantInitialized) {}
struct GetDatastoreInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDatastoreInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDatastoreInfoRequestDefaultTypeInternal() {}
  union {
    GetDatastoreInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDatastoreInfoRequestDefaultTypeInternal _GetDatastoreInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetDatastoreInfoResponse::GetDatastoreInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDatastoreInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDatastoreInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDatastoreInfoResponseDefaultTypeInternal() {}
  union {
    GetDatastoreInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDatastoreInfoResponseDefaultTypeInternal _GetDatastoreInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetFeatureRequest::GetFeatureRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.feature_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFeatureRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFeatureRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFeatureRequestDefaultTypeInternal() {}
  union {
    GetFeatureRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFeatureRequestDefaultTypeInternal _GetFeatureRequest_default_instance_;
PROTOBUF_CONSTEXPR GetFeatureResponse::GetFeatureResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetFeatureResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetFeatureResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetFeatureResponseDefaultTypeInternal() {}
  union {
    GetFeatureResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetFeatureResponseDefaultTypeInternal _GetFeatureResponse_default_instance_;
PROTOBUF_CONSTEXPR PurgeRepositoryRequest::PurgeRepositoryRequest(
    ::_pbi::ConstantInitialized) {}
struct PurgeRepositoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PurgeRepositoryRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PurgeRepositoryRequestDefaultTypeInternal() {}
  union {
    PurgeRepositoryRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PurgeRepositoryRequestDefaultTypeInternal _PurgeRepositoryRequest_default_instance_;
PROTOBUF_CONSTEXPR PurgeRepositoryResponse::PurgeRepositoryResponse(
    ::_pbi::ConstantInitialized) {}
struct PurgeRepositoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PurgeRepositoryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PurgeRepositoryResponseDefaultTypeInternal() {}
  union {
    PurgeRepositoryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PurgeRepositoryResponseDefaultTypeInternal _PurgeRepositoryResponse_default_instance_;
PROTOBUF_CONSTEXPR ReinitializeRequest::ReinitializeRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.config_id_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ReinitializeRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinitializeRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinitializeRequestDefaultTypeInternal() {}
  union {
    ReinitializeRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinitializeRequestDefaultTypeInternal _ReinitializeRequest_default_instance_;
PROTOBUF_CONSTEXPR ReinitializeResponse::ReinitializeResponse(
    ::_pbi::ConstantInitialized) {}
struct ReinitializeResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ReinitializeResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ReinitializeResponseDefaultTypeInternal() {}
  union {
    ReinitializeResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ReinitializeResponseDefaultTypeInternal _ReinitializeResponse_default_instance_;
}  // namespace szdiagnostic
static ::_pb::Metadata file_level_metadata_szdiagnostic_2eproto[10];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_szdiagnostic_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_szdiagnostic_2eproto = nullptr;

const uint32_t TableStruct_szdiagnostic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceRequest, _impl_.seconds_to_run_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetDatastoreInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetDatastoreInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetDatastoreInfoResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureRequest, _impl_.feature_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::PurgeRepositoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::PurgeRepositoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::ReinitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::ReinitializeRequest, _impl_.config_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::ReinitializeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::szdiagnostic::CheckDatastorePerformanceRequest)},
  { 7, -1, -1, sizeof(::szdiagnostic::CheckDatastorePerformanceResponse)},
  { 14, -1, -1, sizeof(::szdiagnostic::GetDatastoreInfoRequest)},
  { 20, -1, -1, sizeof(::szdiagnostic::GetDatastoreInfoResponse)},
  { 27, -1, -1, sizeof(::szdiagnostic::GetFeatureRequest)},
  { 34, -1, -1, sizeof(::szdiagnostic::GetFeatureResponse)},
  { 41, -1, -1, sizeof(::szdiagnostic::PurgeRepositoryRequest)},
  { 47, -1, -1, sizeof(::szdiagnostic::PurgeRepositoryResponse)},
  { 53, -1, -1, sizeof(::szdiagnostic::ReinitializeRequest)},
  { 60, -1, -1, sizeof(::szdiagnostic::ReinitializeResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::szdiagnostic::_CheckDatastorePerformanceRequest_default_instance_._instance,
  &::szdiagnostic::_CheckDatastorePerformanceResponse_default_instance_._instance,
  &::szdiagnostic::_GetDatastoreInfoRequest_default_instance_._instance,
  &::szdiagnostic::_GetDatastoreInfoResponse_default_instance_._instance,
  &::szdiagnostic::_GetFeatureRequest_default_instance_._instance,
  &::szdiagnostic::_GetFeatureResponse_default_instance_._instance,
  &::szdiagnostic::_PurgeRepositoryRequest_default_instance_._instance,
  &::szdiagnostic::_PurgeRepositoryResponse_default_instance_._instance,
  &::szdiagnostic::_ReinitializeRequest_default_instance_._instance,
  &::szdiagnostic::_ReinitializeResponse_default_instance_._instance,
};

const char descriptor_table_protodef_szdiagnostic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022szdiagnostic.proto\022\014szdiagnostic\":\n Ch"
  "eckDatastorePerformanceRequest\022\026\n\016second"
  "s_to_run\030\001 \001(\005\"3\n!CheckDatastorePerforma"
  "nceResponse\022\016\n\006result\030\001 \001(\t\"\031\n\027GetDatast"
  "oreInfoRequest\"*\n\030GetDatastoreInfoRespon"
  "se\022\016\n\006result\030\001 \001(\t\"\'\n\021GetFeatureRequest\022"
  "\022\n\nfeature_id\030\001 \001(\003\"$\n\022GetFeatureRespons"
  "e\022\016\n\006result\030\001 \001(\t\"\030\n\026PurgeRepositoryRequ"
  "est\"\031\n\027PurgeRepositoryResponse\"(\n\023Reinit"
  "ializeRequest\022\021\n\tconfig_id\030\001 \001(\003\"\026\n\024Rein"
  "itializeResponse2\201\004\n\014SzDiagnostic\022~\n\031Che"
  "ckDatastorePerformance\022..szdiagnostic.Ch"
  "eckDatastorePerformanceRequest\032/.szdiagn"
  "ostic.CheckDatastorePerformanceResponse\""
  "\000\022c\n\020GetDatastoreInfo\022%.szdiagnostic.Get"
  "DatastoreInfoRequest\032&.szdiagnostic.GetD"
  "atastoreInfoResponse\"\000\022Q\n\nGetFeature\022\037.s"
  "zdiagnostic.GetFeatureRequest\032 .szdiagno"
  "stic.GetFeatureResponse\"\000\022`\n\017PurgeReposi"
  "tory\022$.szdiagnostic.PurgeRepositoryReque"
  "st\032%.szdiagnostic.PurgeRepositoryRespons"
  "e\"\000\022W\n\014Reinitialize\022!.szdiagnostic.Reini"
  "tializeRequest\032\".szdiagnostic.Reinitiali"
  "zeResponse\"\000B`\n\024com.senzing.sdk.grpcB\021Sz"
  "DiagnosticProtoZ5github.com/senzing-gara"
  "ge/sz-sdk-go-grpc/szdiagnosticb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_szdiagnostic_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_szdiagnostic_2eproto = {
    false, false, 1038, descriptor_table_protodef_szdiagnostic_2eproto,
    "szdiagnostic.proto",
    &descriptor_table_szdiagnostic_2eproto_once, nullptr, 0, 10,
    schemas, file_default_instances, TableStruct_szdiagnostic_2eproto::offsets,
    file_level_metadata_szdiagnostic_2eproto, file_level_enum_descriptors_szdiagnostic_2eproto,
    file_level_service_descriptors_szdiagnostic_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_szdiagnostic_2eproto_getter() {
  return &descriptor_table_szdiagnostic_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_szdiagnostic_2eproto(&descriptor_table_szdiagnostic_2eproto);
namespace szdiagnostic {

// ===================================================================

class CheckDatastorePerformanceRequest::_Internal {
 public:
};

CheckDatastorePerformanceRequest::CheckDatastorePerformanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.CheckDatastorePerformanceRequest)
}
CheckDatastorePerformanceRequest::CheckDatastorePerformanceRequest(const CheckDatastorePerformanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckDatastorePerformanceRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.seconds_to_run_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.seconds_to_run_ = from._impl_.seconds_to_run_;
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.CheckDatastorePerformanceRequest)
}

inline void CheckDatastorePerformanceRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.seconds_to_run_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CheckDatastorePerformanceRequest::~CheckDatastorePerformanceRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.CheckDatastorePerformanceRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckDatastorePerformanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void CheckDatastorePerformanceRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckDatastorePerformanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.CheckDatastorePerformanceRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.seconds_to_run_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDatastorePerformanceRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 seconds_to_run = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.seconds_to_run_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckDatastorePerformanceRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.CheckDatastorePerformanceRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 seconds_to_run = 1;
  if (this->_internal_seconds_to_run() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_seconds_to_run(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.CheckDatastorePerformanceRequest)
  return target;
}

size_t CheckDatastorePerformanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.CheckDatastorePerformanceRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 seconds_to_run = 1;
  if (this->_internal_seconds_to_run() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_seconds_to_run());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckDatastorePerformanceRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckDatastorePerformanceRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckDatastorePerformanceRequest::GetClassData() const { return &_class_data_; }


void CheckDatastorePerformanceRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckDatastorePerformanceRequest*>(&to_msg);
  auto& from = static_cast<const CheckDatastorePerformanceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.CheckDatastorePerformanceRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_seconds_to_run() != 0) {
    _this->_internal_set_seconds_to_run(from._internal_seconds_to_run());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckDatastorePerformanceRequest::CopyFrom(const CheckDatastorePerformanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.CheckDatastorePerformanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDatastorePerformanceRequest::IsInitialized() const {
  return true;
}

void CheckDatastorePerformanceRequest::InternalSwap(CheckDatastorePerformanceRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.seconds_to_run_, other->_impl_.seconds_to_run_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDatastorePerformanceRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[0]);
}

// ===================================================================

class CheckDatastorePerformanceResponse::_Internal {
 public:
};

CheckDatastorePerformanceResponse::CheckDatastorePerformanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.CheckDatastorePerformanceResponse)
}
CheckDatastorePerformanceResponse::CheckDatastorePerformanceResponse(const CheckDatastorePerformanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CheckDatastorePerformanceResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.CheckDatastorePerformanceResponse)
}

inline void CheckDatastorePerformanceResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CheckDatastorePerformanceResponse::~CheckDatastorePerformanceResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.CheckDatastorePerformanceResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CheckDatastorePerformanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void CheckDatastorePerformanceResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CheckDatastorePerformanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.CheckDatastorePerformanceResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDatastorePerformanceResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szdiagnostic.CheckDatastorePerformanceResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CheckDatastorePerformanceResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.CheckDatastorePerformanceResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szdiagnostic.CheckDatastorePerformanceResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.CheckDatastorePerformanceResponse)
  return target;
}

size_t CheckDatastorePerformanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.CheckDatastorePerformanceResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CheckDatastorePerformanceResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CheckDatastorePerformanceResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CheckDatastorePerformanceResponse::GetClassData() const { return &_class_data_; }


void CheckDatastorePerformanceResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CheckDatastorePerformanceResponse*>(&to_msg);
  auto& from = static_cast<const CheckDatastorePerformanceResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.CheckDatastorePerformanceResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CheckDatastorePerformanceResponse::CopyFrom(const CheckDatastorePerformanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.CheckDatastorePerformanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDatastorePerformanceResponse::IsInitialized() const {
  return true;
}

void CheckDatastorePerformanceResponse::InternalSwap(CheckDatastorePerformanceResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDatastorePerformanceResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[1]);
}

// ===================================================================

class GetDatastoreInfoRequest::_Internal {
 public:
};

GetDatastoreInfoRequest::GetDatastoreInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetDatastoreInfoRequest)
}
GetDatastoreInfoRequest::GetDatastoreInfoRequest(const GetDatastoreInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  GetDatastoreInfoRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetDatastoreInfoRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDatastoreInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDatastoreInfoRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata GetDatastoreInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[2]);
}

// ===================================================================

class GetDatastoreInfoResponse::_Internal {
 public:
};

GetDatastoreInfoResponse::GetDatastoreInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetDatastoreInfoResponse)
}
GetDatastoreInfoResponse::GetDatastoreInfoResponse(const GetDatastoreInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDatastoreInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetDatastoreInfoResponse)
}

inline void GetDatastoreInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDatastoreInfoResponse::~GetDatastoreInfoResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetDatastoreInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDatastoreInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetDatastoreInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDatastoreInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetDatastoreInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDatastoreInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szdiagnostic.GetDatastoreInfoResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDatastoreInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetDatastoreInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szdiagnostic.GetDatastoreInfoResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetDatastoreInfoResponse)
  return target;
}

size_t GetDatastoreInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetDatastoreInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDatastoreInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDatastoreInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDatastoreInfoResponse::GetClassData() const { return &_class_data_; }


void GetDatastoreInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDatastoreInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetDatastoreInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetDatastoreInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDatastoreInfoResponse::CopyFrom(const GetDatastoreInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetDatastoreInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatastoreInfoResponse::IsInitialized() const {
  return true;
}

void GetDatastoreInfoResponse::InternalSwap(GetDatastoreInfoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDatastoreInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[3]);
}

// ===================================================================

class GetFeatureRequest::_Internal {
 public:
};

GetFeatureRequest::GetFeatureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetFeatureRequest)
}
GetFeatureRequest::GetFeatureRequest(const GetFeatureRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFeatureRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.feature_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.feature_id_ = from._impl_.feature_id_;
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetFeatureRequest)
}

inline void GetFeatureRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.feature_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetFeatureRequest::~GetFeatureRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetFeatureRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFeatureRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GetFeatureRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFeatureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetFeatureRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.feature_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFeatureRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 feature_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.feature_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFeatureRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetFeatureRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 feature_id = 1;
  if (this->_internal_feature_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_feature_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetFeatureRequest)
  return target;
}

size_t GetFeatureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetFeatureRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 feature_id = 1;
  if (this->_internal_feature_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_feature_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFeatureRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFeatureRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFeatureRequest::GetClassData() const { return &_class_data_; }


void GetFeatureRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFeatureRequest*>(&to_msg);
  auto& from = static_cast<const GetFeatureRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetFeatureRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_feature_id() != 0) {
    _this->_internal_set_feature_id(from._internal_feature_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFeatureRequest::CopyFrom(const GetFeatureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetFeatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatureRequest::IsInitialized() const {
  return true;
}

void GetFeatureRequest::InternalSwap(GetFeatureRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.feature_id_, other->_impl_.feature_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFeatureRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[4]);
}

// ===================================================================

class GetFeatureResponse::_Internal {
 public:
};

GetFeatureResponse::GetFeatureResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetFeatureResponse)
}
GetFeatureResponse::GetFeatureResponse(const GetFeatureResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetFeatureResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_result().empty()) {
    _this->_impl_.result_.Set(from._internal_result(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetFeatureResponse)
}

inline void GetFeatureResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.result_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.result_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetFeatureResponse::~GetFeatureResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetFeatureResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetFeatureResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.result_.Destroy();
}

void GetFeatureResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetFeatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetFeatureResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.result_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFeatureResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "szdiagnostic.GetFeatureResponse.result"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetFeatureResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetFeatureResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szdiagnostic.GetFeatureResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetFeatureResponse)
  return target;
}

size_t GetFeatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetFeatureResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (!this->_internal_result().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetFeatureResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetFeatureResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetFeatureResponse::GetClassData() const { return &_class_data_; }


void GetFeatureResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetFeatureResponse*>(&to_msg);
  auto& from = static_cast<const GetFeatureResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetFeatureResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_result().empty()) {
    _this->_internal_set_result(from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetFeatureResponse::CopyFrom(const GetFeatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetFeatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatureResponse::IsInitialized() const {
  return true;
}

void GetFeatureResponse::InternalSwap(GetFeatureResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.result_, lhs_arena,
      &other->_impl_.result_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFeatureResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[5]);
}

// ===================================================================

class PurgeRepositoryRequest::_Internal {
 public:
};

PurgeRepositoryRequest::PurgeRepositoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.PurgeRepositoryRequest)
}
PurgeRepositoryRequest::PurgeRepositoryRequest(const PurgeRepositoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PurgeRepositoryRequest* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.PurgeRepositoryRequest)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PurgeRepositoryRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PurgeRepositoryRequest::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PurgeRepositoryRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[6]);
}

// ===================================================================

class PurgeRepositoryResponse::_Internal {
 public:
};

PurgeRepositoryResponse::PurgeRepositoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.PurgeRepositoryResponse)
}
PurgeRepositoryResponse::PurgeRepositoryResponse(const PurgeRepositoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  PurgeRepositoryResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.PurgeRepositoryResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PurgeRepositoryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PurgeRepositoryResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata PurgeRepositoryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[7]);
}

// ===================================================================

class ReinitializeRequest::_Internal {
 public:
};

ReinitializeRequest::ReinitializeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.ReinitializeRequest)
}
ReinitializeRequest::ReinitializeRequest(const ReinitializeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ReinitializeRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.config_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.config_id_ = from._impl_.config_id_;
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.ReinitializeRequest)
}

inline void ReinitializeRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.config_id_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ReinitializeRequest::~ReinitializeRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.ReinitializeRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ReinitializeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ReinitializeRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ReinitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.ReinitializeRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.config_id_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitializeRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int64 config_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.config_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ReinitializeRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.ReinitializeRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 config_id = 1;
  if (this->_internal_config_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(1, this->_internal_config_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.ReinitializeRequest)
  return target;
}

size_t ReinitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.ReinitializeRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 config_id = 1;
  if (this->_internal_config_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_config_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinitializeRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ReinitializeRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinitializeRequest::GetClassData() const { return &_class_data_; }


void ReinitializeRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ReinitializeRequest*>(&to_msg);
  auto& from = static_cast<const ReinitializeRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.ReinitializeRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_config_id() != 0) {
    _this->_internal_set_config_id(from._internal_config_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ReinitializeRequest::CopyFrom(const ReinitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.ReinitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitializeRequest::IsInitialized() const {
  return true;
}

void ReinitializeRequest::InternalSwap(ReinitializeRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.config_id_, other->_impl_.config_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[8]);
}

// ===================================================================

class ReinitializeResponse::_Internal {
 public:
};

ReinitializeResponse::ReinitializeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.ReinitializeResponse)
}
ReinitializeResponse::ReinitializeResponse(const ReinitializeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  ReinitializeResponse* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.ReinitializeResponse)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ReinitializeResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ReinitializeResponse::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_szdiagnostic_2eproto_getter, &descriptor_table_szdiagnostic_2eproto_once,
      file_level_metadata_szdiagnostic_2eproto[9]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace szdiagnostic
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::szdiagnostic::CheckDatastorePerformanceRequest*
Arena::CreateMaybeMessage< ::szdiagnostic::CheckDatastorePerformanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::CheckDatastorePerformanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::CheckDatastorePerformanceResponse*
Arena::CreateMaybeMessage< ::szdiagnostic::CheckDatastorePerformanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::CheckDatastorePerformanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetDatastoreInfoRequest*
Arena::CreateMaybeMessage< ::szdiagnostic::GetDatastoreInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetDatastoreInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetDatastoreInfoResponse*
Arena::CreateMaybeMessage< ::szdiagnostic::GetDatastoreInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetDatastoreInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetFeatureRequest*
Arena::CreateMaybeMessage< ::szdiagnostic::GetFeatureRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetFeatureRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetFeatureResponse*
Arena::CreateMaybeMessage< ::szdiagnostic::GetFeatureResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetFeatureResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::PurgeRepositoryRequest*
Arena::CreateMaybeMessage< ::szdiagnostic::PurgeRepositoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::PurgeRepositoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::PurgeRepositoryResponse*
Arena::CreateMaybeMessage< ::szdiagnostic::PurgeRepositoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::PurgeRepositoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::ReinitializeRequest*
Arena::CreateMaybeMessage< ::szdiagnostic::ReinitializeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::ReinitializeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::ReinitializeResponse*
Arena::CreateMaybeMessage< ::szdiagnostic::ReinitializeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::ReinitializeResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
