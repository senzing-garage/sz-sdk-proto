// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szdiagnostic.proto

#include "szdiagnostic.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace szdiagnostic {
class CheckDatastorePerformanceRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckDatastorePerformanceRequest> _instance;
} _CheckDatastorePerformanceRequest_default_instance_;
class CheckDatastorePerformanceResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CheckDatastorePerformanceResponse> _instance;
} _CheckDatastorePerformanceResponse_default_instance_;
class GetDatastoreInfoRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDatastoreInfoRequest> _instance;
} _GetDatastoreInfoRequest_default_instance_;
class GetDatastoreInfoResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDatastoreInfoResponse> _instance;
} _GetDatastoreInfoResponse_default_instance_;
class GetFeatureRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetFeatureRequest> _instance;
} _GetFeatureRequest_default_instance_;
class GetFeatureResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetFeatureResponse> _instance;
} _GetFeatureResponse_default_instance_;
class PurgeRepositoryRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PurgeRepositoryRequest> _instance;
} _PurgeRepositoryRequest_default_instance_;
class PurgeRepositoryResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PurgeRepositoryResponse> _instance;
} _PurgeRepositoryResponse_default_instance_;
class ReinitializeRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReinitializeRequest> _instance;
} _ReinitializeRequest_default_instance_;
class ReinitializeResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReinitializeResponse> _instance;
} _ReinitializeResponse_default_instance_;
}  // namespace szdiagnostic
static void InitDefaultsscc_info_CheckDatastorePerformanceRequest_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_CheckDatastorePerformanceRequest_default_instance_;
    new (ptr) ::szdiagnostic::CheckDatastorePerformanceRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::CheckDatastorePerformanceRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckDatastorePerformanceRequest_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckDatastorePerformanceRequest_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_CheckDatastorePerformanceResponse_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_CheckDatastorePerformanceResponse_default_instance_;
    new (ptr) ::szdiagnostic::CheckDatastorePerformanceResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::CheckDatastorePerformanceResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CheckDatastorePerformanceResponse_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CheckDatastorePerformanceResponse_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_GetDatastoreInfoRequest_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_GetDatastoreInfoRequest_default_instance_;
    new (ptr) ::szdiagnostic::GetDatastoreInfoRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::GetDatastoreInfoRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDatastoreInfoRequest_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDatastoreInfoRequest_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_GetDatastoreInfoResponse_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_GetDatastoreInfoResponse_default_instance_;
    new (ptr) ::szdiagnostic::GetDatastoreInfoResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::GetDatastoreInfoResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDatastoreInfoResponse_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDatastoreInfoResponse_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_GetFeatureRequest_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_GetFeatureRequest_default_instance_;
    new (ptr) ::szdiagnostic::GetFeatureRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::GetFeatureRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetFeatureRequest_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetFeatureRequest_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_GetFeatureResponse_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_GetFeatureResponse_default_instance_;
    new (ptr) ::szdiagnostic::GetFeatureResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::GetFeatureResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetFeatureResponse_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetFeatureResponse_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_PurgeRepositoryRequest_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_PurgeRepositoryRequest_default_instance_;
    new (ptr) ::szdiagnostic::PurgeRepositoryRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::PurgeRepositoryRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PurgeRepositoryRequest_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PurgeRepositoryRequest_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_PurgeRepositoryResponse_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_PurgeRepositoryResponse_default_instance_;
    new (ptr) ::szdiagnostic::PurgeRepositoryResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::PurgeRepositoryResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PurgeRepositoryResponse_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PurgeRepositoryResponse_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_ReinitializeRequest_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_ReinitializeRequest_default_instance_;
    new (ptr) ::szdiagnostic::ReinitializeRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::ReinitializeRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReinitializeRequest_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReinitializeRequest_szdiagnostic_2eproto}, {}};

static void InitDefaultsscc_info_ReinitializeResponse_szdiagnostic_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szdiagnostic::_ReinitializeResponse_default_instance_;
    new (ptr) ::szdiagnostic::ReinitializeResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szdiagnostic::ReinitializeResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReinitializeResponse_szdiagnostic_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReinitializeResponse_szdiagnostic_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_szdiagnostic_2eproto[10];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_szdiagnostic_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_szdiagnostic_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_szdiagnostic_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceRequest, secondstorun_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::CheckDatastorePerformanceResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetDatastoreInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetDatastoreInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetDatastoreInfoResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureRequest, featureid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::GetFeatureResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::PurgeRepositoryRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::PurgeRepositoryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::ReinitializeRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::ReinitializeRequest, configid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szdiagnostic::ReinitializeResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::szdiagnostic::CheckDatastorePerformanceRequest)},
  { 6, -1, sizeof(::szdiagnostic::CheckDatastorePerformanceResponse)},
  { 12, -1, sizeof(::szdiagnostic::GetDatastoreInfoRequest)},
  { 17, -1, sizeof(::szdiagnostic::GetDatastoreInfoResponse)},
  { 23, -1, sizeof(::szdiagnostic::GetFeatureRequest)},
  { 29, -1, sizeof(::szdiagnostic::GetFeatureResponse)},
  { 35, -1, sizeof(::szdiagnostic::PurgeRepositoryRequest)},
  { 40, -1, sizeof(::szdiagnostic::PurgeRepositoryResponse)},
  { 45, -1, sizeof(::szdiagnostic::ReinitializeRequest)},
  { 51, -1, sizeof(::szdiagnostic::ReinitializeResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_CheckDatastorePerformanceRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_CheckDatastorePerformanceResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_GetDatastoreInfoRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_GetDatastoreInfoResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_GetFeatureRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_GetFeatureResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_PurgeRepositoryRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_PurgeRepositoryResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_ReinitializeRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szdiagnostic::_ReinitializeResponse_default_instance_),
};

const char descriptor_table_protodef_szdiagnostic_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\022szdiagnostic.proto\022\014szdiagnostic\"8\n Ch"
  "eckDatastorePerformanceRequest\022\024\n\014second"
  "sToRun\030\001 \001(\005\"3\n!CheckDatastorePerformanc"
  "eResponse\022\016\n\006result\030\001 \001(\t\"\031\n\027GetDatastor"
  "eInfoRequest\"*\n\030GetDatastoreInfoResponse"
  "\022\016\n\006result\030\001 \001(\t\"&\n\021GetFeatureRequest\022\021\n"
  "\tfeatureId\030\001 \001(\003\"$\n\022GetFeatureResponse\022\016"
  "\n\006result\030\001 \001(\t\"\030\n\026PurgeRepositoryRequest"
  "\"\031\n\027PurgeRepositoryResponse\"\'\n\023Reinitial"
  "izeRequest\022\020\n\010configId\030\001 \001(\003\"\026\n\024Reinitia"
  "lizeResponse2\201\004\n\014SzDiagnostic\022~\n\031CheckDa"
  "tastorePerformance\022..szdiagnostic.CheckD"
  "atastorePerformanceRequest\032/.szdiagnosti"
  "c.CheckDatastorePerformanceResponse\"\000\022c\n"
  "\020GetDatastoreInfo\022%.szdiagnostic.GetData"
  "storeInfoRequest\032&.szdiagnostic.GetDatas"
  "toreInfoResponse\"\000\022Q\n\nGetFeature\022\037.szdia"
  "gnostic.GetFeatureRequest\032 .szdiagnostic"
  ".GetFeatureResponse\"\000\022`\n\017PurgeRepository"
  "\022$.szdiagnostic.PurgeRepositoryRequest\032%"
  ".szdiagnostic.PurgeRepositoryResponse\"\000\022"
  "W\n\014Reinitialize\022!.szdiagnostic.Reinitial"
  "izeRequest\032\".szdiagnostic.ReinitializeRe"
  "sponse\"\000Bs\n\'com.senzing.sz.engine.grpc.S"
  "zDiagnosticB\021SzDiagnosticProtoZ5github.c"
  "om/senzing-garage/sz-sdk-go-grpc/szdiagn"
  "osticb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_szdiagnostic_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_szdiagnostic_2eproto_sccs[10] = {
  &scc_info_CheckDatastorePerformanceRequest_szdiagnostic_2eproto.base,
  &scc_info_CheckDatastorePerformanceResponse_szdiagnostic_2eproto.base,
  &scc_info_GetDatastoreInfoRequest_szdiagnostic_2eproto.base,
  &scc_info_GetDatastoreInfoResponse_szdiagnostic_2eproto.base,
  &scc_info_GetFeatureRequest_szdiagnostic_2eproto.base,
  &scc_info_GetFeatureResponse_szdiagnostic_2eproto.base,
  &scc_info_PurgeRepositoryRequest_szdiagnostic_2eproto.base,
  &scc_info_PurgeRepositoryResponse_szdiagnostic_2eproto.base,
  &scc_info_ReinitializeRequest_szdiagnostic_2eproto.base,
  &scc_info_ReinitializeResponse_szdiagnostic_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_szdiagnostic_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_szdiagnostic_2eproto = {
  false, false, descriptor_table_protodef_szdiagnostic_2eproto, "szdiagnostic.proto", 1053,
  &descriptor_table_szdiagnostic_2eproto_once, descriptor_table_szdiagnostic_2eproto_sccs, descriptor_table_szdiagnostic_2eproto_deps, 10, 0,
  schemas, file_default_instances, TableStruct_szdiagnostic_2eproto::offsets,
  file_level_metadata_szdiagnostic_2eproto, 10, file_level_enum_descriptors_szdiagnostic_2eproto, file_level_service_descriptors_szdiagnostic_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_szdiagnostic_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_szdiagnostic_2eproto)), true);
namespace szdiagnostic {

// ===================================================================

void CheckDatastorePerformanceRequest::InitAsDefaultInstance() {
}
class CheckDatastorePerformanceRequest::_Internal {
 public:
};

CheckDatastorePerformanceRequest::CheckDatastorePerformanceRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.CheckDatastorePerformanceRequest)
}
CheckDatastorePerformanceRequest::CheckDatastorePerformanceRequest(const CheckDatastorePerformanceRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  secondstorun_ = from.secondstorun_;
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.CheckDatastorePerformanceRequest)
}

void CheckDatastorePerformanceRequest::SharedCtor() {
  secondstorun_ = 0;
}

CheckDatastorePerformanceRequest::~CheckDatastorePerformanceRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.CheckDatastorePerformanceRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckDatastorePerformanceRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CheckDatastorePerformanceRequest::ArenaDtor(void* object) {
  CheckDatastorePerformanceRequest* _this = reinterpret_cast< CheckDatastorePerformanceRequest* >(object);
  (void)_this;
}
void CheckDatastorePerformanceRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckDatastorePerformanceRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckDatastorePerformanceRequest& CheckDatastorePerformanceRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckDatastorePerformanceRequest_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void CheckDatastorePerformanceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.CheckDatastorePerformanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  secondstorun_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDatastorePerformanceRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 secondsToRun = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          secondstorun_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckDatastorePerformanceRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.CheckDatastorePerformanceRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 secondsToRun = 1;
  if (this->secondstorun() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_secondstorun(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.CheckDatastorePerformanceRequest)
  return target;
}

size_t CheckDatastorePerformanceRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.CheckDatastorePerformanceRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 secondsToRun = 1;
  if (this->secondstorun() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_secondstorun());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckDatastorePerformanceRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.CheckDatastorePerformanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckDatastorePerformanceRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckDatastorePerformanceRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.CheckDatastorePerformanceRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.CheckDatastorePerformanceRequest)
    MergeFrom(*source);
  }
}

void CheckDatastorePerformanceRequest::MergeFrom(const CheckDatastorePerformanceRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.CheckDatastorePerformanceRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.secondstorun() != 0) {
    _internal_set_secondstorun(from._internal_secondstorun());
  }
}

void CheckDatastorePerformanceRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.CheckDatastorePerformanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckDatastorePerformanceRequest::CopyFrom(const CheckDatastorePerformanceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.CheckDatastorePerformanceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDatastorePerformanceRequest::IsInitialized() const {
  return true;
}

void CheckDatastorePerformanceRequest::InternalSwap(CheckDatastorePerformanceRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(secondstorun_, other->secondstorun_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDatastorePerformanceRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CheckDatastorePerformanceResponse::InitAsDefaultInstance() {
}
class CheckDatastorePerformanceResponse::_Internal {
 public:
};

CheckDatastorePerformanceResponse::CheckDatastorePerformanceResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.CheckDatastorePerformanceResponse)
}
CheckDatastorePerformanceResponse::CheckDatastorePerformanceResponse(const CheckDatastorePerformanceResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.CheckDatastorePerformanceResponse)
}

void CheckDatastorePerformanceResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CheckDatastorePerformanceResponse_szdiagnostic_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CheckDatastorePerformanceResponse::~CheckDatastorePerformanceResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.CheckDatastorePerformanceResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CheckDatastorePerformanceResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CheckDatastorePerformanceResponse::ArenaDtor(void* object) {
  CheckDatastorePerformanceResponse* _this = reinterpret_cast< CheckDatastorePerformanceResponse* >(object);
  (void)_this;
}
void CheckDatastorePerformanceResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CheckDatastorePerformanceResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CheckDatastorePerformanceResponse& CheckDatastorePerformanceResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CheckDatastorePerformanceResponse_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void CheckDatastorePerformanceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.CheckDatastorePerformanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CheckDatastorePerformanceResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szdiagnostic.CheckDatastorePerformanceResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CheckDatastorePerformanceResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.CheckDatastorePerformanceResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szdiagnostic.CheckDatastorePerformanceResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.CheckDatastorePerformanceResponse)
  return target;
}

size_t CheckDatastorePerformanceResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.CheckDatastorePerformanceResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CheckDatastorePerformanceResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.CheckDatastorePerformanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CheckDatastorePerformanceResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CheckDatastorePerformanceResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.CheckDatastorePerformanceResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.CheckDatastorePerformanceResponse)
    MergeFrom(*source);
  }
}

void CheckDatastorePerformanceResponse::MergeFrom(const CheckDatastorePerformanceResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.CheckDatastorePerformanceResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void CheckDatastorePerformanceResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.CheckDatastorePerformanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CheckDatastorePerformanceResponse::CopyFrom(const CheckDatastorePerformanceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.CheckDatastorePerformanceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CheckDatastorePerformanceResponse::IsInitialized() const {
  return true;
}

void CheckDatastorePerformanceResponse::InternalSwap(CheckDatastorePerformanceResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CheckDatastorePerformanceResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDatastoreInfoRequest::InitAsDefaultInstance() {
}
class GetDatastoreInfoRequest::_Internal {
 public:
};

GetDatastoreInfoRequest::GetDatastoreInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetDatastoreInfoRequest)
}
GetDatastoreInfoRequest::GetDatastoreInfoRequest(const GetDatastoreInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetDatastoreInfoRequest)
}

void GetDatastoreInfoRequest::SharedCtor() {
}

GetDatastoreInfoRequest::~GetDatastoreInfoRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetDatastoreInfoRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDatastoreInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetDatastoreInfoRequest::ArenaDtor(void* object) {
  GetDatastoreInfoRequest* _this = reinterpret_cast< GetDatastoreInfoRequest* >(object);
  (void)_this;
}
void GetDatastoreInfoRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDatastoreInfoRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDatastoreInfoRequest& GetDatastoreInfoRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDatastoreInfoRequest_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void GetDatastoreInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetDatastoreInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDatastoreInfoRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDatastoreInfoRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetDatastoreInfoRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetDatastoreInfoRequest)
  return target;
}

size_t GetDatastoreInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetDatastoreInfoRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDatastoreInfoRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.GetDatastoreInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDatastoreInfoRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDatastoreInfoRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.GetDatastoreInfoRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.GetDatastoreInfoRequest)
    MergeFrom(*source);
  }
}

void GetDatastoreInfoRequest::MergeFrom(const GetDatastoreInfoRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetDatastoreInfoRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetDatastoreInfoRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.GetDatastoreInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDatastoreInfoRequest::CopyFrom(const GetDatastoreInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetDatastoreInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatastoreInfoRequest::IsInitialized() const {
  return true;
}

void GetDatastoreInfoRequest::InternalSwap(GetDatastoreInfoRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDatastoreInfoRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDatastoreInfoResponse::InitAsDefaultInstance() {
}
class GetDatastoreInfoResponse::_Internal {
 public:
};

GetDatastoreInfoResponse::GetDatastoreInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetDatastoreInfoResponse)
}
GetDatastoreInfoResponse::GetDatastoreInfoResponse(const GetDatastoreInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetDatastoreInfoResponse)
}

void GetDatastoreInfoResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetDatastoreInfoResponse_szdiagnostic_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetDatastoreInfoResponse::~GetDatastoreInfoResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetDatastoreInfoResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDatastoreInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetDatastoreInfoResponse::ArenaDtor(void* object) {
  GetDatastoreInfoResponse* _this = reinterpret_cast< GetDatastoreInfoResponse* >(object);
  (void)_this;
}
void GetDatastoreInfoResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDatastoreInfoResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDatastoreInfoResponse& GetDatastoreInfoResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDatastoreInfoResponse_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void GetDatastoreInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetDatastoreInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDatastoreInfoResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szdiagnostic.GetDatastoreInfoResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDatastoreInfoResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetDatastoreInfoResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szdiagnostic.GetDatastoreInfoResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetDatastoreInfoResponse)
  return target;
}

size_t GetDatastoreInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetDatastoreInfoResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDatastoreInfoResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.GetDatastoreInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDatastoreInfoResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDatastoreInfoResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.GetDatastoreInfoResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.GetDatastoreInfoResponse)
    MergeFrom(*source);
  }
}

void GetDatastoreInfoResponse::MergeFrom(const GetDatastoreInfoResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetDatastoreInfoResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetDatastoreInfoResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.GetDatastoreInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDatastoreInfoResponse::CopyFrom(const GetDatastoreInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetDatastoreInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDatastoreInfoResponse::IsInitialized() const {
  return true;
}

void GetDatastoreInfoResponse::InternalSwap(GetDatastoreInfoResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDatastoreInfoResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetFeatureRequest::InitAsDefaultInstance() {
}
class GetFeatureRequest::_Internal {
 public:
};

GetFeatureRequest::GetFeatureRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetFeatureRequest)
}
GetFeatureRequest::GetFeatureRequest(const GetFeatureRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  featureid_ = from.featureid_;
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetFeatureRequest)
}

void GetFeatureRequest::SharedCtor() {
  featureid_ = PROTOBUF_LONGLONG(0);
}

GetFeatureRequest::~GetFeatureRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetFeatureRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetFeatureRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetFeatureRequest::ArenaDtor(void* object) {
  GetFeatureRequest* _this = reinterpret_cast< GetFeatureRequest* >(object);
  (void)_this;
}
void GetFeatureRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetFeatureRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetFeatureRequest& GetFeatureRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetFeatureRequest_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void GetFeatureRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetFeatureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  featureid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFeatureRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 featureId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          featureid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetFeatureRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetFeatureRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 featureId = 1;
  if (this->featureid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_featureid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetFeatureRequest)
  return target;
}

size_t GetFeatureRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetFeatureRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 featureId = 1;
  if (this->featureid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_featureid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFeatureRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.GetFeatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFeatureRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetFeatureRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.GetFeatureRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.GetFeatureRequest)
    MergeFrom(*source);
  }
}

void GetFeatureRequest::MergeFrom(const GetFeatureRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetFeatureRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.featureid() != 0) {
    _internal_set_featureid(from._internal_featureid());
  }
}

void GetFeatureRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.GetFeatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeatureRequest::CopyFrom(const GetFeatureRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetFeatureRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatureRequest::IsInitialized() const {
  return true;
}

void GetFeatureRequest::InternalSwap(GetFeatureRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(featureid_, other->featureid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFeatureRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetFeatureResponse::InitAsDefaultInstance() {
}
class GetFeatureResponse::_Internal {
 public:
};

GetFeatureResponse::GetFeatureResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.GetFeatureResponse)
}
GetFeatureResponse::GetFeatureResponse(const GetFeatureResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.GetFeatureResponse)
}

void GetFeatureResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetFeatureResponse_szdiagnostic_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetFeatureResponse::~GetFeatureResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.GetFeatureResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetFeatureResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetFeatureResponse::ArenaDtor(void* object) {
  GetFeatureResponse* _this = reinterpret_cast< GetFeatureResponse* >(object);
  (void)_this;
}
void GetFeatureResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetFeatureResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetFeatureResponse& GetFeatureResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetFeatureResponse_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void GetFeatureResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.GetFeatureResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetFeatureResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szdiagnostic.GetFeatureResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetFeatureResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.GetFeatureResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szdiagnostic.GetFeatureResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.GetFeatureResponse)
  return target;
}

size_t GetFeatureResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.GetFeatureResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetFeatureResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.GetFeatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetFeatureResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetFeatureResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.GetFeatureResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.GetFeatureResponse)
    MergeFrom(*source);
  }
}

void GetFeatureResponse::MergeFrom(const GetFeatureResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.GetFeatureResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetFeatureResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.GetFeatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetFeatureResponse::CopyFrom(const GetFeatureResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.GetFeatureResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetFeatureResponse::IsInitialized() const {
  return true;
}

void GetFeatureResponse::InternalSwap(GetFeatureResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetFeatureResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PurgeRepositoryRequest::InitAsDefaultInstance() {
}
class PurgeRepositoryRequest::_Internal {
 public:
};

PurgeRepositoryRequest::PurgeRepositoryRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.PurgeRepositoryRequest)
}
PurgeRepositoryRequest::PurgeRepositoryRequest(const PurgeRepositoryRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.PurgeRepositoryRequest)
}

void PurgeRepositoryRequest::SharedCtor() {
}

PurgeRepositoryRequest::~PurgeRepositoryRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.PurgeRepositoryRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PurgeRepositoryRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PurgeRepositoryRequest::ArenaDtor(void* object) {
  PurgeRepositoryRequest* _this = reinterpret_cast< PurgeRepositoryRequest* >(object);
  (void)_this;
}
void PurgeRepositoryRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PurgeRepositoryRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PurgeRepositoryRequest& PurgeRepositoryRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PurgeRepositoryRequest_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void PurgeRepositoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.PurgeRepositoryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PurgeRepositoryRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PurgeRepositoryRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.PurgeRepositoryRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.PurgeRepositoryRequest)
  return target;
}

size_t PurgeRepositoryRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.PurgeRepositoryRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PurgeRepositoryRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.PurgeRepositoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const PurgeRepositoryRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PurgeRepositoryRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.PurgeRepositoryRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.PurgeRepositoryRequest)
    MergeFrom(*source);
  }
}

void PurgeRepositoryRequest::MergeFrom(const PurgeRepositoryRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.PurgeRepositoryRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PurgeRepositoryRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.PurgeRepositoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurgeRepositoryRequest::CopyFrom(const PurgeRepositoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.PurgeRepositoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurgeRepositoryRequest::IsInitialized() const {
  return true;
}

void PurgeRepositoryRequest::InternalSwap(PurgeRepositoryRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PurgeRepositoryRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PurgeRepositoryResponse::InitAsDefaultInstance() {
}
class PurgeRepositoryResponse::_Internal {
 public:
};

PurgeRepositoryResponse::PurgeRepositoryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.PurgeRepositoryResponse)
}
PurgeRepositoryResponse::PurgeRepositoryResponse(const PurgeRepositoryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.PurgeRepositoryResponse)
}

void PurgeRepositoryResponse::SharedCtor() {
}

PurgeRepositoryResponse::~PurgeRepositoryResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.PurgeRepositoryResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PurgeRepositoryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PurgeRepositoryResponse::ArenaDtor(void* object) {
  PurgeRepositoryResponse* _this = reinterpret_cast< PurgeRepositoryResponse* >(object);
  (void)_this;
}
void PurgeRepositoryResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PurgeRepositoryResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PurgeRepositoryResponse& PurgeRepositoryResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PurgeRepositoryResponse_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void PurgeRepositoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.PurgeRepositoryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PurgeRepositoryResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PurgeRepositoryResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.PurgeRepositoryResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.PurgeRepositoryResponse)
  return target;
}

size_t PurgeRepositoryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.PurgeRepositoryResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PurgeRepositoryResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.PurgeRepositoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const PurgeRepositoryResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PurgeRepositoryResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.PurgeRepositoryResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.PurgeRepositoryResponse)
    MergeFrom(*source);
  }
}

void PurgeRepositoryResponse::MergeFrom(const PurgeRepositoryResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.PurgeRepositoryResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void PurgeRepositoryResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.PurgeRepositoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PurgeRepositoryResponse::CopyFrom(const PurgeRepositoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.PurgeRepositoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PurgeRepositoryResponse::IsInitialized() const {
  return true;
}

void PurgeRepositoryResponse::InternalSwap(PurgeRepositoryResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PurgeRepositoryResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReinitializeRequest::InitAsDefaultInstance() {
}
class ReinitializeRequest::_Internal {
 public:
};

ReinitializeRequest::ReinitializeRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.ReinitializeRequest)
}
ReinitializeRequest::ReinitializeRequest(const ReinitializeRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configid_ = from.configid_;
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.ReinitializeRequest)
}

void ReinitializeRequest::SharedCtor() {
  configid_ = PROTOBUF_LONGLONG(0);
}

ReinitializeRequest::~ReinitializeRequest() {
  // @@protoc_insertion_point(destructor:szdiagnostic.ReinitializeRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReinitializeRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReinitializeRequest::ArenaDtor(void* object) {
  ReinitializeRequest* _this = reinterpret_cast< ReinitializeRequest* >(object);
  (void)_this;
}
void ReinitializeRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReinitializeRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReinitializeRequest& ReinitializeRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReinitializeRequest_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void ReinitializeRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.ReinitializeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitializeRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 configId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          configid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReinitializeRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.ReinitializeRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_configid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.ReinitializeRequest)
  return target;
}

size_t ReinitializeRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.ReinitializeRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_configid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReinitializeRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.ReinitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinitializeRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReinitializeRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.ReinitializeRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.ReinitializeRequest)
    MergeFrom(*source);
  }
}

void ReinitializeRequest::MergeFrom(const ReinitializeRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.ReinitializeRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.configid() != 0) {
    _internal_set_configid(from._internal_configid());
  }
}

void ReinitializeRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.ReinitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinitializeRequest::CopyFrom(const ReinitializeRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.ReinitializeRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitializeRequest::IsInitialized() const {
  return true;
}

void ReinitializeRequest::InternalSwap(ReinitializeRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(configid_, other->configid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReinitializeResponse::InitAsDefaultInstance() {
}
class ReinitializeResponse::_Internal {
 public:
};

ReinitializeResponse::ReinitializeResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szdiagnostic.ReinitializeResponse)
}
ReinitializeResponse::ReinitializeResponse(const ReinitializeResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szdiagnostic.ReinitializeResponse)
}

void ReinitializeResponse::SharedCtor() {
}

ReinitializeResponse::~ReinitializeResponse() {
  // @@protoc_insertion_point(destructor:szdiagnostic.ReinitializeResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReinitializeResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReinitializeResponse::ArenaDtor(void* object) {
  ReinitializeResponse* _this = reinterpret_cast< ReinitializeResponse* >(object);
  (void)_this;
}
void ReinitializeResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReinitializeResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReinitializeResponse& ReinitializeResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReinitializeResponse_szdiagnostic_2eproto.base);
  return *internal_default_instance();
}


void ReinitializeResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szdiagnostic.ReinitializeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReinitializeResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReinitializeResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szdiagnostic.ReinitializeResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szdiagnostic.ReinitializeResponse)
  return target;
}

size_t ReinitializeResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szdiagnostic.ReinitializeResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReinitializeResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szdiagnostic.ReinitializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReinitializeResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReinitializeResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szdiagnostic.ReinitializeResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szdiagnostic.ReinitializeResponse)
    MergeFrom(*source);
  }
}

void ReinitializeResponse::MergeFrom(const ReinitializeResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szdiagnostic.ReinitializeResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReinitializeResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szdiagnostic.ReinitializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReinitializeResponse::CopyFrom(const ReinitializeResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szdiagnostic.ReinitializeResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReinitializeResponse::IsInitialized() const {
  return true;
}

void ReinitializeResponse::InternalSwap(ReinitializeResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReinitializeResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace szdiagnostic
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::szdiagnostic::CheckDatastorePerformanceRequest* Arena::CreateMaybeMessage< ::szdiagnostic::CheckDatastorePerformanceRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::CheckDatastorePerformanceRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::CheckDatastorePerformanceResponse* Arena::CreateMaybeMessage< ::szdiagnostic::CheckDatastorePerformanceResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::CheckDatastorePerformanceResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetDatastoreInfoRequest* Arena::CreateMaybeMessage< ::szdiagnostic::GetDatastoreInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetDatastoreInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetDatastoreInfoResponse* Arena::CreateMaybeMessage< ::szdiagnostic::GetDatastoreInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetDatastoreInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetFeatureRequest* Arena::CreateMaybeMessage< ::szdiagnostic::GetFeatureRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetFeatureRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::GetFeatureResponse* Arena::CreateMaybeMessage< ::szdiagnostic::GetFeatureResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::GetFeatureResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::PurgeRepositoryRequest* Arena::CreateMaybeMessage< ::szdiagnostic::PurgeRepositoryRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::PurgeRepositoryRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::PurgeRepositoryResponse* Arena::CreateMaybeMessage< ::szdiagnostic::PurgeRepositoryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::PurgeRepositoryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::ReinitializeRequest* Arena::CreateMaybeMessage< ::szdiagnostic::ReinitializeRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::ReinitializeRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szdiagnostic::ReinitializeResponse* Arena::CreateMaybeMessage< ::szdiagnostic::ReinitializeResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szdiagnostic::ReinitializeResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
