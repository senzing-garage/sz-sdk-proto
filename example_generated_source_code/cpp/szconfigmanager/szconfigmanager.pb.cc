// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szconfigmanager.proto

#include "szconfigmanager.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace szconfigmanager {
class AddConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddConfigRequest> _instance;
} _AddConfigRequest_default_instance_;
class AddConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddConfigResponse> _instance;
} _AddConfigResponse_default_instance_;
class GetConfigRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigRequest> _instance;
} _GetConfigRequest_default_instance_;
class GetConfigResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigResponse> _instance;
} _GetConfigResponse_default_instance_;
class GetConfigsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigsRequest> _instance;
} _GetConfigsRequest_default_instance_;
class GetConfigsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetConfigsResponse> _instance;
} _GetConfigsResponse_default_instance_;
class GetDefaultConfigIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDefaultConfigIdRequest> _instance;
} _GetDefaultConfigIdRequest_default_instance_;
class GetDefaultConfigIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetDefaultConfigIdResponse> _instance;
} _GetDefaultConfigIdResponse_default_instance_;
class ReplaceDefaultConfigIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReplaceDefaultConfigIdRequest> _instance;
} _ReplaceDefaultConfigIdRequest_default_instance_;
class ReplaceDefaultConfigIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ReplaceDefaultConfigIdResponse> _instance;
} _ReplaceDefaultConfigIdResponse_default_instance_;
class SetDefaultConfigIdRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetDefaultConfigIdRequest> _instance;
} _SetDefaultConfigIdRequest_default_instance_;
class SetDefaultConfigIdResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SetDefaultConfigIdResponse> _instance;
} _SetDefaultConfigIdResponse_default_instance_;
}  // namespace szconfigmanager
static void InitDefaultsscc_info_AddConfigRequest_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_AddConfigRequest_default_instance_;
    new (ptr) ::szconfigmanager::AddConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::AddConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddConfigRequest_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddConfigRequest_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_AddConfigResponse_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_AddConfigResponse_default_instance_;
    new (ptr) ::szconfigmanager::AddConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::AddConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddConfigResponse_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddConfigResponse_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_GetConfigRequest_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_GetConfigRequest_default_instance_;
    new (ptr) ::szconfigmanager::GetConfigRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::GetConfigRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConfigRequest_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConfigRequest_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_GetConfigResponse_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_GetConfigResponse_default_instance_;
    new (ptr) ::szconfigmanager::GetConfigResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::GetConfigResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConfigResponse_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConfigResponse_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_GetConfigsRequest_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_GetConfigsRequest_default_instance_;
    new (ptr) ::szconfigmanager::GetConfigsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::GetConfigsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConfigsRequest_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConfigsRequest_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_GetConfigsResponse_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_GetConfigsResponse_default_instance_;
    new (ptr) ::szconfigmanager::GetConfigsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::GetConfigsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetConfigsResponse_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetConfigsResponse_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_GetDefaultConfigIdRequest_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_GetDefaultConfigIdRequest_default_instance_;
    new (ptr) ::szconfigmanager::GetDefaultConfigIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::GetDefaultConfigIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDefaultConfigIdRequest_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDefaultConfigIdRequest_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_GetDefaultConfigIdResponse_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_GetDefaultConfigIdResponse_default_instance_;
    new (ptr) ::szconfigmanager::GetDefaultConfigIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::GetDefaultConfigIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetDefaultConfigIdResponse_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetDefaultConfigIdResponse_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_ReplaceDefaultConfigIdRequest_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_ReplaceDefaultConfigIdRequest_default_instance_;
    new (ptr) ::szconfigmanager::ReplaceDefaultConfigIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::ReplaceDefaultConfigIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReplaceDefaultConfigIdRequest_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReplaceDefaultConfigIdRequest_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_ReplaceDefaultConfigIdResponse_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_ReplaceDefaultConfigIdResponse_default_instance_;
    new (ptr) ::szconfigmanager::ReplaceDefaultConfigIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::ReplaceDefaultConfigIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ReplaceDefaultConfigIdResponse_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ReplaceDefaultConfigIdResponse_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_SetDefaultConfigIdRequest_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_SetDefaultConfigIdRequest_default_instance_;
    new (ptr) ::szconfigmanager::SetDefaultConfigIdRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::SetDefaultConfigIdRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetDefaultConfigIdRequest_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetDefaultConfigIdRequest_szconfigmanager_2eproto}, {}};

static void InitDefaultsscc_info_SetDefaultConfigIdResponse_szconfigmanager_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::szconfigmanager::_SetDefaultConfigIdResponse_default_instance_;
    new (ptr) ::szconfigmanager::SetDefaultConfigIdResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::szconfigmanager::SetDefaultConfigIdResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SetDefaultConfigIdResponse_szconfigmanager_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SetDefaultConfigIdResponse_szconfigmanager_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_szconfigmanager_2eproto[12];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_szconfigmanager_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_szconfigmanager_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_szconfigmanager_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::AddConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::AddConfigRequest, configdefinition_),
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::AddConfigRequest, configcomment_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::AddConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::AddConfigResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigRequest, configid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetConfigsResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetDefaultConfigIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetDefaultConfigIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::GetDefaultConfigIdResponse, result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::ReplaceDefaultConfigIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::ReplaceDefaultConfigIdRequest, currentdefaultconfigid_),
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::ReplaceDefaultConfigIdRequest, newdefaultconfigid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::ReplaceDefaultConfigIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::SetDefaultConfigIdRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::SetDefaultConfigIdRequest, configid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::szconfigmanager::SetDefaultConfigIdResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::szconfigmanager::AddConfigRequest)},
  { 7, -1, sizeof(::szconfigmanager::AddConfigResponse)},
  { 13, -1, sizeof(::szconfigmanager::GetConfigRequest)},
  { 19, -1, sizeof(::szconfigmanager::GetConfigResponse)},
  { 25, -1, sizeof(::szconfigmanager::GetConfigsRequest)},
  { 30, -1, sizeof(::szconfigmanager::GetConfigsResponse)},
  { 36, -1, sizeof(::szconfigmanager::GetDefaultConfigIdRequest)},
  { 41, -1, sizeof(::szconfigmanager::GetDefaultConfigIdResponse)},
  { 47, -1, sizeof(::szconfigmanager::ReplaceDefaultConfigIdRequest)},
  { 54, -1, sizeof(::szconfigmanager::ReplaceDefaultConfigIdResponse)},
  { 59, -1, sizeof(::szconfigmanager::SetDefaultConfigIdRequest)},
  { 65, -1, sizeof(::szconfigmanager::SetDefaultConfigIdResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_AddConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_AddConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_GetConfigRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_GetConfigResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_GetConfigsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_GetConfigsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_GetDefaultConfigIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_GetDefaultConfigIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_ReplaceDefaultConfigIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_ReplaceDefaultConfigIdResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_SetDefaultConfigIdRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::szconfigmanager::_SetDefaultConfigIdResponse_default_instance_),
};

const char descriptor_table_protodef_szconfigmanager_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025szconfigmanager.proto\022\017szconfigmanager"
  "\"C\n\020AddConfigRequest\022\030\n\020configDefinition"
  "\030\001 \001(\t\022\025\n\rconfigComment\030\002 \001(\t\"#\n\021AddConf"
  "igResponse\022\016\n\006result\030\001 \001(\003\"$\n\020GetConfigR"
  "equest\022\020\n\010configId\030\001 \001(\003\"#\n\021GetConfigRes"
  "ponse\022\016\n\006result\030\001 \001(\t\"\023\n\021GetConfigsReque"
  "st\"$\n\022GetConfigsResponse\022\016\n\006result\030\001 \001(\t"
  "\"\033\n\031GetDefaultConfigIdRequest\",\n\032GetDefa"
  "ultConfigIdResponse\022\016\n\006result\030\001 \001(\003\"[\n\035R"
  "eplaceDefaultConfigIdRequest\022\036\n\026currentD"
  "efaultConfigId\030\001 \001(\003\022\032\n\022newDefaultConfig"
  "Id\030\002 \001(\003\" \n\036ReplaceDefaultConfigIdRespon"
  "se\"-\n\031SetDefaultConfigIdRequest\022\020\n\010confi"
  "gId\030\001 \001(\003\"\034\n\032SetDefaultConfigIdResponse2"
  "\365\004\n\017SzConfigManager\022T\n\tAddConfig\022!.szcon"
  "figmanager.AddConfigRequest\032\".szconfigma"
  "nager.AddConfigResponse\"\000\022T\n\tGetConfig\022!"
  ".szconfigmanager.GetConfigRequest\032\".szco"
  "nfigmanager.GetConfigResponse\"\000\022W\n\nGetCo"
  "nfigs\022\".szconfigmanager.GetConfigsReques"
  "t\032#.szconfigmanager.GetConfigsResponse\"\000"
  "\022o\n\022GetDefaultConfigId\022*.szconfigmanager"
  ".GetDefaultConfigIdRequest\032+.szconfigman"
  "ager.GetDefaultConfigIdResponse\"\000\022{\n\026Rep"
  "laceDefaultConfigId\022..szconfigmanager.Re"
  "placeDefaultConfigIdRequest\032/.szconfigma"
  "nager.ReplaceDefaultConfigIdResponse\"\000\022o"
  "\n\022SetDefaultConfigId\022*.szconfigmanager.S"
  "etDefaultConfigIdRequest\032+.szconfigmanag"
  "er.SetDefaultConfigIdResponse\"\000B|\n*com.s"
  "enzing.sz.engine.grpc.SzConfigManagerB\024S"
  "zConfigManagerProtoZ8github.com/senzing-"
  "garage/sz-sdk-go-grpc/szconfigmanagerb\006p"
  "roto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_szconfigmanager_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_szconfigmanager_2eproto_sccs[12] = {
  &scc_info_AddConfigRequest_szconfigmanager_2eproto.base,
  &scc_info_AddConfigResponse_szconfigmanager_2eproto.base,
  &scc_info_GetConfigRequest_szconfigmanager_2eproto.base,
  &scc_info_GetConfigResponse_szconfigmanager_2eproto.base,
  &scc_info_GetConfigsRequest_szconfigmanager_2eproto.base,
  &scc_info_GetConfigsResponse_szconfigmanager_2eproto.base,
  &scc_info_GetDefaultConfigIdRequest_szconfigmanager_2eproto.base,
  &scc_info_GetDefaultConfigIdResponse_szconfigmanager_2eproto.base,
  &scc_info_ReplaceDefaultConfigIdRequest_szconfigmanager_2eproto.base,
  &scc_info_ReplaceDefaultConfigIdResponse_szconfigmanager_2eproto.base,
  &scc_info_SetDefaultConfigIdRequest_szconfigmanager_2eproto.base,
  &scc_info_SetDefaultConfigIdResponse_szconfigmanager_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_szconfigmanager_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_szconfigmanager_2eproto = {
  false, false, descriptor_table_protodef_szconfigmanager_2eproto, "szconfigmanager.proto", 1325,
  &descriptor_table_szconfigmanager_2eproto_once, descriptor_table_szconfigmanager_2eproto_sccs, descriptor_table_szconfigmanager_2eproto_deps, 12, 0,
  schemas, file_default_instances, TableStruct_szconfigmanager_2eproto::offsets,
  file_level_metadata_szconfigmanager_2eproto, 12, file_level_enum_descriptors_szconfigmanager_2eproto, file_level_service_descriptors_szconfigmanager_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_szconfigmanager_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_szconfigmanager_2eproto)), true);
namespace szconfigmanager {

// ===================================================================

void AddConfigRequest::InitAsDefaultInstance() {
}
class AddConfigRequest::_Internal {
 public:
};

AddConfigRequest::AddConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.AddConfigRequest)
}
AddConfigRequest::AddConfigRequest(const AddConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configdefinition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_configdefinition().empty()) {
    configdefinition_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_configdefinition(),
      GetArena());
  }
  configcomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_configcomment().empty()) {
    configcomment_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_configcomment(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.AddConfigRequest)
}

void AddConfigRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddConfigRequest_szconfigmanager_2eproto.base);
  configdefinition_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  configcomment_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AddConfigRequest::~AddConfigRequest() {
  // @@protoc_insertion_point(destructor:szconfigmanager.AddConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  configdefinition_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  configcomment_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddConfigRequest::ArenaDtor(void* object) {
  AddConfigRequest* _this = reinterpret_cast< AddConfigRequest* >(object);
  (void)_this;
}
void AddConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddConfigRequest& AddConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddConfigRequest_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void AddConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.AddConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configdefinition_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  configcomment_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string configDefinition = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_configdefinition();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szconfigmanager.AddConfigRequest.configDefinition"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string configComment = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_configcomment();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szconfigmanager.AddConfigRequest.configComment"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.AddConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string configDefinition = 1;
  if (this->configdefinition().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_configdefinition().data(), static_cast<int>(this->_internal_configdefinition().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfigmanager.AddConfigRequest.configDefinition");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_configdefinition(), target);
  }

  // string configComment = 2;
  if (this->configcomment().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_configcomment().data(), static_cast<int>(this->_internal_configcomment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfigmanager.AddConfigRequest.configComment");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_configcomment(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.AddConfigRequest)
  return target;
}

size_t AddConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.AddConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string configDefinition = 1;
  if (this->configdefinition().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_configdefinition());
  }

  // string configComment = 2;
  if (this->configcomment().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_configcomment());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.AddConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const AddConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.AddConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.AddConfigRequest)
    MergeFrom(*source);
  }
}

void AddConfigRequest::MergeFrom(const AddConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.AddConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.configdefinition().size() > 0) {
    _internal_set_configdefinition(from._internal_configdefinition());
  }
  if (from.configcomment().size() > 0) {
    _internal_set_configcomment(from._internal_configcomment());
  }
}

void AddConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.AddConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddConfigRequest::CopyFrom(const AddConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.AddConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddConfigRequest::IsInitialized() const {
  return true;
}

void AddConfigRequest::InternalSwap(AddConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  configdefinition_.Swap(&other->configdefinition_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  configcomment_.Swap(&other->configcomment_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AddConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddConfigResponse::InitAsDefaultInstance() {
}
class AddConfigResponse::_Internal {
 public:
};

AddConfigResponse::AddConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.AddConfigResponse)
}
AddConfigResponse::AddConfigResponse(const AddConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.AddConfigResponse)
}

void AddConfigResponse::SharedCtor() {
  result_ = PROTOBUF_LONGLONG(0);
}

AddConfigResponse::~AddConfigResponse() {
  // @@protoc_insertion_point(destructor:szconfigmanager.AddConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddConfigResponse::ArenaDtor(void* object) {
  AddConfigResponse* _this = reinterpret_cast< AddConfigResponse* >(object);
  (void)_this;
}
void AddConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddConfigResponse& AddConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddConfigResponse_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void AddConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.AddConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.AddConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.AddConfigResponse)
  return target;
}

size_t AddConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.AddConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.AddConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const AddConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.AddConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.AddConfigResponse)
    MergeFrom(*source);
  }
}

void AddConfigResponse::MergeFrom(const AddConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.AddConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void AddConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.AddConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddConfigResponse::CopyFrom(const AddConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.AddConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddConfigResponse::IsInitialized() const {
  return true;
}

void AddConfigResponse::InternalSwap(AddConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConfigRequest::InitAsDefaultInstance() {
}
class GetConfigRequest::_Internal {
 public:
};

GetConfigRequest::GetConfigRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.GetConfigRequest)
}
GetConfigRequest::GetConfigRequest(const GetConfigRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configid_ = from.configid_;
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.GetConfigRequest)
}

void GetConfigRequest::SharedCtor() {
  configid_ = PROTOBUF_LONGLONG(0);
}

GetConfigRequest::~GetConfigRequest() {
  // @@protoc_insertion_point(destructor:szconfigmanager.GetConfigRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConfigRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetConfigRequest::ArenaDtor(void* object) {
  GetConfigRequest* _this = reinterpret_cast< GetConfigRequest* >(object);
  (void)_this;
}
void GetConfigRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConfigRequest& GetConfigRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConfigRequest_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void GetConfigRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.GetConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 configId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          configid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConfigRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.GetConfigRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_configid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.GetConfigRequest)
  return target;
}

size_t GetConfigRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.GetConfigRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_configid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConfigRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.GetConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConfigRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.GetConfigRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.GetConfigRequest)
    MergeFrom(*source);
  }
}

void GetConfigRequest::MergeFrom(const GetConfigRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.GetConfigRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.configid() != 0) {
    _internal_set_configid(from._internal_configid());
  }
}

void GetConfigRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.GetConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigRequest::CopyFrom(const GetConfigRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.GetConfigRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigRequest::IsInitialized() const {
  return true;
}

void GetConfigRequest::InternalSwap(GetConfigRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(configid_, other->configid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConfigResponse::InitAsDefaultInstance() {
}
class GetConfigResponse::_Internal {
 public:
};

GetConfigResponse::GetConfigResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.GetConfigResponse)
}
GetConfigResponse::GetConfigResponse(const GetConfigResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.GetConfigResponse)
}

void GetConfigResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetConfigResponse_szconfigmanager_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetConfigResponse::~GetConfigResponse() {
  // @@protoc_insertion_point(destructor:szconfigmanager.GetConfigResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConfigResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConfigResponse::ArenaDtor(void* object) {
  GetConfigResponse* _this = reinterpret_cast< GetConfigResponse* >(object);
  (void)_this;
}
void GetConfigResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConfigResponse& GetConfigResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConfigResponse_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void GetConfigResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.GetConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szconfigmanager.GetConfigResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConfigResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.GetConfigResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfigmanager.GetConfigResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.GetConfigResponse)
  return target;
}

size_t GetConfigResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.GetConfigResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConfigResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.GetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConfigResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.GetConfigResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.GetConfigResponse)
    MergeFrom(*source);
  }
}

void GetConfigResponse::MergeFrom(const GetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.GetConfigResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetConfigResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.GetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigResponse::CopyFrom(const GetConfigResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.GetConfigResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigResponse::IsInitialized() const {
  return true;
}

void GetConfigResponse::InternalSwap(GetConfigResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConfigsRequest::InitAsDefaultInstance() {
}
class GetConfigsRequest::_Internal {
 public:
};

GetConfigsRequest::GetConfigsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.GetConfigsRequest)
}
GetConfigsRequest::GetConfigsRequest(const GetConfigsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.GetConfigsRequest)
}

void GetConfigsRequest::SharedCtor() {
}

GetConfigsRequest::~GetConfigsRequest() {
  // @@protoc_insertion_point(destructor:szconfigmanager.GetConfigsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConfigsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetConfigsRequest::ArenaDtor(void* object) {
  GetConfigsRequest* _this = reinterpret_cast< GetConfigsRequest* >(object);
  (void)_this;
}
void GetConfigsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConfigsRequest& GetConfigsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConfigsRequest_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void GetConfigsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.GetConfigsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConfigsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.GetConfigsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.GetConfigsRequest)
  return target;
}

size_t GetConfigsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.GetConfigsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConfigsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.GetConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConfigsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.GetConfigsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.GetConfigsRequest)
    MergeFrom(*source);
  }
}

void GetConfigsRequest::MergeFrom(const GetConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.GetConfigsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetConfigsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.GetConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigsRequest::CopyFrom(const GetConfigsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.GetConfigsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigsRequest::IsInitialized() const {
  return true;
}

void GetConfigsRequest::InternalSwap(GetConfigsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetConfigsResponse::InitAsDefaultInstance() {
}
class GetConfigsResponse::_Internal {
 public:
};

GetConfigsResponse::GetConfigsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.GetConfigsResponse)
}
GetConfigsResponse::GetConfigsResponse(const GetConfigsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_result().empty()) {
    result_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_result(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.GetConfigsResponse)
}

void GetConfigsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetConfigsResponse_szconfigmanager_2eproto.base);
  result_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetConfigsResponse::~GetConfigsResponse() {
  // @@protoc_insertion_point(destructor:szconfigmanager.GetConfigsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetConfigsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  result_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetConfigsResponse::ArenaDtor(void* object) {
  GetConfigsResponse* _this = reinterpret_cast< GetConfigsResponse* >(object);
  (void)_this;
}
void GetConfigsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetConfigsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetConfigsResponse& GetConfigsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetConfigsResponse_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void GetConfigsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.GetConfigsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetConfigsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_result();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "szconfigmanager.GetConfigsResponse.result"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetConfigsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.GetConfigsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_result().data(), static_cast<int>(this->_internal_result().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "szconfigmanager.GetConfigsResponse.result");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.GetConfigsResponse)
  return target;
}

size_t GetConfigsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.GetConfigsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string result = 1;
  if (this->result().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetConfigsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.GetConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetConfigsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetConfigsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.GetConfigsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.GetConfigsResponse)
    MergeFrom(*source);
  }
}

void GetConfigsResponse::MergeFrom(const GetConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.GetConfigsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result().size() > 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetConfigsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.GetConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetConfigsResponse::CopyFrom(const GetConfigsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.GetConfigsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetConfigsResponse::IsInitialized() const {
  return true;
}

void GetConfigsResponse::InternalSwap(GetConfigsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  result_.Swap(&other->result_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetConfigsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDefaultConfigIdRequest::InitAsDefaultInstance() {
}
class GetDefaultConfigIdRequest::_Internal {
 public:
};

GetDefaultConfigIdRequest::GetDefaultConfigIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.GetDefaultConfigIdRequest)
}
GetDefaultConfigIdRequest::GetDefaultConfigIdRequest(const GetDefaultConfigIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.GetDefaultConfigIdRequest)
}

void GetDefaultConfigIdRequest::SharedCtor() {
}

GetDefaultConfigIdRequest::~GetDefaultConfigIdRequest() {
  // @@protoc_insertion_point(destructor:szconfigmanager.GetDefaultConfigIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDefaultConfigIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetDefaultConfigIdRequest::ArenaDtor(void* object) {
  GetDefaultConfigIdRequest* _this = reinterpret_cast< GetDefaultConfigIdRequest* >(object);
  (void)_this;
}
void GetDefaultConfigIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDefaultConfigIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDefaultConfigIdRequest& GetDefaultConfigIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDefaultConfigIdRequest_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void GetDefaultConfigIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.GetDefaultConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDefaultConfigIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDefaultConfigIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.GetDefaultConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.GetDefaultConfigIdRequest)
  return target;
}

size_t GetDefaultConfigIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.GetDefaultConfigIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDefaultConfigIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.GetDefaultConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDefaultConfigIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDefaultConfigIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.GetDefaultConfigIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.GetDefaultConfigIdRequest)
    MergeFrom(*source);
  }
}

void GetDefaultConfigIdRequest::MergeFrom(const GetDefaultConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.GetDefaultConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetDefaultConfigIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.GetDefaultConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDefaultConfigIdRequest::CopyFrom(const GetDefaultConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.GetDefaultConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDefaultConfigIdRequest::IsInitialized() const {
  return true;
}

void GetDefaultConfigIdRequest::InternalSwap(GetDefaultConfigIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDefaultConfigIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetDefaultConfigIdResponse::InitAsDefaultInstance() {
}
class GetDefaultConfigIdResponse::_Internal {
 public:
};

GetDefaultConfigIdResponse::GetDefaultConfigIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.GetDefaultConfigIdResponse)
}
GetDefaultConfigIdResponse::GetDefaultConfigIdResponse(const GetDefaultConfigIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.GetDefaultConfigIdResponse)
}

void GetDefaultConfigIdResponse::SharedCtor() {
  result_ = PROTOBUF_LONGLONG(0);
}

GetDefaultConfigIdResponse::~GetDefaultConfigIdResponse() {
  // @@protoc_insertion_point(destructor:szconfigmanager.GetDefaultConfigIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetDefaultConfigIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetDefaultConfigIdResponse::ArenaDtor(void* object) {
  GetDefaultConfigIdResponse* _this = reinterpret_cast< GetDefaultConfigIdResponse* >(object);
  (void)_this;
}
void GetDefaultConfigIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetDefaultConfigIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetDefaultConfigIdResponse& GetDefaultConfigIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetDefaultConfigIdResponse_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void GetDefaultConfigIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.GetDefaultConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  result_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDefaultConfigIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          result_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetDefaultConfigIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.GetDefaultConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_result(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.GetDefaultConfigIdResponse)
  return target;
}

size_t GetDefaultConfigIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.GetDefaultConfigIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_result());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetDefaultConfigIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.GetDefaultConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetDefaultConfigIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetDefaultConfigIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.GetDefaultConfigIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.GetDefaultConfigIdResponse)
    MergeFrom(*source);
  }
}

void GetDefaultConfigIdResponse::MergeFrom(const GetDefaultConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.GetDefaultConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.result() != 0) {
    _internal_set_result(from._internal_result());
  }
}

void GetDefaultConfigIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.GetDefaultConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetDefaultConfigIdResponse::CopyFrom(const GetDefaultConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.GetDefaultConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDefaultConfigIdResponse::IsInitialized() const {
  return true;
}

void GetDefaultConfigIdResponse::InternalSwap(GetDefaultConfigIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(result_, other->result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDefaultConfigIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReplaceDefaultConfigIdRequest::InitAsDefaultInstance() {
}
class ReplaceDefaultConfigIdRequest::_Internal {
 public:
};

ReplaceDefaultConfigIdRequest::ReplaceDefaultConfigIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.ReplaceDefaultConfigIdRequest)
}
ReplaceDefaultConfigIdRequest::ReplaceDefaultConfigIdRequest(const ReplaceDefaultConfigIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&currentdefaultconfigid_, &from.currentdefaultconfigid_,
    static_cast<size_t>(reinterpret_cast<char*>(&newdefaultconfigid_) -
    reinterpret_cast<char*>(&currentdefaultconfigid_)) + sizeof(newdefaultconfigid_));
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.ReplaceDefaultConfigIdRequest)
}

void ReplaceDefaultConfigIdRequest::SharedCtor() {
  ::memset(&currentdefaultconfigid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newdefaultconfigid_) -
      reinterpret_cast<char*>(&currentdefaultconfigid_)) + sizeof(newdefaultconfigid_));
}

ReplaceDefaultConfigIdRequest::~ReplaceDefaultConfigIdRequest() {
  // @@protoc_insertion_point(destructor:szconfigmanager.ReplaceDefaultConfigIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceDefaultConfigIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReplaceDefaultConfigIdRequest::ArenaDtor(void* object) {
  ReplaceDefaultConfigIdRequest* _this = reinterpret_cast< ReplaceDefaultConfigIdRequest* >(object);
  (void)_this;
}
void ReplaceDefaultConfigIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceDefaultConfigIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReplaceDefaultConfigIdRequest& ReplaceDefaultConfigIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReplaceDefaultConfigIdRequest_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void ReplaceDefaultConfigIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&currentdefaultconfigid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&newdefaultconfigid_) -
      reinterpret_cast<char*>(&currentdefaultconfigid_)) + sizeof(newdefaultconfigid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceDefaultConfigIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 currentDefaultConfigId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          currentdefaultconfigid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 newDefaultConfigId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          newdefaultconfigid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceDefaultConfigIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 currentDefaultConfigId = 1;
  if (this->currentdefaultconfigid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_currentdefaultconfigid(), target);
  }

  // int64 newDefaultConfigId = 2;
  if (this->newdefaultconfigid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_newdefaultconfigid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.ReplaceDefaultConfigIdRequest)
  return target;
}

size_t ReplaceDefaultConfigIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 currentDefaultConfigId = 1;
  if (this->currentdefaultconfigid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_currentdefaultconfigid());
  }

  // int64 newDefaultConfigId = 2;
  if (this->newdefaultconfigid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_newdefaultconfigid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceDefaultConfigIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceDefaultConfigIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceDefaultConfigIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.ReplaceDefaultConfigIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.ReplaceDefaultConfigIdRequest)
    MergeFrom(*source);
  }
}

void ReplaceDefaultConfigIdRequest::MergeFrom(const ReplaceDefaultConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.currentdefaultconfigid() != 0) {
    _internal_set_currentdefaultconfigid(from._internal_currentdefaultconfigid());
  }
  if (from.newdefaultconfigid() != 0) {
    _internal_set_newdefaultconfigid(from._internal_newdefaultconfigid());
  }
}

void ReplaceDefaultConfigIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceDefaultConfigIdRequest::CopyFrom(const ReplaceDefaultConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.ReplaceDefaultConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceDefaultConfigIdRequest::IsInitialized() const {
  return true;
}

void ReplaceDefaultConfigIdRequest::InternalSwap(ReplaceDefaultConfigIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ReplaceDefaultConfigIdRequest, newdefaultconfigid_)
      + sizeof(ReplaceDefaultConfigIdRequest::newdefaultconfigid_)
      - PROTOBUF_FIELD_OFFSET(ReplaceDefaultConfigIdRequest, currentdefaultconfigid_)>(
          reinterpret_cast<char*>(&currentdefaultconfigid_),
          reinterpret_cast<char*>(&other->currentdefaultconfigid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceDefaultConfigIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ReplaceDefaultConfigIdResponse::InitAsDefaultInstance() {
}
class ReplaceDefaultConfigIdResponse::_Internal {
 public:
};

ReplaceDefaultConfigIdResponse::ReplaceDefaultConfigIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.ReplaceDefaultConfigIdResponse)
}
ReplaceDefaultConfigIdResponse::ReplaceDefaultConfigIdResponse(const ReplaceDefaultConfigIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.ReplaceDefaultConfigIdResponse)
}

void ReplaceDefaultConfigIdResponse::SharedCtor() {
}

ReplaceDefaultConfigIdResponse::~ReplaceDefaultConfigIdResponse() {
  // @@protoc_insertion_point(destructor:szconfigmanager.ReplaceDefaultConfigIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ReplaceDefaultConfigIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ReplaceDefaultConfigIdResponse::ArenaDtor(void* object) {
  ReplaceDefaultConfigIdResponse* _this = reinterpret_cast< ReplaceDefaultConfigIdResponse* >(object);
  (void)_this;
}
void ReplaceDefaultConfigIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ReplaceDefaultConfigIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ReplaceDefaultConfigIdResponse& ReplaceDefaultConfigIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ReplaceDefaultConfigIdResponse_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void ReplaceDefaultConfigIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ReplaceDefaultConfigIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ReplaceDefaultConfigIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.ReplaceDefaultConfigIdResponse)
  return target;
}

size_t ReplaceDefaultConfigIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ReplaceDefaultConfigIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const ReplaceDefaultConfigIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ReplaceDefaultConfigIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.ReplaceDefaultConfigIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.ReplaceDefaultConfigIdResponse)
    MergeFrom(*source);
  }
}

void ReplaceDefaultConfigIdResponse::MergeFrom(const ReplaceDefaultConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void ReplaceDefaultConfigIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ReplaceDefaultConfigIdResponse::CopyFrom(const ReplaceDefaultConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.ReplaceDefaultConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ReplaceDefaultConfigIdResponse::IsInitialized() const {
  return true;
}

void ReplaceDefaultConfigIdResponse::InternalSwap(ReplaceDefaultConfigIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ReplaceDefaultConfigIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetDefaultConfigIdRequest::InitAsDefaultInstance() {
}
class SetDefaultConfigIdRequest::_Internal {
 public:
};

SetDefaultConfigIdRequest::SetDefaultConfigIdRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.SetDefaultConfigIdRequest)
}
SetDefaultConfigIdRequest::SetDefaultConfigIdRequest(const SetDefaultConfigIdRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  configid_ = from.configid_;
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.SetDefaultConfigIdRequest)
}

void SetDefaultConfigIdRequest::SharedCtor() {
  configid_ = PROTOBUF_LONGLONG(0);
}

SetDefaultConfigIdRequest::~SetDefaultConfigIdRequest() {
  // @@protoc_insertion_point(destructor:szconfigmanager.SetDefaultConfigIdRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetDefaultConfigIdRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetDefaultConfigIdRequest::ArenaDtor(void* object) {
  SetDefaultConfigIdRequest* _this = reinterpret_cast< SetDefaultConfigIdRequest* >(object);
  (void)_this;
}
void SetDefaultConfigIdRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetDefaultConfigIdRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetDefaultConfigIdRequest& SetDefaultConfigIdRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetDefaultConfigIdRequest_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void SetDefaultConfigIdRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.SetDefaultConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  configid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetDefaultConfigIdRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 configId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          configid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetDefaultConfigIdRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.SetDefaultConfigIdRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_configid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.SetDefaultConfigIdRequest)
  return target;
}

size_t SetDefaultConfigIdRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.SetDefaultConfigIdRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 configId = 1;
  if (this->configid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_configid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDefaultConfigIdRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.SetDefaultConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDefaultConfigIdRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetDefaultConfigIdRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.SetDefaultConfigIdRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.SetDefaultConfigIdRequest)
    MergeFrom(*source);
  }
}

void SetDefaultConfigIdRequest::MergeFrom(const SetDefaultConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.SetDefaultConfigIdRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.configid() != 0) {
    _internal_set_configid(from._internal_configid());
  }
}

void SetDefaultConfigIdRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.SetDefaultConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDefaultConfigIdRequest::CopyFrom(const SetDefaultConfigIdRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.SetDefaultConfigIdRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDefaultConfigIdRequest::IsInitialized() const {
  return true;
}

void SetDefaultConfigIdRequest::InternalSwap(SetDefaultConfigIdRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(configid_, other->configid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetDefaultConfigIdRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SetDefaultConfigIdResponse::InitAsDefaultInstance() {
}
class SetDefaultConfigIdResponse::_Internal {
 public:
};

SetDefaultConfigIdResponse::SetDefaultConfigIdResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:szconfigmanager.SetDefaultConfigIdResponse)
}
SetDefaultConfigIdResponse::SetDefaultConfigIdResponse(const SetDefaultConfigIdResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:szconfigmanager.SetDefaultConfigIdResponse)
}

void SetDefaultConfigIdResponse::SharedCtor() {
}

SetDefaultConfigIdResponse::~SetDefaultConfigIdResponse() {
  // @@protoc_insertion_point(destructor:szconfigmanager.SetDefaultConfigIdResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SetDefaultConfigIdResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void SetDefaultConfigIdResponse::ArenaDtor(void* object) {
  SetDefaultConfigIdResponse* _this = reinterpret_cast< SetDefaultConfigIdResponse* >(object);
  (void)_this;
}
void SetDefaultConfigIdResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SetDefaultConfigIdResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SetDefaultConfigIdResponse& SetDefaultConfigIdResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SetDefaultConfigIdResponse_szconfigmanager_2eproto.base);
  return *internal_default_instance();
}


void SetDefaultConfigIdResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:szconfigmanager.SetDefaultConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SetDefaultConfigIdResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SetDefaultConfigIdResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:szconfigmanager.SetDefaultConfigIdResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:szconfigmanager.SetDefaultConfigIdResponse)
  return target;
}

size_t SetDefaultConfigIdResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:szconfigmanager.SetDefaultConfigIdResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SetDefaultConfigIdResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:szconfigmanager.SetDefaultConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const SetDefaultConfigIdResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SetDefaultConfigIdResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:szconfigmanager.SetDefaultConfigIdResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:szconfigmanager.SetDefaultConfigIdResponse)
    MergeFrom(*source);
  }
}

void SetDefaultConfigIdResponse::MergeFrom(const SetDefaultConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:szconfigmanager.SetDefaultConfigIdResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void SetDefaultConfigIdResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:szconfigmanager.SetDefaultConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SetDefaultConfigIdResponse::CopyFrom(const SetDefaultConfigIdResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:szconfigmanager.SetDefaultConfigIdResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SetDefaultConfigIdResponse::IsInitialized() const {
  return true;
}

void SetDefaultConfigIdResponse::InternalSwap(SetDefaultConfigIdResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SetDefaultConfigIdResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace szconfigmanager
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::szconfigmanager::AddConfigRequest* Arena::CreateMaybeMessage< ::szconfigmanager::AddConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::AddConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::AddConfigResponse* Arena::CreateMaybeMessage< ::szconfigmanager::AddConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::AddConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::GetConfigRequest* Arena::CreateMaybeMessage< ::szconfigmanager::GetConfigRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::GetConfigRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::GetConfigResponse* Arena::CreateMaybeMessage< ::szconfigmanager::GetConfigResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::GetConfigResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::GetConfigsRequest* Arena::CreateMaybeMessage< ::szconfigmanager::GetConfigsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::GetConfigsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::GetConfigsResponse* Arena::CreateMaybeMessage< ::szconfigmanager::GetConfigsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::GetConfigsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::GetDefaultConfigIdRequest* Arena::CreateMaybeMessage< ::szconfigmanager::GetDefaultConfigIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::GetDefaultConfigIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::GetDefaultConfigIdResponse* Arena::CreateMaybeMessage< ::szconfigmanager::GetDefaultConfigIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::GetDefaultConfigIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::ReplaceDefaultConfigIdRequest* Arena::CreateMaybeMessage< ::szconfigmanager::ReplaceDefaultConfigIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::ReplaceDefaultConfigIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::ReplaceDefaultConfigIdResponse* Arena::CreateMaybeMessage< ::szconfigmanager::ReplaceDefaultConfigIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::ReplaceDefaultConfigIdResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::SetDefaultConfigIdRequest* Arena::CreateMaybeMessage< ::szconfigmanager::SetDefaultConfigIdRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::SetDefaultConfigIdRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::szconfigmanager::SetDefaultConfigIdResponse* Arena::CreateMaybeMessage< ::szconfigmanager::SetDefaultConfigIdResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::szconfigmanager::SetDefaultConfigIdResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
