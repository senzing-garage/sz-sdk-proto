// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: szconfigmanager.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_szconfigmanager_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_szconfigmanager_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_szconfigmanager_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_szconfigmanager_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_szconfigmanager_2eproto;
namespace szconfigmanager {
class GetConfigRequest;
struct GetConfigRequestDefaultTypeInternal;
extern GetConfigRequestDefaultTypeInternal _GetConfigRequest_default_instance_;
class GetConfigResponse;
struct GetConfigResponseDefaultTypeInternal;
extern GetConfigResponseDefaultTypeInternal _GetConfigResponse_default_instance_;
class GetConfigsRequest;
struct GetConfigsRequestDefaultTypeInternal;
extern GetConfigsRequestDefaultTypeInternal _GetConfigsRequest_default_instance_;
class GetConfigsResponse;
struct GetConfigsResponseDefaultTypeInternal;
extern GetConfigsResponseDefaultTypeInternal _GetConfigsResponse_default_instance_;
class GetDefaultConfigIdRequest;
struct GetDefaultConfigIdRequestDefaultTypeInternal;
extern GetDefaultConfigIdRequestDefaultTypeInternal _GetDefaultConfigIdRequest_default_instance_;
class GetDefaultConfigIdResponse;
struct GetDefaultConfigIdResponseDefaultTypeInternal;
extern GetDefaultConfigIdResponseDefaultTypeInternal _GetDefaultConfigIdResponse_default_instance_;
class GetTemplateConfigRequest;
struct GetTemplateConfigRequestDefaultTypeInternal;
extern GetTemplateConfigRequestDefaultTypeInternal _GetTemplateConfigRequest_default_instance_;
class GetTemplateConfigResponse;
struct GetTemplateConfigResponseDefaultTypeInternal;
extern GetTemplateConfigResponseDefaultTypeInternal _GetTemplateConfigResponse_default_instance_;
class RegisterConfigRequest;
struct RegisterConfigRequestDefaultTypeInternal;
extern RegisterConfigRequestDefaultTypeInternal _RegisterConfigRequest_default_instance_;
class RegisterConfigResponse;
struct RegisterConfigResponseDefaultTypeInternal;
extern RegisterConfigResponseDefaultTypeInternal _RegisterConfigResponse_default_instance_;
class ReplaceDefaultConfigIdRequest;
struct ReplaceDefaultConfigIdRequestDefaultTypeInternal;
extern ReplaceDefaultConfigIdRequestDefaultTypeInternal _ReplaceDefaultConfigIdRequest_default_instance_;
class ReplaceDefaultConfigIdResponse;
struct ReplaceDefaultConfigIdResponseDefaultTypeInternal;
extern ReplaceDefaultConfigIdResponseDefaultTypeInternal _ReplaceDefaultConfigIdResponse_default_instance_;
class SetDefaultConfigIdRequest;
struct SetDefaultConfigIdRequestDefaultTypeInternal;
extern SetDefaultConfigIdRequestDefaultTypeInternal _SetDefaultConfigIdRequest_default_instance_;
class SetDefaultConfigIdResponse;
struct SetDefaultConfigIdResponseDefaultTypeInternal;
extern SetDefaultConfigIdResponseDefaultTypeInternal _SetDefaultConfigIdResponse_default_instance_;
class SetDefaultConfigRequest;
struct SetDefaultConfigRequestDefaultTypeInternal;
extern SetDefaultConfigRequestDefaultTypeInternal _SetDefaultConfigRequest_default_instance_;
class SetDefaultConfigResponse;
struct SetDefaultConfigResponseDefaultTypeInternal;
extern SetDefaultConfigResponseDefaultTypeInternal _SetDefaultConfigResponse_default_instance_;
}  // namespace szconfigmanager
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace szconfigmanager {

// ===================================================================


// -------------------------------------------------------------------

class SetDefaultConfigResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.SetDefaultConfigResponse) */ {
 public:
  inline SetDefaultConfigResponse() : SetDefaultConfigResponse(nullptr) {}
  ~SetDefaultConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDefaultConfigResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetDefaultConfigResponse(const SetDefaultConfigResponse& from)
      : SetDefaultConfigResponse(nullptr, from) {}
  SetDefaultConfigResponse(SetDefaultConfigResponse&& from) noexcept
    : SetDefaultConfigResponse() {
    *this = ::std::move(from);
  }

  inline SetDefaultConfigResponse& operator=(const SetDefaultConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDefaultConfigResponse& operator=(SetDefaultConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDefaultConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDefaultConfigResponse* internal_default_instance() {
    return reinterpret_cast<const SetDefaultConfigResponse*>(
               &_SetDefaultConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  friend void swap(SetDefaultConfigResponse& a, SetDefaultConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDefaultConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDefaultConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDefaultConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDefaultConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetDefaultConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetDefaultConfigResponse& from) {
    SetDefaultConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetDefaultConfigResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.SetDefaultConfigResponse";
  }
  protected:
  explicit SetDefaultConfigResponse(::google::protobuf::Arena* arena);
  SetDefaultConfigResponse(::google::protobuf::Arena* arena, const SetDefaultConfigResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.SetDefaultConfigResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class SetDefaultConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.SetDefaultConfigRequest) */ {
 public:
  inline SetDefaultConfigRequest() : SetDefaultConfigRequest(nullptr) {}
  ~SetDefaultConfigRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDefaultConfigRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetDefaultConfigRequest(const SetDefaultConfigRequest& from)
      : SetDefaultConfigRequest(nullptr, from) {}
  SetDefaultConfigRequest(SetDefaultConfigRequest&& from) noexcept
    : SetDefaultConfigRequest() {
    *this = ::std::move(from);
  }

  inline SetDefaultConfigRequest& operator=(const SetDefaultConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDefaultConfigRequest& operator=(SetDefaultConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDefaultConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDefaultConfigRequest* internal_default_instance() {
    return reinterpret_cast<const SetDefaultConfigRequest*>(
               &_SetDefaultConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(SetDefaultConfigRequest& a, SetDefaultConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDefaultConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDefaultConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDefaultConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDefaultConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetDefaultConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetDefaultConfigRequest& from) {
    SetDefaultConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetDefaultConfigRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.SetDefaultConfigRequest";
  }
  protected:
  explicit SetDefaultConfigRequest(::google::protobuf::Arena* arena);
  SetDefaultConfigRequest(::google::protobuf::Arena* arena, const SetDefaultConfigRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigDefinitionFieldNumber = 1,
    kConfigCommentFieldNumber = 2,
  };
  // string config_definition = 1;
  void clear_config_definition() ;
  const std::string& config_definition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config_definition(Arg_&& arg, Args_... args);
  std::string* mutable_config_definition();
  PROTOBUF_NODISCARD std::string* release_config_definition();
  void set_allocated_config_definition(std::string* value);

  private:
  const std::string& _internal_config_definition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config_definition(
      const std::string& value);
  std::string* _internal_mutable_config_definition();

  public:
  // string config_comment = 2;
  void clear_config_comment() ;
  const std::string& config_comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config_comment(Arg_&& arg, Args_... args);
  std::string* mutable_config_comment();
  PROTOBUF_NODISCARD std::string* release_config_comment();
  void set_allocated_config_comment(std::string* value);

  private:
  const std::string& _internal_config_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config_comment(
      const std::string& value);
  std::string* _internal_mutable_config_comment();

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.SetDefaultConfigRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      79, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr config_definition_;
    ::google::protobuf::internal::ArenaStringPtr config_comment_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class SetDefaultConfigIdResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szconfigmanager.SetDefaultConfigIdResponse) */ {
 public:
  inline SetDefaultConfigIdResponse() : SetDefaultConfigIdResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDefaultConfigIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline SetDefaultConfigIdResponse(const SetDefaultConfigIdResponse& from)
      : SetDefaultConfigIdResponse(nullptr, from) {}
  SetDefaultConfigIdResponse(SetDefaultConfigIdResponse&& from) noexcept
    : SetDefaultConfigIdResponse() {
    *this = ::std::move(from);
  }

  inline SetDefaultConfigIdResponse& operator=(const SetDefaultConfigIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDefaultConfigIdResponse& operator=(SetDefaultConfigIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDefaultConfigIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDefaultConfigIdResponse* internal_default_instance() {
    return reinterpret_cast<const SetDefaultConfigIdResponse*>(
               &_SetDefaultConfigIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  friend void swap(SetDefaultConfigIdResponse& a, SetDefaultConfigIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDefaultConfigIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDefaultConfigIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDefaultConfigIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDefaultConfigIdResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const SetDefaultConfigIdResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const SetDefaultConfigIdResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.SetDefaultConfigIdResponse";
  }
  protected:
  explicit SetDefaultConfigIdResponse(::google::protobuf::Arena* arena);
  SetDefaultConfigIdResponse(::google::protobuf::Arena* arena, const SetDefaultConfigIdResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szconfigmanager.SetDefaultConfigIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class SetDefaultConfigIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.SetDefaultConfigIdRequest) */ {
 public:
  inline SetDefaultConfigIdRequest() : SetDefaultConfigIdRequest(nullptr) {}
  ~SetDefaultConfigIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR SetDefaultConfigIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline SetDefaultConfigIdRequest(const SetDefaultConfigIdRequest& from)
      : SetDefaultConfigIdRequest(nullptr, from) {}
  SetDefaultConfigIdRequest(SetDefaultConfigIdRequest&& from) noexcept
    : SetDefaultConfigIdRequest() {
    *this = ::std::move(from);
  }

  inline SetDefaultConfigIdRequest& operator=(const SetDefaultConfigIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SetDefaultConfigIdRequest& operator=(SetDefaultConfigIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SetDefaultConfigIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SetDefaultConfigIdRequest* internal_default_instance() {
    return reinterpret_cast<const SetDefaultConfigIdRequest*>(
               &_SetDefaultConfigIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  friend void swap(SetDefaultConfigIdRequest& a, SetDefaultConfigIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(SetDefaultConfigIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SetDefaultConfigIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SetDefaultConfigIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SetDefaultConfigIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SetDefaultConfigIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const SetDefaultConfigIdRequest& from) {
    SetDefaultConfigIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SetDefaultConfigIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.SetDefaultConfigIdRequest";
  }
  protected:
  explicit SetDefaultConfigIdRequest(::google::protobuf::Arena* arena);
  SetDefaultConfigIdRequest(::google::protobuf::Arena* arena, const SetDefaultConfigIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 1,
  };
  // int64 config_id = 1;
  void clear_config_id() ;
  ::int64_t config_id() const;
  void set_config_id(::int64_t value);

  private:
  ::int64_t _internal_config_id() const;
  void _internal_set_config_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.SetDefaultConfigIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t config_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class ReplaceDefaultConfigIdResponse final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szconfigmanager.ReplaceDefaultConfigIdResponse) */ {
 public:
  inline ReplaceDefaultConfigIdResponse() : ReplaceDefaultConfigIdResponse(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReplaceDefaultConfigIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline ReplaceDefaultConfigIdResponse(const ReplaceDefaultConfigIdResponse& from)
      : ReplaceDefaultConfigIdResponse(nullptr, from) {}
  ReplaceDefaultConfigIdResponse(ReplaceDefaultConfigIdResponse&& from) noexcept
    : ReplaceDefaultConfigIdResponse() {
    *this = ::std::move(from);
  }

  inline ReplaceDefaultConfigIdResponse& operator=(const ReplaceDefaultConfigIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplaceDefaultConfigIdResponse& operator=(ReplaceDefaultConfigIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplaceDefaultConfigIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplaceDefaultConfigIdResponse* internal_default_instance() {
    return reinterpret_cast<const ReplaceDefaultConfigIdResponse*>(
               &_ReplaceDefaultConfigIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(ReplaceDefaultConfigIdResponse& a, ReplaceDefaultConfigIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(ReplaceDefaultConfigIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplaceDefaultConfigIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplaceDefaultConfigIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReplaceDefaultConfigIdResponse>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ReplaceDefaultConfigIdResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ReplaceDefaultConfigIdResponse& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.ReplaceDefaultConfigIdResponse";
  }
  protected:
  explicit ReplaceDefaultConfigIdResponse(::google::protobuf::Arena* arena);
  ReplaceDefaultConfigIdResponse(::google::protobuf::Arena* arena, const ReplaceDefaultConfigIdResponse& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szconfigmanager.ReplaceDefaultConfigIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class ReplaceDefaultConfigIdRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.ReplaceDefaultConfigIdRequest) */ {
 public:
  inline ReplaceDefaultConfigIdRequest() : ReplaceDefaultConfigIdRequest(nullptr) {}
  ~ReplaceDefaultConfigIdRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ReplaceDefaultConfigIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline ReplaceDefaultConfigIdRequest(const ReplaceDefaultConfigIdRequest& from)
      : ReplaceDefaultConfigIdRequest(nullptr, from) {}
  ReplaceDefaultConfigIdRequest(ReplaceDefaultConfigIdRequest&& from) noexcept
    : ReplaceDefaultConfigIdRequest() {
    *this = ::std::move(from);
  }

  inline ReplaceDefaultConfigIdRequest& operator=(const ReplaceDefaultConfigIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ReplaceDefaultConfigIdRequest& operator=(ReplaceDefaultConfigIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ReplaceDefaultConfigIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const ReplaceDefaultConfigIdRequest* internal_default_instance() {
    return reinterpret_cast<const ReplaceDefaultConfigIdRequest*>(
               &_ReplaceDefaultConfigIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ReplaceDefaultConfigIdRequest& a, ReplaceDefaultConfigIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(ReplaceDefaultConfigIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ReplaceDefaultConfigIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ReplaceDefaultConfigIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ReplaceDefaultConfigIdRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ReplaceDefaultConfigIdRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ReplaceDefaultConfigIdRequest& from) {
    ReplaceDefaultConfigIdRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ReplaceDefaultConfigIdRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.ReplaceDefaultConfigIdRequest";
  }
  protected:
  explicit ReplaceDefaultConfigIdRequest(::google::protobuf::Arena* arena);
  ReplaceDefaultConfigIdRequest(::google::protobuf::Arena* arena, const ReplaceDefaultConfigIdRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kCurrentDefaultConfigIdFieldNumber = 1,
    kNewDefaultConfigIdFieldNumber = 2,
  };
  // int64 current_default_config_id = 1;
  void clear_current_default_config_id() ;
  ::int64_t current_default_config_id() const;
  void set_current_default_config_id(::int64_t value);

  private:
  ::int64_t _internal_current_default_config_id() const;
  void _internal_set_current_default_config_id(::int64_t value);

  public:
  // int64 new_default_config_id = 2;
  void clear_new_default_config_id() ;
  ::int64_t new_default_config_id() const;
  void set_new_default_config_id(::int64_t value);

  private:
  ::int64_t _internal_new_default_config_id() const;
  void _internal_set_new_default_config_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.ReplaceDefaultConfigIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t current_default_config_id_;
    ::int64_t new_default_config_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class RegisterConfigResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.RegisterConfigResponse) */ {
 public:
  inline RegisterConfigResponse() : RegisterConfigResponse(nullptr) {}
  ~RegisterConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterConfigResponse(::google::protobuf::internal::ConstantInitialized);

  inline RegisterConfigResponse(const RegisterConfigResponse& from)
      : RegisterConfigResponse(nullptr, from) {}
  RegisterConfigResponse(RegisterConfigResponse&& from) noexcept
    : RegisterConfigResponse() {
    *this = ::std::move(from);
  }

  inline RegisterConfigResponse& operator=(const RegisterConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterConfigResponse& operator=(RegisterConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterConfigResponse* internal_default_instance() {
    return reinterpret_cast<const RegisterConfigResponse*>(
               &_RegisterConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(RegisterConfigResponse& a, RegisterConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterConfigResponse& from) {
    RegisterConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterConfigResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.RegisterConfigResponse";
  }
  protected:
  explicit RegisterConfigResponse(::google::protobuf::Arena* arena);
  RegisterConfigResponse(::google::protobuf::Arena* arena, const RegisterConfigResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.RegisterConfigResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class RegisterConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.RegisterConfigRequest) */ {
 public:
  inline RegisterConfigRequest() : RegisterConfigRequest(nullptr) {}
  ~RegisterConfigRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR RegisterConfigRequest(::google::protobuf::internal::ConstantInitialized);

  inline RegisterConfigRequest(const RegisterConfigRequest& from)
      : RegisterConfigRequest(nullptr, from) {}
  RegisterConfigRequest(RegisterConfigRequest&& from) noexcept
    : RegisterConfigRequest() {
    *this = ::std::move(from);
  }

  inline RegisterConfigRequest& operator=(const RegisterConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RegisterConfigRequest& operator=(RegisterConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RegisterConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RegisterConfigRequest* internal_default_instance() {
    return reinterpret_cast<const RegisterConfigRequest*>(
               &_RegisterConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(RegisterConfigRequest& a, RegisterConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(RegisterConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RegisterConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RegisterConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<RegisterConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RegisterConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const RegisterConfigRequest& from) {
    RegisterConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RegisterConfigRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.RegisterConfigRequest";
  }
  protected:
  explicit RegisterConfigRequest(::google::protobuf::Arena* arena);
  RegisterConfigRequest(::google::protobuf::Arena* arena, const RegisterConfigRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigDefinitionFieldNumber = 1,
    kConfigCommentFieldNumber = 2,
  };
  // string config_definition = 1;
  void clear_config_definition() ;
  const std::string& config_definition() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config_definition(Arg_&& arg, Args_... args);
  std::string* mutable_config_definition();
  PROTOBUF_NODISCARD std::string* release_config_definition();
  void set_allocated_config_definition(std::string* value);

  private:
  const std::string& _internal_config_definition() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config_definition(
      const std::string& value);
  std::string* _internal_mutable_config_definition();

  public:
  // string config_comment = 2;
  void clear_config_comment() ;
  const std::string& config_comment() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_config_comment(Arg_&& arg, Args_... args);
  std::string* mutable_config_comment();
  PROTOBUF_NODISCARD std::string* release_config_comment();
  void set_allocated_config_comment(std::string* value);

  private:
  const std::string& _internal_config_comment() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_config_comment(
      const std::string& value);
  std::string* _internal_mutable_config_comment();

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.RegisterConfigRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      77, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr config_definition_;
    ::google::protobuf::internal::ArenaStringPtr config_comment_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetTemplateConfigResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.GetTemplateConfigResponse) */ {
 public:
  inline GetTemplateConfigResponse() : GetTemplateConfigResponse(nullptr) {}
  ~GetTemplateConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetTemplateConfigResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetTemplateConfigResponse(const GetTemplateConfigResponse& from)
      : GetTemplateConfigResponse(nullptr, from) {}
  GetTemplateConfigResponse(GetTemplateConfigResponse&& from) noexcept
    : GetTemplateConfigResponse() {
    *this = ::std::move(from);
  }

  inline GetTemplateConfigResponse& operator=(const GetTemplateConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTemplateConfigResponse& operator=(GetTemplateConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTemplateConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTemplateConfigResponse* internal_default_instance() {
    return reinterpret_cast<const GetTemplateConfigResponse*>(
               &_GetTemplateConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(GetTemplateConfigResponse& a, GetTemplateConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTemplateConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTemplateConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTemplateConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTemplateConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetTemplateConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetTemplateConfigResponse& from) {
    GetTemplateConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetTemplateConfigResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetTemplateConfigResponse";
  }
  protected:
  explicit GetTemplateConfigResponse(::google::protobuf::Arena* arena);
  GetTemplateConfigResponse(::google::protobuf::Arena* arena, const GetTemplateConfigResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.GetTemplateConfigResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      56, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetTemplateConfigRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szconfigmanager.GetTemplateConfigRequest) */ {
 public:
  inline GetTemplateConfigRequest() : GetTemplateConfigRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetTemplateConfigRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetTemplateConfigRequest(const GetTemplateConfigRequest& from)
      : GetTemplateConfigRequest(nullptr, from) {}
  GetTemplateConfigRequest(GetTemplateConfigRequest&& from) noexcept
    : GetTemplateConfigRequest() {
    *this = ::std::move(from);
  }

  inline GetTemplateConfigRequest& operator=(const GetTemplateConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetTemplateConfigRequest& operator=(GetTemplateConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetTemplateConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetTemplateConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetTemplateConfigRequest*>(
               &_GetTemplateConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(GetTemplateConfigRequest& a, GetTemplateConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetTemplateConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetTemplateConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetTemplateConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetTemplateConfigRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetTemplateConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetTemplateConfigRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetTemplateConfigRequest";
  }
  protected:
  explicit GetTemplateConfigRequest(::google::protobuf::Arena* arena);
  GetTemplateConfigRequest(::google::protobuf::Arena* arena, const GetTemplateConfigRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szconfigmanager.GetTemplateConfigRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetDefaultConfigIdResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.GetDefaultConfigIdResponse) */ {
 public:
  inline GetDefaultConfigIdResponse() : GetDefaultConfigIdResponse(nullptr) {}
  ~GetDefaultConfigIdResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDefaultConfigIdResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetDefaultConfigIdResponse(const GetDefaultConfigIdResponse& from)
      : GetDefaultConfigIdResponse(nullptr, from) {}
  GetDefaultConfigIdResponse(GetDefaultConfigIdResponse&& from) noexcept
    : GetDefaultConfigIdResponse() {
    *this = ::std::move(from);
  }

  inline GetDefaultConfigIdResponse& operator=(const GetDefaultConfigIdResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDefaultConfigIdResponse& operator=(GetDefaultConfigIdResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDefaultConfigIdResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDefaultConfigIdResponse* internal_default_instance() {
    return reinterpret_cast<const GetDefaultConfigIdResponse*>(
               &_GetDefaultConfigIdResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(GetDefaultConfigIdResponse& a, GetDefaultConfigIdResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDefaultConfigIdResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDefaultConfigIdResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDefaultConfigIdResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDefaultConfigIdResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetDefaultConfigIdResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetDefaultConfigIdResponse& from) {
    GetDefaultConfigIdResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetDefaultConfigIdResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetDefaultConfigIdResponse";
  }
  protected:
  explicit GetDefaultConfigIdResponse(::google::protobuf::Arena* arena);
  GetDefaultConfigIdResponse(::google::protobuf::Arena* arena, const GetDefaultConfigIdResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // int64 result = 1;
  void clear_result() ;
  ::int64_t result() const;
  void set_result(::int64_t value);

  private:
  ::int64_t _internal_result() const;
  void _internal_set_result(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.GetDefaultConfigIdResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetDefaultConfigIdRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szconfigmanager.GetDefaultConfigIdRequest) */ {
 public:
  inline GetDefaultConfigIdRequest() : GetDefaultConfigIdRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetDefaultConfigIdRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetDefaultConfigIdRequest(const GetDefaultConfigIdRequest& from)
      : GetDefaultConfigIdRequest(nullptr, from) {}
  GetDefaultConfigIdRequest(GetDefaultConfigIdRequest&& from) noexcept
    : GetDefaultConfigIdRequest() {
    *this = ::std::move(from);
  }

  inline GetDefaultConfigIdRequest& operator=(const GetDefaultConfigIdRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetDefaultConfigIdRequest& operator=(GetDefaultConfigIdRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetDefaultConfigIdRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetDefaultConfigIdRequest* internal_default_instance() {
    return reinterpret_cast<const GetDefaultConfigIdRequest*>(
               &_GetDefaultConfigIdRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(GetDefaultConfigIdRequest& a, GetDefaultConfigIdRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetDefaultConfigIdRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetDefaultConfigIdRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetDefaultConfigIdRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetDefaultConfigIdRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetDefaultConfigIdRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetDefaultConfigIdRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetDefaultConfigIdRequest";
  }
  protected:
  explicit GetDefaultConfigIdRequest(::google::protobuf::Arena* arena);
  GetDefaultConfigIdRequest(::google::protobuf::Arena* arena, const GetDefaultConfigIdRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szconfigmanager.GetDefaultConfigIdRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetConfigsResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.GetConfigsResponse) */ {
 public:
  inline GetConfigsResponse() : GetConfigsResponse(nullptr) {}
  ~GetConfigsResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigsResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConfigsResponse(const GetConfigsResponse& from)
      : GetConfigsResponse(nullptr, from) {}
  GetConfigsResponse(GetConfigsResponse&& from) noexcept
    : GetConfigsResponse() {
    *this = ::std::move(from);
  }

  inline GetConfigsResponse& operator=(const GetConfigsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigsResponse& operator=(GetConfigsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigsResponse* internal_default_instance() {
    return reinterpret_cast<const GetConfigsResponse*>(
               &_GetConfigsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(GetConfigsResponse& a, GetConfigsResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConfigsResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConfigsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConfigsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetConfigsResponse& from) {
    GetConfigsResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetConfigsResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetConfigsResponse";
  }
  protected:
  explicit GetConfigsResponse(::google::protobuf::Arena* arena);
  GetConfigsResponse(::google::protobuf::Arena* arena, const GetConfigsResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.GetConfigsResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      49, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetConfigsRequest final :
    public ::google::protobuf::internal::ZeroFieldsBase /* @@protoc_insertion_point(class_definition:szconfigmanager.GetConfigsRequest) */ {
 public:
  inline GetConfigsRequest() : GetConfigsRequest(nullptr) {}
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigsRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConfigsRequest(const GetConfigsRequest& from)
      : GetConfigsRequest(nullptr, from) {}
  GetConfigsRequest(GetConfigsRequest&& from) noexcept
    : GetConfigsRequest() {
    *this = ::std::move(from);
  }

  inline GetConfigsRequest& operator=(const GetConfigsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigsRequest& operator=(GetConfigsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigsRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigsRequest*>(
               &_GetConfigsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(GetConfigsRequest& a, GetConfigsRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConfigsRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConfigsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetConfigsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetConfigsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }
  public:

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetConfigsRequest";
  }
  protected:
  explicit GetConfigsRequest(::google::protobuf::Arena* arena);
  GetConfigsRequest(::google::protobuf::Arena* arena, const GetConfigsRequest& from);
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:szconfigmanager.GetConfigsRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetConfigResponse final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.GetConfigResponse) */ {
 public:
  inline GetConfigResponse() : GetConfigResponse(nullptr) {}
  ~GetConfigResponse() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigResponse(::google::protobuf::internal::ConstantInitialized);

  inline GetConfigResponse(const GetConfigResponse& from)
      : GetConfigResponse(nullptr, from) {}
  GetConfigResponse(GetConfigResponse&& from) noexcept
    : GetConfigResponse() {
    *this = ::std::move(from);
  }

  inline GetConfigResponse& operator=(const GetConfigResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigResponse& operator=(GetConfigResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigResponse* internal_default_instance() {
    return reinterpret_cast<const GetConfigResponse*>(
               &_GetConfigResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(GetConfigResponse& a, GetConfigResponse& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConfigResponse* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConfigResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConfigResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetConfigResponse& from) {
    GetConfigResponse::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetConfigResponse* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetConfigResponse";
  }
  protected:
  explicit GetConfigResponse(::google::protobuf::Arena* arena);
  GetConfigResponse(::google::protobuf::Arena* arena, const GetConfigResponse& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kResultFieldNumber = 1,
  };
  // string result = 1;
  void clear_result() ;
  const std::string& result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_result(Arg_&& arg, Args_... args);
  std::string* mutable_result();
  PROTOBUF_NODISCARD std::string* release_result();
  void set_allocated_result(std::string* value);

  private:
  const std::string& _internal_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_result(
      const std::string& value);
  std::string* _internal_mutable_result();

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.GetConfigResponse)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::internal::ArenaStringPtr result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};// -------------------------------------------------------------------

class GetConfigRequest final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:szconfigmanager.GetConfigRequest) */ {
 public:
  inline GetConfigRequest() : GetConfigRequest(nullptr) {}
  ~GetConfigRequest() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR GetConfigRequest(::google::protobuf::internal::ConstantInitialized);

  inline GetConfigRequest(const GetConfigRequest& from)
      : GetConfigRequest(nullptr, from) {}
  GetConfigRequest(GetConfigRequest&& from) noexcept
    : GetConfigRequest() {
    *this = ::std::move(from);
  }

  inline GetConfigRequest& operator=(const GetConfigRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetConfigRequest& operator=(GetConfigRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetConfigRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetConfigRequest* internal_default_instance() {
    return reinterpret_cast<const GetConfigRequest*>(
               &_GetConfigRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(GetConfigRequest& a, GetConfigRequest& b) {
    a.Swap(&b);
  }
  inline void Swap(GetConfigRequest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetConfigRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetConfigRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<GetConfigRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetConfigRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const GetConfigRequest& from) {
    GetConfigRequest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetConfigRequest* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "szconfigmanager.GetConfigRequest";
  }
  protected:
  explicit GetConfigRequest(::google::protobuf::Arena* arena);
  GetConfigRequest(::google::protobuf::Arena* arena, const GetConfigRequest& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kConfigIdFieldNumber = 1,
  };
  // int64 config_id = 1;
  void clear_config_id() ;
  ::int64_t config_id() const;
  void set_config_id(::int64_t value);

  private:
  ::int64_t _internal_config_id() const;
  void _internal_set_config_id(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:szconfigmanager.GetConfigRequest)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::int64_t config_id_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_szconfigmanager_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// GetConfigRequest

// int64 config_id = 1;
inline void GetConfigRequest::clear_config_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_id_ = ::int64_t{0};
}
inline ::int64_t GetConfigRequest::config_id() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.GetConfigRequest.config_id)
  return _internal_config_id();
}
inline void GetConfigRequest::set_config_id(::int64_t value) {
  _internal_set_config_id(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.GetConfigRequest.config_id)
}
inline ::int64_t GetConfigRequest::_internal_config_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_id_;
}
inline void GetConfigRequest::_internal_set_config_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_id_ = value;
}

// -------------------------------------------------------------------

// GetConfigResponse

// string result = 1;
inline void GetConfigResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetConfigResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.GetConfigResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetConfigResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.GetConfigResponse.result)
}
inline std::string* GetConfigResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.GetConfigResponse.result)
  return _s;
}
inline const std::string& GetConfigResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetConfigResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetConfigResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetConfigResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.GetConfigResponse.result)
  return _impl_.result_.Release();
}
inline void GetConfigResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.GetConfigResponse.result)
}

// -------------------------------------------------------------------

// GetConfigsRequest

// -------------------------------------------------------------------

// GetConfigsResponse

// string result = 1;
inline void GetConfigsResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetConfigsResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.GetConfigsResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetConfigsResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.GetConfigsResponse.result)
}
inline std::string* GetConfigsResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.GetConfigsResponse.result)
  return _s;
}
inline const std::string& GetConfigsResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetConfigsResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetConfigsResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetConfigsResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.GetConfigsResponse.result)
  return _impl_.result_.Release();
}
inline void GetConfigsResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.GetConfigsResponse.result)
}

// -------------------------------------------------------------------

// GetDefaultConfigIdRequest

// -------------------------------------------------------------------

// GetDefaultConfigIdResponse

// int64 result = 1;
inline void GetDefaultConfigIdResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t GetDefaultConfigIdResponse::result() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.GetDefaultConfigIdResponse.result)
  return _internal_result();
}
inline void GetDefaultConfigIdResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.GetDefaultConfigIdResponse.result)
}
inline ::int64_t GetDefaultConfigIdResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void GetDefaultConfigIdResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// GetTemplateConfigRequest

// -------------------------------------------------------------------

// GetTemplateConfigResponse

// string result = 1;
inline void GetTemplateConfigResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.ClearToEmpty();
}
inline const std::string& GetTemplateConfigResponse::result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.GetTemplateConfigResponse.result)
  return _internal_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetTemplateConfigResponse::set_result(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.GetTemplateConfigResponse.result)
}
inline std::string* GetTemplateConfigResponse::mutable_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_result();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.GetTemplateConfigResponse.result)
  return _s;
}
inline const std::string& GetTemplateConfigResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_.Get();
}
inline void GetTemplateConfigResponse::_internal_set_result(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_.Set(value, GetArena());
}
inline std::string* GetTemplateConfigResponse::_internal_mutable_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.result_.Mutable( GetArena());
}
inline std::string* GetTemplateConfigResponse::release_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.GetTemplateConfigResponse.result)
  return _impl_.result_.Release();
}
inline void GetTemplateConfigResponse::set_allocated_result(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.result_.IsDefault()) {
          _impl_.result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.GetTemplateConfigResponse.result)
}

// -------------------------------------------------------------------

// RegisterConfigRequest

// string config_definition = 1;
inline void RegisterConfigRequest::clear_config_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_definition_.ClearToEmpty();
}
inline const std::string& RegisterConfigRequest::config_definition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.RegisterConfigRequest.config_definition)
  return _internal_config_definition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterConfigRequest::set_config_definition(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_definition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.RegisterConfigRequest.config_definition)
}
inline std::string* RegisterConfigRequest::mutable_config_definition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_config_definition();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.RegisterConfigRequest.config_definition)
  return _s;
}
inline const std::string& RegisterConfigRequest::_internal_config_definition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_definition_.Get();
}
inline void RegisterConfigRequest::_internal_set_config_definition(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_definition_.Set(value, GetArena());
}
inline std::string* RegisterConfigRequest::_internal_mutable_config_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.config_definition_.Mutable( GetArena());
}
inline std::string* RegisterConfigRequest::release_config_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.RegisterConfigRequest.config_definition)
  return _impl_.config_definition_.Release();
}
inline void RegisterConfigRequest::set_allocated_config_definition(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_definition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.config_definition_.IsDefault()) {
          _impl_.config_definition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.RegisterConfigRequest.config_definition)
}

// string config_comment = 2;
inline void RegisterConfigRequest::clear_config_comment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_comment_.ClearToEmpty();
}
inline const std::string& RegisterConfigRequest::config_comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.RegisterConfigRequest.config_comment)
  return _internal_config_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RegisterConfigRequest::set_config_comment(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.RegisterConfigRequest.config_comment)
}
inline std::string* RegisterConfigRequest::mutable_config_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_config_comment();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.RegisterConfigRequest.config_comment)
  return _s;
}
inline const std::string& RegisterConfigRequest::_internal_config_comment() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_comment_.Get();
}
inline void RegisterConfigRequest::_internal_set_config_comment(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_comment_.Set(value, GetArena());
}
inline std::string* RegisterConfigRequest::_internal_mutable_config_comment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.config_comment_.Mutable( GetArena());
}
inline std::string* RegisterConfigRequest::release_config_comment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.RegisterConfigRequest.config_comment)
  return _impl_.config_comment_.Release();
}
inline void RegisterConfigRequest::set_allocated_config_comment(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.config_comment_.IsDefault()) {
          _impl_.config_comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.RegisterConfigRequest.config_comment)
}

// -------------------------------------------------------------------

// RegisterConfigResponse

// int64 result = 1;
inline void RegisterConfigResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t RegisterConfigResponse::result() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.RegisterConfigResponse.result)
  return _internal_result();
}
inline void RegisterConfigResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.RegisterConfigResponse.result)
}
inline ::int64_t RegisterConfigResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void RegisterConfigResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// ReplaceDefaultConfigIdRequest

// int64 current_default_config_id = 1;
inline void ReplaceDefaultConfigIdRequest::clear_current_default_config_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.current_default_config_id_ = ::int64_t{0};
}
inline ::int64_t ReplaceDefaultConfigIdRequest::current_default_config_id() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.ReplaceDefaultConfigIdRequest.current_default_config_id)
  return _internal_current_default_config_id();
}
inline void ReplaceDefaultConfigIdRequest::set_current_default_config_id(::int64_t value) {
  _internal_set_current_default_config_id(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.ReplaceDefaultConfigIdRequest.current_default_config_id)
}
inline ::int64_t ReplaceDefaultConfigIdRequest::_internal_current_default_config_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.current_default_config_id_;
}
inline void ReplaceDefaultConfigIdRequest::_internal_set_current_default_config_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.current_default_config_id_ = value;
}

// int64 new_default_config_id = 2;
inline void ReplaceDefaultConfigIdRequest::clear_new_default_config_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.new_default_config_id_ = ::int64_t{0};
}
inline ::int64_t ReplaceDefaultConfigIdRequest::new_default_config_id() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.ReplaceDefaultConfigIdRequest.new_default_config_id)
  return _internal_new_default_config_id();
}
inline void ReplaceDefaultConfigIdRequest::set_new_default_config_id(::int64_t value) {
  _internal_set_new_default_config_id(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.ReplaceDefaultConfigIdRequest.new_default_config_id)
}
inline ::int64_t ReplaceDefaultConfigIdRequest::_internal_new_default_config_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.new_default_config_id_;
}
inline void ReplaceDefaultConfigIdRequest::_internal_set_new_default_config_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.new_default_config_id_ = value;
}

// -------------------------------------------------------------------

// ReplaceDefaultConfigIdResponse

// -------------------------------------------------------------------

// SetDefaultConfigRequest

// string config_definition = 1;
inline void SetDefaultConfigRequest::clear_config_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_definition_.ClearToEmpty();
}
inline const std::string& SetDefaultConfigRequest::config_definition() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.SetDefaultConfigRequest.config_definition)
  return _internal_config_definition();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetDefaultConfigRequest::set_config_definition(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_definition_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.SetDefaultConfigRequest.config_definition)
}
inline std::string* SetDefaultConfigRequest::mutable_config_definition() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_config_definition();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.SetDefaultConfigRequest.config_definition)
  return _s;
}
inline const std::string& SetDefaultConfigRequest::_internal_config_definition() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_definition_.Get();
}
inline void SetDefaultConfigRequest::_internal_set_config_definition(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_definition_.Set(value, GetArena());
}
inline std::string* SetDefaultConfigRequest::_internal_mutable_config_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.config_definition_.Mutable( GetArena());
}
inline std::string* SetDefaultConfigRequest::release_config_definition() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.SetDefaultConfigRequest.config_definition)
  return _impl_.config_definition_.Release();
}
inline void SetDefaultConfigRequest::set_allocated_config_definition(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_definition_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.config_definition_.IsDefault()) {
          _impl_.config_definition_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.SetDefaultConfigRequest.config_definition)
}

// string config_comment = 2;
inline void SetDefaultConfigRequest::clear_config_comment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_comment_.ClearToEmpty();
}
inline const std::string& SetDefaultConfigRequest::config_comment() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:szconfigmanager.SetDefaultConfigRequest.config_comment)
  return _internal_config_comment();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SetDefaultConfigRequest::set_config_comment(Arg_&& arg,
                                                     Args_... args) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_comment_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:szconfigmanager.SetDefaultConfigRequest.config_comment)
}
inline std::string* SetDefaultConfigRequest::mutable_config_comment() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_config_comment();
  // @@protoc_insertion_point(field_mutable:szconfigmanager.SetDefaultConfigRequest.config_comment)
  return _s;
}
inline const std::string& SetDefaultConfigRequest::_internal_config_comment() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_comment_.Get();
}
inline void SetDefaultConfigRequest::_internal_set_config_comment(const std::string& value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_comment_.Set(value, GetArena());
}
inline std::string* SetDefaultConfigRequest::_internal_mutable_config_comment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  return _impl_.config_comment_.Mutable( GetArena());
}
inline std::string* SetDefaultConfigRequest::release_config_comment() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  // @@protoc_insertion_point(field_release:szconfigmanager.SetDefaultConfigRequest.config_comment)
  return _impl_.config_comment_.Release();
}
inline void SetDefaultConfigRequest::set_allocated_config_comment(std::string* value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_comment_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.config_comment_.IsDefault()) {
          _impl_.config_comment_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:szconfigmanager.SetDefaultConfigRequest.config_comment)
}

// -------------------------------------------------------------------

// SetDefaultConfigResponse

// int64 result = 1;
inline void SetDefaultConfigResponse::clear_result() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.result_ = ::int64_t{0};
}
inline ::int64_t SetDefaultConfigResponse::result() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.SetDefaultConfigResponse.result)
  return _internal_result();
}
inline void SetDefaultConfigResponse::set_result(::int64_t value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.SetDefaultConfigResponse.result)
}
inline ::int64_t SetDefaultConfigResponse::_internal_result() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.result_;
}
inline void SetDefaultConfigResponse::_internal_set_result(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.result_ = value;
}

// -------------------------------------------------------------------

// SetDefaultConfigIdRequest

// int64 config_id = 1;
inline void SetDefaultConfigIdRequest::clear_config_id() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.config_id_ = ::int64_t{0};
}
inline ::int64_t SetDefaultConfigIdRequest::config_id() const {
  // @@protoc_insertion_point(field_get:szconfigmanager.SetDefaultConfigIdRequest.config_id)
  return _internal_config_id();
}
inline void SetDefaultConfigIdRequest::set_config_id(::int64_t value) {
  _internal_set_config_id(value);
  // @@protoc_insertion_point(field_set:szconfigmanager.SetDefaultConfigIdRequest.config_id)
}
inline ::int64_t SetDefaultConfigIdRequest::_internal_config_id() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.config_id_;
}
inline void SetDefaultConfigIdRequest::_internal_set_config_id(::int64_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.config_id_ = value;
}

// -------------------------------------------------------------------

// SetDefaultConfigIdResponse

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace szconfigmanager


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_szconfigmanager_2eproto_2epb_2eh
